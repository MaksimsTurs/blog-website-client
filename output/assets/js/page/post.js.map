{"version":3,"file":"post.js","sources":["../../../../src/page/post/component/previewAuthorDataLoader.tsx","../../../../src/page/post/component/previewAuthorData.tsx","../../../../src/page/post/page.tsx"],"sourcesContent":["import scss from '../scss/previewAuthorDataLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PreviewAuthorDataLoader() {\r\n  return(\r\n    <div className='main-content-container flex-column-center-center-medium'>\r\n      <div className={scss.author_preview_loader_avatar}></div>\r\n      <div style={{ width: '6rem', height: '1rem' }} className={scss.author_preview_loader_text}></div>\r\n      <div style={{ width: '4rem', height: '1rem'  }} className={scss.author_preview_loader_text}></div>\r\n      <div style={{ width: '12rem', height: '1rem'  }} className={scss.author_preview_loader_text}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/previewAuthorData.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { ShieldHalf } from 'lucide-react'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nimport type { PreviewAuthorDataProps } from '../page.type'\r\n\r\nexport default function PreviewAuthorData({ author }: PreviewAuthorDataProps) {\r\n  const color = author.role === 'Admin' ? '#F48023' : '#1682FD'\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(author.createdAt)\r\n    .getSortDate({\r\n      year: '[year] year [month] months ago!',\r\n      month: '[month] month [day] days ago!',\r\n      day: '[day] day [hour] hours ago!',\r\n      hour: '[hour] hour [minute] minutes ago!',\r\n      minute: 'days [minute] minutes [second] seconds ago!',\r\n      second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <div style={{ height: 'fit-content', flexShrink: 0 }} className='flex-column-center-normal-none main-content-container'>\r\n      <ImageComponent classNames={{ img: scss.author_avatar }} src={author.avatar} alt={author.name}/>\r\n      <div className='flex-column-center-normal-none'>\r\n        <Link to={`/user/${author._id}`} className={scss.author_name}>{author.name}</Link>\r\n        <div className='flex-row-center-center-medium' style={{ color }}>\r\n          <ShieldHalf size={17}/>\r\n          <p className={scss.author_role}>{author.role}</p>\r\n        </div>\r\n        <p className={scss.author_registrate_data}>{createdAtDifference}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from './page.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Fragment } from 'react/jsx-runtime'\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\n// import CommentContainer from \"./component/commentContainer\"\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport PageError from \"@/component/errors/page-error/pageError\"\r\nimport PreviewAuthorData from './component/previewAuthorData'\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\"\r\nimport PreviewAuthorDataLoader from './component/previewAuthorDataLoader'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport Empty from '@/component/empty/empty'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\n\r\n// import useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata'\r\n\r\nimport { AUTHORIZATION_OBJECT } from '@/conts'\r\n\r\nexport default function Post() {\r\n  const { id } = useParams()\r\n  \r\n  // const searchParams = useSearchParams()\r\n\r\n  // const page: number = parseInt(searchParams.get(URL_SEARCH_PARAMS['PAGE']) || '0')\r\n  \r\n  const { data, isPending, isMutating, isFetching, error } = useRequest<Content>({ \r\n    deps: [`post-${id}`], \r\n    request: async () => fetcher.get<Content>(`/post/${id}`, AUTHORIZATION_OBJECT) \r\n  })\r\n\r\n  useMetadata({ title: data?.title, description: 'Hier kannst du vollständige version von gewählte post sehen und ihn kommentieren.' })\r\n  \r\n  return(\r\n    <Fragment>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      {error ? <PageError error={error}/> :\r\n      <div className={`${scss.post_page_container} flex-row-normal-normal-medium`}>\r\n        <div style={{ flexGrow: '1' }} className='flex-column-normal-normal-medium'> \r\n          <Fragment>\r\n            {isPending ? <PostContainerLoader/> : <PostContainer post={data!} type=\"post\"/>}\r\n            <Empty option={{ height: 'FULL', flexCenterCenter: true }} label='Kommentar funktion ist zu zeit aus!'/>\r\n            {/* <CommentContainer page={page} postID={id!} isPostHidden={data?.isHidden || false}/> */}\r\n          </Fragment>\r\n        </div>\r\n        {isFetching ? <PreviewAuthorDataLoader/> : (data && data?.author) ? <PreviewAuthorData author={data!.author}/> : null}\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["PreviewAuthorDataLoader","jsxs","className","children","jsx","scss","author_preview_loader_avatar","style","width","height","author_preview_loader_text","PreviewAuthorData","author","color","role","createdAtDifference","DateParser","getDifference","createdAt","getSortDate","year","month","day","hour","minute","second","flexShrink","ImageComponent","classNames","img","author_avatar","src","avatar","alt","name","Link","to","_id","author_name","ShieldHalf","size","author_role","author_registrate_data","id","useParams","data","isPending","isMutating","isFetching","error","useRequest","deps","request","async","fetcher","get","AUTHORIZATION_OBJECT","useMetadata","title","description","Fragment","MutatingLoader","PageError","flexGrow","PostContainerLoader","PostContainer","post","type","Empty","option","flexCenterCenter","label"],"mappings":"oSAGA,SAAwBA,IAEpB,OAAAC,EAAAA,KAAC,MAAI,CAAAC,UAAU,0DACbC,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAIF,UAAWG,EAAKC,+BACrBF,EAAAA,IAAC,MAAI,CAAAG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAUP,UAAWG,EAAKK,6BAC/DN,EAAAA,IAAC,MAAI,CAAAG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAWP,UAAWG,EAAKK,6BAChEN,EAAAA,IAAC,MAAI,CAAAG,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAAWP,UAAWG,EAAKK,+BAGvE,iFCAwB,SAAAC,GAAkBC,OAAEA,IAC1C,MAAMC,EAAwB,UAAhBD,EAAOE,KAAmB,UAAY,UAE9CC,EAA8BC,EACjCC,cAAcL,EAAOM,WACrBC,YAAY,CACXC,KAAM,kCACNC,MAAO,gCACPC,IAAK,8BACLC,KAAM,oCACNC,OAAQ,8CACRC,OAAQ,0BAIV,OAAAxB,OAAC,MAAI,CAAAM,MAAO,CAAEE,OAAQ,cAAeiB,WAAY,GAAKxB,UAAU,wDAC9DC,SAAA,CAAAC,EAAAA,IAACuB,EAAe,CAAAC,WAAY,CAAEC,IAAKxB,EAAKyB,eAAiBC,IAAKnB,EAAOoB,OAAQC,IAAKrB,EAAOsB,OACzFjC,EAAAA,KAAC,MAAI,CAAAC,UAAU,iCACbC,SAAA,CAACC,EAAAA,IAAA+B,EAAA,CAAKC,GAAI,SAASxB,EAAOyB,MAAOnC,UAAWG,EAAKiC,YAAcnC,SAAAS,EAAOsB,cACrE,MAAI,CAAAhC,UAAU,gCAAgCK,MAAO,CAAEM,SACtDV,SAAA,CAACC,EAAAA,IAAAmC,EAAA,CAAWC,KAAM,WACjB,IAAE,CAAAtC,UAAWG,EAAKoC,YAActC,WAAOW,UAEzCV,EAAAA,IAAA,IAAA,CAAEF,UAAWG,EAAKqC,uBAAyBvC,SAAoBY,SAIxE,qECdA,WACQ,MAAA4B,GAAEA,GAAOC,KAMTC,KAAEA,EAAMC,UAAAA,EAAAC,WAAWA,aAAYC,EAAYC,MAAAA,GAAUC,EAAoB,CAC7EC,KAAM,CAAC,QAAQR,KACfS,QAASC,SAAYC,EAAQC,IAAa,SAASZ,IAAMa,KAK3D,OAFAC,EAAY,CAAEC,MAAOb,GAAMa,MAAOC,YAAa,6FAG5CC,WACE,CAAAzD,SAAA,CAAa4C,EAAA3C,EAAAA,IAACyD,MAAmB,KACjCZ,EAAS7C,EAAAA,IAAA0D,EAAA,CAAUb,UACnBhD,EAAAA,KAAA,MAAA,CAAIC,UAAW,GAAGG,kCACjBF,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAIG,MAAO,CAAEwD,SAAU,KAAO7D,UAAU,mCACvCC,SAAAF,EAAAA,KAAC2D,EACEA,SAAA,CAAAzD,SAAA,CAAY2C,EAAA1C,EAAAA,IAAC4D,MAAwB5D,EAAAA,IAAC6D,GAAcC,KAAMrB,EAAOsB,KAAK,SACvE/D,EAAAA,IAACgE,EAAM,CAAAC,OAAQ,CAAE5D,OAAQ,OAAQ6D,kBAAkB,GAAQC,MAAM,6CAIpEvB,EAAa5C,EAAAA,IAACJ,EAAuB,CAAA,GAAM6C,GAAQA,GAAMjC,OAAUR,EAAAA,IAACO,EAAkB,CAAAC,OAAQiC,EAAMjC,SAAY,UAIzH"}