{"version":3,"file":"post.js","sources":["../../../../src/page/post/component/previewAuthorDataLoader.tsx","../../../../src/page/post/component/commentContainer.tsx","../../../../src/page/post/component/previewAuthorData.tsx","../../../../src/page/post/page.tsx"],"sourcesContent":["import scss from '../scss/previewAuthorDataLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PreviewAuthorDataLoader() {\r\n  return(\r\n    <div className='main-content-container flex-column-center-center-medium'>\r\n      <div className={scss.author_preview_loader_avatar}></div>\r\n      <div style={{ width: '6rem', height: '1rem' }} className={scss.author_preview_loader_text}></div>\r\n      <div style={{ width: '4rem', height: '1rem'  }} className={scss.author_preview_loader_text}></div>\r\n      <div style={{ width: '12rem', height: '1rem'  }} className={scss.author_preview_loader_text}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/commentContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Fragment } from \"react/jsx-runtime\";\r\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\r\nimport { useRef, useState } from 'react';\r\n\r\nimport type { CommentContainerProps, PostCommentsData } from \"../page.type\";\r\nimport type { Content, CustomInputsRef } from '@/global.type';\r\n\r\nimport Empty from \"@/component/empty/empty\";\r\nimport PostContainer from \"@/component/post-container/postContainer\";\r\nimport FormWrapper from \"@/component/form-wrapper/formWrapper\";\r\nimport TextArea from \"@/component/input/textArea/textArea\";\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader';\r\nimport Button from '@/component/buttons/button/button';\r\n\r\nimport useForm from \"@/custom-hook/use-form/useForm\";\r\nimport useMutate from '@/custom-hook/use-request/useMutate';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport usePermitor from '@/custom-hook/use-permitor/useHavePermission';\r\nimport useAuth from '@/custom-hook/use-auth/useAuth';\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport Arrays from '@/lib/array/array';\r\n\r\nexport default function CommentContainer({ isPostHidden, comments }: CommentContainerProps) {\r\n  const redirect = useNavigate()\r\n  const { id } = useParams()\r\n  const textAreaRef = useRef<CustomInputsRef<string>>()\r\n  const [quotes, setToQuotes] = useState<Content[]>([])\r\n\r\n  const { submit } = useForm<Pick<Content, 'content'>>()\r\n  const searchParams = useSearchParams()\r\n  const isAdmin = usePermitor().role(['Admin']).permited()\r\n  const auth = useAuth()\r\n\r\n  if(isPostHidden && !isAdmin) return <Navigate to='/'/>\r\n\r\n  const page: number = parseInt(searchParams.get(URL_SEARCH_PARAMS['PAGE']) || '0')\r\n\r\n  const { isMutating, mutate, changeError } = useMutate<PostCommentsData>(`post-${id}-comments-${page}`)\r\n\r\n  const insertComment = () => {\r\n    const increment: boolean = (comments || []).length >= 10\r\n\r\n    mutate(async (option) => {\r\n      if((page + 1) < (option.state?.pagesCount || 0)) {\r\n        changeError({ code: 500, message: 'Du muss auf letzte seite sein um Kommentar zu hinzufÃ¼gen!' })\r\n        return undefined\r\n      }\r\n\r\n      const comment = await fetcher.post<Content>('/insert/comment', { postID: id, content: textAreaRef.current?.value, quotes }, AUTHORIZATION_OBJECT) \r\n      \r\n      if(increment) {\r\n        redirect(`/post/${id}?page=${page + 1}`)\r\n        return { pagesCount: (page || 1) + 1, comments: option.state?.comments || [] }\r\n      } else return { pagesCount: option.state?.pagesCount || 0, comments: [...option.state?.comments || [], comment] }\r\n    })\r\n\r\n    textAreaRef.current?.clear()\r\n    setToQuotes([])\r\n  } \r\n\r\n  return(\r\n    <Fragment>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      {comments!.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"Keinen Kommentar wurde gefunden!\"/> :\r\n       comments!.map(comment => \r\n        <PostContainer \r\n          type=\"comment\"\r\n          key={comment._id} \r\n          post={comment} \r\n          setToQuote={setToQuotes} \r\n          isQuoted={Arrays.includeObjectByKey(quotes, '_id', comment._id)}/>\r\n      )}\r\n      {auth.user &&\r\n      <FormWrapper onSubmit={submit(insertComment)} isPending={isMutating} className={scss.comment_form_body}>\r\n        <TextArea placeholder='Write your comment here...' ref={textAreaRef}/>\r\n        <Button className={scss.comment_submit_button} type='submit'>Senden</Button>\r\n      </FormWrapper>}\r\n    </Fragment>\r\n  )\r\n} ","import scss from '../scss/previewAuthorData.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { ShieldHalf } from 'lucide-react'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nimport type { PreviewAuthorDataProps } from '../page.type'\r\n\r\nexport default function PreviewAuthorData({ author }: PreviewAuthorDataProps) {\r\n  const color = author.role === 'Admin' ? '#F48023' : '#1682FD'\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(author.createdAt)\r\n    .getSortDate({\r\n      year: '[year] year [month] months ago!',\r\n      month: '[month] month [day] days ago!',\r\n      day: '[day] day [hour] hours ago!',\r\n      hour: '[hour] hour [minute] minutes ago!',\r\n      minute: 'days [minute] minutes [second] seconds ago!',\r\n      second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <div style={{ height: 'fit-content', flexShrink: 0 }} className='flex-column-center-normal-none main-content-container'>\r\n      <ImageComponent classNames={{ img: scss.author_avatar, svg: scss.author_avatar }} src={author.avatar} alt={author.name}/>\r\n      <div className='flex-column-center-normal-none'>\r\n        <Link to={`/user/${author._id}`} className={scss.author_name}>{author.name}</Link>\r\n        <div className='flex-row-center-center-medium' style={{ color }}>\r\n          <ShieldHalf size={17}/>\r\n          <p className={scss.author_role}>{author.role}</p>\r\n        </div>\r\n        <p className={scss.author_registrate_data}>{createdAtDifference}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from './page.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Fragment } from 'react/jsx-runtime'\r\nimport { memo } from 'react'\r\n\r\nimport type { PostCommentsData } from './page.type'\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport _PostContainer from \"@/component/post-container/postContainer\"\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\"\r\nimport CommentContainer from \"./component/commentContainer\"\r\nimport PageError from \"@/component/errors/page-error/pageError\"\r\nimport PreviewAuthorData from './component/previewAuthorData'\r\nimport PreviewAuthorDataLoader from './component/previewAuthorDataLoader'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport Pagination from '@/component/pagination/pagination'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nconst PostContainer = memo(_PostContainer)\r\n\r\nexport default function Post() {\r\n  const { id } = useParams()\r\n  \r\n  const searchParams = useSearchParams()\r\n\r\n  const page: number = parseInt(searchParams.get(URL_SEARCH_PARAMS['PAGE']) || '0')\r\n  \r\n  const requestKey: string[] = [`post-${id}-comments-${page}`]\r\n  const prevKey: string[] = [`post-${id}-comments-${(+page - 1) <= 0 ? 0 : +page - 1}`]\r\n\r\n  const post = useRequest<Content>({ deps: [`post-${id}`], request: async () => fetcher.get<Content>(`/post/${id}`, AUTHORIZATION_OBJECT) })\r\n  const comments = useRequest<PostCommentsData>({ deps: requestKey, prev: prevKey, request: async () => await fetcher.get(`/post/${id}/comments/${page}`) })\r\n\r\n  const pagesCount: number = comments.prev?.pagesCount || comments.data?.pagesCount || 0\r\n  \r\n  return(\r\n    <Fragment>\r\n      {post.isMutating ? <MutatingLoader/> : null}\r\n      {post.error ? <PageError error={post.error}/> :\r\n      <div className={`${scss.post_page_container} flex-row-normal-normal-medium`}>\r\n        <div className={`${scss.post_page_body} flex-column-normal-normal-medium`}> \r\n          <Fragment>\r\n            {post.isPending ? <PostContainerLoader/> : !post.data ? <PageError error={{ code: 404, message: 'Post not found!' }}/> : <PostContainer post={post.data!} type=\"post\"/>}\r\n            {/* {pagesCount > 2 && <Pagination pagesCount={pagesCount} disableOn/>} */}\r\n            <CommentContainer comments={comments.data?.comments || []} isPostHidden={post.data?.isHidden || false}/>\r\n            {/* {pagesCount > 2 && <Pagination pagesCount={pagesCount} disableOn/>} */}\r\n          </Fragment>\r\n        </div>\r\n        {post.isFetching ? <PreviewAuthorDataLoader/> : (post.data && post.data?.author) ? <PreviewAuthorData author={post.data!.author}/> : null}\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["PreviewAuthorDataLoader","jsxs","className","children","jsx","scss","style","width","height","CommentContainer","isPostHidden","comments","redirect","useNavigate","id","useParams","textAreaRef","useRef","quotes","setToQuotes","useState","submit","useForm","searchParams","useSearchParams","isAdmin","usePermitor","role","permited","auth","useAuth","Navigate","to","page","parseInt","get","URL_SEARCH_PARAMS","isMutating","mutate","changeError","useMutate","Fragment","MutatingLoader","length","Empty","option","flexCenterCenter","label","map","comment","PostContainer","type","post","setToQuote","isQuoted","Arrays","includeObjectByKey","_id","user","FormWrapper","onSubmit","increment","async","state","pagesCount","code","message","fetcher","postID","content","current","value","AUTHORIZATION_OBJECT","clear","isPending","TextArea","placeholder","ref","Button","PreviewAuthorData","author","color","createdAtDifference","DateParser","getDifference","createdAt","getSortDate","year","month","day","hour","minute","second","flexShrink","ImageComponent","classNames","img","author_avatar","svg","src","avatar","alt","name","Link","author_name","ShieldHalf","size","author_role","author_registrate_data","memo","_PostContainer","requestKey","prevKey","useRequest","deps","request","prev","data","error","PageError","PostContainerLoader","isHidden","isFetching"],"mappings":"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"}