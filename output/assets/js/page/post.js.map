{"version":3,"file":"post.js","sources":["../../../../src/page/post/component/previewAuthorDataLoader.tsx","../../../../src/page/post/component/commentsLoader.tsx","../../../../src/page/post/component/commentContainer.tsx","../../../../src/page/post/component/previewAuthorData.tsx","../../../../src/page/post/page.tsx","../../../../src/custom-hook/use-metadata/useTitle.ts"],"sourcesContent":["import scss from '../scss/previewAuthorDataLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PreviewAuthorDataLoader() {\r\n  return(\r\n    <div className='main-content-container flex-column-center-center-medium'>\r\n      <div className={scss.author_preview_loader_avatar}></div>\r\n      <div style={{ width: '6rem', height: '1rem' }} className={scss.author_preview_loader_text}></div>\r\n      <div style={{ width: '4rem', height: '1rem'  }} className={scss.author_preview_loader_text}></div>\r\n      <div style={{ width: '12rem', height: '1rem'  }} className={scss.author_preview_loader_text}></div>\r\n    </div>\r\n  )\r\n}","import { Fragment } from \"react/jsx-runtime\";\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nexport default function CommentsLoader() {\r\n  return(\r\n    <Fragment>\r\n      <PostContainerLoader/>\r\n      <PostContainerLoader/>\r\n    </Fragment>\r\n  )\r\n}","import scss from '../scss/commentContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Fragment } from \"react/jsx-runtime\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport type { CommentContainerProps, PostCommentsData } from \"../page.type\";\r\nimport type { Content } from '@/global.type';\r\n\r\nimport Pagination from \"@/component/pagination/pagination\";\r\nimport Empty from \"@/component/empty/empty\";\r\nimport PostContainer from \"@/component/post-container/postContainer\";\r\nimport FormWrapper from \"@/component/form-wrapper/formWrapper\";\r\nimport TextArea from \"@/component/input/textArea/textArea\";\r\nimport PaginationLoader from '@/component/pagination/component/paginationLoader';\r\nimport ModalError from '@/component/modal-error/modalError';\r\nimport CommentsLoader from './commentsLoader';\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader';\r\n\r\nimport useForm from \"@/custom-hook/useForm/useForm\";\r\nimport useAuth from '@/custom-hook/useAuth/useAuth';\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\n\r\nexport default function CommentContainer({ page, postID, isPostHidden }: CommentContainerProps) {\r\n  const { submit } = useForm<Pick<Content, 'content'>>([])\r\n  const auth = useAuth()\r\n  const redirect = useNavigate()\r\n\r\n  const requestKey = [`post-${postID}-comments-${page}`]\r\n\r\n  const { isMutating, isPending, isFetching, error, prev, data, mutate, changeError } = useRequest<PostCommentsData>({\r\n    deps: requestKey,\r\n    prev: [`post-${postID}-comments-${(+page - 1) <= 0 ? 0 : +page - 1}`],\r\n    request: async () => await fetcher.get(`/post/${postID}/comments/${page}`),\r\n  })\r\n\r\n  const insertComment = (commentData: any) => {\r\n    delete commentData.alt\r\n    delete commentData.url\r\n    delete commentData.uploadImg\r\n\r\n    const increment = (data?.comments || []).length >= 10\r\n\r\n    mutate({\r\n      key: requestKey,\r\n      request: async (option) => {\r\n        if((page + 1) < (option.state?.pagesCount || 0)) {\r\n          changeError(option.deps, { code: 500, message: 'You need to be on the latest page to create comment!' })\r\n          return undefined\r\n        }\r\n\r\n        const comment = await fetcher.post<Content>('/insert/comment', {...commentData, postID }, { 'Authorization': `Bearer ${auth?.user?.token}` }) \r\n        \r\n        if(increment) {\r\n          redirect(`/post/${postID}?page=${page + 1}`)\r\n          return { pagesCount: (page || 1) + 1, comments: option.state?.comments || [] }\r\n        } else {\r\n          return { pagesCount: option.state?.pagesCount || 0, comments: [...option.state?.comments || [], comment] }\r\n        }\r\n      }\r\n    })\r\n  } \r\n\r\n  const removeError = (): void => {\r\n    changeError(requestKey)\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      <ModalError removeError={removeError} error={error}/>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      {isFetching ? <PaginationLoader/> : ((prev || data)?.pagesCount || 0) > 0 ? <Pagination disableOn={isPending} pagesCount={(prev || data)!.pagesCount || 0}/> : null}      \r\n      {isFetching ? <CommentsLoader/> :\r\n       data!.comments.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"No comments found!\"/> :\r\n       data!.comments.map(comment => <PostContainer key={comment._id} post={comment} type=\"comment\"/>)}\r\n      {isFetching ? <PaginationLoader/> : ((prev || data)?.pagesCount || 0) > 0 ? <Pagination pagesCount={(prev ||data)!.pagesCount || 0}/> : null}      \r\n      {(auth.user && !isPostHidden) ? \r\n       <div className='flex-row-center-center-none'>\r\n         <FormWrapper onSubmit={submit(insertComment)} isPending={isMutating} className={scss.comment_form_body} buttonLabel='Write comment'>\r\n           <TextArea placeholder='Write your comment here...'/>\r\n         </FormWrapper>\r\n       </div> : null}\r\n    </Fragment>\r\n  )\r\n} ","import scss from '../scss/previewAuthorData.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\n\r\nimport type { PreviewAuthorDataProps } from '../page.type'\r\nimport { ShieldHalf } from 'lucide-react'\r\n\r\nexport default function PreviewAuthorData({ author }: PreviewAuthorDataProps) {\r\n  const color = author.role === 'Admin' ? '#F48023' : '#1682FD'\r\n\r\n  return(\r\n    <div style={{ height: 'fit-content', flexShrink: 0 }} className='flex-column-center-normal-none main-content-container'>\r\n      <img src={author.avatar} alt={author.name} />\r\n      <div className='flex-column-center-normal-none'>\r\n        <Link to={`/user/${author._id}`} className={scss.author_name}>{author.name}</Link>\r\n        <div className='flex-row-center-center-medium' style={{ color }}>\r\n          <ShieldHalf size={17}/>\r\n          <p className={scss.author_role}>{author.role}</p>\r\n        </div>\r\n        <p className={scss.author_registrate_data}>{DateParser.getDifference(author.createdAt)}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Fragment } from 'react/jsx-runtime'\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport Error from \"@/component/error/error\"\r\nimport CommentContainer from \"./component/commentContainer\"\r\nimport PreviewAuthorData from './component/previewAuthorData'\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\"\r\nimport PreviewAuthorDataLoader from './component/previewAuthorDataLoader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useDocumentTitle from '@/custom-hook/use-metadata/useTitle'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\n\r\nexport default function Post() {\r\n  const { id } = useParams()\r\n  const page: number = parseInt(useSearchParams().get('page') || '0')\r\n  \r\n  const { data, isPending, isMutating, isFetching, error } = useRequest<Content>({ deps: [`post-${id}`], request: async () => fetcher.get<Content>(`/post/${id}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` }) })\r\n\r\n  useDocumentTitle(data?.title)\r\n  \r\n  return(\r\n    <Fragment>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      <div style={{ height: '100%' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ flexGrow: '1' }} className='flex-column-normal-normal-medium'>\r\n          {error ? \r\n           <Error code={error.code} message={error.message}/> : \r\n            <Fragment>\r\n              {isPending ? <PostContainerLoader/> : <PostContainer post={data!} type=\"post\"/>}\r\n              <CommentContainer page={page} postID={id!} isPostHidden={data?.isHidden || false}/>\r\n            </Fragment>}\r\n        </div>\r\n        {isFetching ? <PreviewAuthorDataLoader/> : (data && data?.author) ? <PreviewAuthorData author={data!.author}/> : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}","import { useEffect } from \"react\";\r\n\r\nexport default function useDocumentTitle(title?: string) {\r\n  useEffect(() => {\r\n    if(title) document.title = title\r\n  }, [title])\r\n}"],"names":["PreviewAuthorDataLoader","jsxs","className","children","jsx","scss","author_preview_loader_avatar","style","width","height","author_preview_loader_text","CommentsLoader","Fragment","PostContainerLoader","CommentContainer","page","postID","isPostHidden","submit","useForm","auth","useAuth","redirect","useNavigate","requestKey","isMutating","isPending","isFetching","error","prev","data","mutate","changeError","useRequest","deps","request","async","fetcher","get","ModalError","removeError","MutatingLoader","PaginationLoader","pagesCount","Pagination","disableOn","comments","length","Empty","option","flexCenterCenter","label","map","comment","PostContainer","post","type","_id","user","FormWrapper","onSubmit","commentData","alt","url","uploadImg","increment","key","state","code","message","Authorization","token","comment_form_body","buttonLabel","TextArea","placeholder","PreviewAuthorData","author","color","role","flexShrink","src","avatar","name","Link","to","author_name","ShieldHalf","size","author_role","author_registrate_data","DateParser","getDifference","createdAt","id","useParams","parseInt","useSearchParams","coockie","getOne","title","useEffect","flexGrow","Error","isHidden"],"mappings":"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"}