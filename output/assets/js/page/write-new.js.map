{"version":3,"file":"write-new.js","sources":["../../../../src/store/creator/creator.ts","../../../../src/page/write-new/loader.tsx","../../../../src/component/input/textArea/textArea.tsx","../../../../src/component/input/textArea/areaValidation.ts","../../../../src/component/input/textArea/fetch/uploadAsset.ts","../../../../src/component/input/checkbox-input/checkBoxInput.tsx","../../../../src/page/write-new/page.tsx"],"sourcesContent":["import { type PayloadAction, createSlice } from '@reduxjs/toolkit'\r\n\r\nimport type { ContentDraft, CreatorState } from './creator.type'\r\n\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nconst initState: CreatorState = {\r\n  contentDraft: localStorage.get('content-draft', '[]')  \r\n}\r\n\r\nconst slice = createSlice({\r\n  name: 'creator',\r\n  initialState: initState,\r\n  reducers: {\r\n    editOrinsertContentDraft: (state, { payload }: PayloadAction<ContentDraft>) => {\r\n      if(state.contentDraft.length === 0) return localStorage.set('content-draft', state.contentDraft = [payload])\r\n\r\n      const currentDraft = state.contentDraft.find((content, index) => content._id === payload._id ? { _id: content._id, index } : undefined)\r\n\r\n      if(currentDraft) {\r\n        localStorage.set('content-draft', state.contentDraft = state.contentDraft.map(content => content._id === payload._id ? payload : content))\r\n      } else {\r\n        localStorage.set('content-draft', state.contentDraft = [...state.contentDraft, payload])\r\n      }\r\n    },\r\n    removeContentDraft: (state, { payload }: PayloadAction<string>) => {\r\n      if(state.contentDraft.length === 0) return\r\n      localStorage.set('content-draft', state.contentDraft = state.contentDraft.filter(draft => draft._id !== payload))\r\n    }\r\n  }\r\n})\r\n\r\nexport const { editOrinsertContentDraft, removeContentDraft } = slice.actions\r\nexport default slice.reducer","import scss from './loader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function WriteNewLoader() {\r\n  return(\r\n    <div className={`${scss.write_new_loader_container} flex-row-normal-center-medium`}>\r\n      <div className={`${scss.write_new_loader_body} flex-column-normal-normal-small`}>\r\n        <div className={scss.write_new_loader_input}></div>\r\n        <div className={scss.write_new_loader_input}></div>\r\n        <div className='flex-row-normal-normal-small'>\r\n          <button></button>\r\n          <button></button>\r\n          <button></button>\r\n        </div>\r\n        <div style={{ height: '10rem' }} className={scss.write_new_loader_input}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from './textArea.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { TextAreaProps } from \"../input.type\";\r\nimport type { KeyValueObject, ServerResponseError } from '@/global.type';\r\n\r\nimport { Bold, Link2, FileImage, Heading, Eye } from 'lucide-react';\r\nimport { Fragment, memo, SyntheticEvent, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport TextInput from '../textInput/textInput';\r\nimport FileInput from '../fileInput/fileInput';\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader';\r\nimport ModalError from '@/component/modal-error/modalError';\r\nimport ContentViewer from '@/component/content-viewer/contentViewer';\r\n\r\nimport areaValidation from './areaValidation';\r\n\r\nimport uploadAsset from './fetch/uploadAsset';\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\n\r\nimport localStorage from '@/lib/local-storage/localStorage';\r\n\r\nexport default memo(function({ placeholder, defaultValue, getValue }: TextAreaProps) {\r\n  const [textAreaContent, setTextAreaContent] = useState<string>(defaultValue)\r\n  const [errors, setErrors] = useState<KeyValueObject>()\r\n\r\n  const [imgAlt, setImgAlt] = useState<string>()\r\n  const [imgUrl, setImgUrl] = useState<string>()\r\n\r\n  const asset = useRef<File>()\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n  const isUploading = useRef<boolean>(false)\r\n  const cursorPosition = useRef<number>(0)\r\n  \r\n  const searchParams = useSearchParams()\r\n\r\n  const isOpen: boolean = JSON.parse(searchParams.get('is-open') || 'false')\r\n  const isPreview: boolean = JSON.parse(searchParams.get('is-preview') || 'false')\r\n\r\n  let initRender: boolean = true\r\n\r\n  const makeBold = (): void => {\r\n    const selectionStart: number = textAreaRef.current!.selectionStart\r\n    const selectionEnd: number = textAreaRef.current!.selectionEnd\r\n\r\n    cursorPosition.current = selectionEnd\r\n\r\n    const contentSubstring = textAreaContent.substring(selectionStart, selectionEnd)\r\n    const bolded = textAreaContent.replace(contentSubstring, `#${contentSubstring}#`)\r\n\r\n    setTextAreaContent(bolded)\r\n\r\n    if(getValue) getValue(bolded)\r\n  }\r\n\r\n  const makeHeader = (): void => {\r\n    const selectionStart: number = textAreaRef.current!.selectionStart\r\n    const selectionEnd: number = textAreaRef.current!.selectionEnd\r\n\r\n    cursorPosition.current = selectionEnd\r\n\r\n    const contentSubstring = textAreaContent.substring(selectionStart, selectionEnd)\r\n\r\n    const header = textAreaContent.replace(contentSubstring, `##${contentSubstring}##`)\r\n\r\n    setTextAreaContent(header)\r\n\r\n    if(getValue) getValue(header)\r\n  }\r\n\r\n  const addLink = (): void => {\r\n    const selection: number = textAreaRef.current!.selectionEnd\r\n\r\n    cursorPosition.current = selection\r\n\r\n    const link = `${textAreaContent.substring(0, selection)}[LINK STRING;LINK URL]${textAreaContent.substring(selection, textAreaContent.length)}`\r\n\r\n    setTextAreaContent(link)\r\n\r\n    if(getValue) getValue(link)\r\n  }\r\n\r\n  const addImg = useCallback(async(): Promise<void> => {\r\n    const res: KeyValueObject = areaValidation({ alt: /video/g.test(asset.current?.type || '') ? 'placeholder' : imgAlt, url: imgUrl, asset: asset.current })\r\n    const selection: number = textAreaRef.current!.selectionEnd\r\n\r\n    cursorPosition.current = selection\r\n    \r\n    setErrors(res)\r\n\r\n    if(Object.entries(res).filter(notUndefined => notUndefined).length > 0) return\r\n    \r\n    if(asset.current) {\r\n      isUploading.current = true\r\n      const uploadedAsset = new FormData()\r\n      let uploadedURL\r\n      uploadedAsset.append('file', asset.current)\r\n\r\n      try {\r\n        uploadedURL = await uploadAsset(uploadedAsset)\r\n      } catch(error) {\r\n        setErrors({ 'upload-error': (errors as ServerResponseError).message })\r\n        isUploading.current = false\r\n      }\r\n\r\n      if(/video/g.test(asset.current?.type || '')) {\r\n        const imgLink = `${textAreaContent.substring(0, selection)}[${uploadedURL!.assetURL}]${textAreaContent.substring(selection, textAreaContent.length)}`\r\n        setTextAreaContent(imgLink)\r\n\r\n        if(getValue) getValue(imgLink)\r\n      } else {\r\n        const imgLink = `${textAreaContent.substring(0, selection)}(${imgAlt};${uploadedURL!.assetURL})${textAreaContent.substring(selection, textAreaContent.length)}`\r\n        setTextAreaContent(imgLink)\r\n        \r\n        if(getValue) getValue(imgLink)\r\n      }\r\n      \r\n      isUploading.current = false\r\n    } else {\r\n      const imgLink = `${textAreaContent.substring(0, selection)}(${imgAlt};${imgUrl})${textAreaContent.substring(selection, textAreaContent.length)}`\r\n      setTextAreaContent(imgLink)\r\n\r\n      if(getValue) getValue(imgLink)\r\n    }\r\n  \r\n    setImgAlt('')\r\n    setImgUrl('')\r\n    setErrors({})\r\n    asset.current = undefined\r\n    searchParams.set({ 'is-open': false })\r\n  }, [imgAlt, imgUrl, asset])\r\n\r\n  const inputContent = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\r\n    cursorPosition.current = event.currentTarget.selectionEnd\r\n    setTextAreaContent(event.currentTarget.value)\r\n    if(getValue) getValue(event.currentTarget.value)\r\n  }\r\n\r\n  const inputImgUrl = (event: SyntheticEvent<HTMLInputElement>): void => {\r\n    setImgUrl(event.currentTarget.value)\r\n  }\r\n\r\n  const inputImgAlt = (event: SyntheticEvent<HTMLInputElement>): void => {\r\n    setImgAlt(event.currentTarget.value)\r\n  }\r\n\r\n  const openImgModal = (): void => {\r\n    searchParams.set({ 'is-open': true })\r\n  }\r\n\r\n  const stopAdding = (): void => {\r\n    setImgAlt('')\r\n    setImgUrl(undefined)\r\n    setErrors({})\r\n    searchParams.set({ 'is-open': false })\r\n    asset.current = undefined\r\n    \r\n    if(getValue) getValue(textAreaContent)\r\n  }\r\n\r\n  const showCurrentContent = (): void => {\r\n    if(isPreview) {\r\n      localStorage.set('scroll-position', document.body.scrollTop)\r\n      return searchParams.remove(['is-preview'])\r\n    }\r\n\r\n    document.body.scrollTo({ top: localStorage.get('scroll-position', '0') })\r\n    return searchParams.set({ 'is-preview': true })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(initRender) {\r\n      setTextAreaContent(defaultValue || '')\r\n      if(getValue) getValue(defaultValue || '')\r\n    }\r\n  }, [defaultValue])\r\n\r\n  return(\r\n    <Fragment>\r\n      {isUploading.current ? <MutatingLoader/> : null}\r\n      <ModalError error={errors?.['upload-error']}/>\r\n      <section className={scss.text_area_action_buttons_container}>\r\n        <button disabled={isPreview} onClick={makeBold} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Bold /></button>\r\n        <button disabled={isPreview} onClick={makeHeader} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Heading /></button>\r\n        <button disabled={isPreview} onClick={addLink} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Link2 /></button>\r\n        <button disabled={isPreview} onClick={openImgModal} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><FileImage /></button>\r\n        <button onClick={showCurrentContent} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Eye /></button>\r\n      </section>\r\n      <div className={scss.text_area_container}>\r\n        <div className={isOpen ? `${scss.text_area_asset_modal_container} flex-row-center-center-none` : `${scss.text_area_asset_modal_container} ${scss.text_area_asset_modal_container_hidden} flex-row-center-center-none`}>\r\n          <div className={`${scss.text_area_asset_modal_body} main-content-container flex-column-normal-normal-small`}>\r\n            <TextInput errors={errors} onInput={inputImgUrl} defaultValue={imgUrl || ''} name='url' type='text' placeholder='Put you img URL here!'/>\r\n            <TextInput errors={errors} onInput={inputImgAlt} defaultValue={imgAlt || ''} name='alt' type='text' placeholder='Put img Alt attributte here!'/>\r\n            <FileInput label='Upload img!' name='uploadImg' asset={asset} initValue={imgUrl}/>\r\n            <button disabled={isUploading.current} type='button' onClick={addImg}>Add Link</button>\r\n            <button type='button' onClick={stopAdding}>Stop</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {isPreview ? <ContentViewer content={textAreaContent}/> :\r\n            <textarea \r\n              className={scss.text_area}\r\n              placeholder={placeholder} \r\n              spellCheck={false}\r\n              onChange={inputContent} \r\n              ref={textAreaRef} \r\n              value={textAreaContent} \r\n              rows={(textAreaContent?.split(/\\n/)?.length || 0) + 1}></textarea>}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  ) \r\n})","import check from \"@/component/content-viewer/parser/contentParser\"\r\n\r\nexport default function areaValidation(currState: { alt?: string, url?: string, asset?: File }) {\r\n  let errors: { [key: string]: string } = {}\r\n\r\n  if(!currState.alt) errors = {...errors, alt: 'Alt is required filed!' }\r\n  if(!check.is.secureURL(currState.url || '') && !currState.url && !currState.asset) errors = {...errors, url: 'URL is not valid!' }\r\n  if((currState.url || '')?.length > 0 && currState.asset) errors = {...errors, url: 'Url or Data url is defined!'  }\r\n\r\n  return errors\r\n}","import fetcher from \"@/lib/fetcher/fetcher\";\r\n\r\nexport default async function uploadAsset(formData: FormData): Promise<{ assetURL: string }> {\r\n  try {\r\n    return await fetcher.post<{ assetURL: string }>('/api/upload', formData)\r\n  } catch(error) {\r\n    throw new Error('Error by uploading img!')\r\n  } \r\n}","import scss from './checkBoxInput.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Check } from 'lucide-react'\r\n\r\nimport type { CheckBoxInputProps } from \"../input.type\";\r\n\r\nexport default function CheckBoxInput({ defaultValue, label, name }: CheckBoxInputProps) {\r\n  return(\r\n    <div style={{ width: '100%' }} className={`flex-row-center-normal-none`}>\r\n      <label className={`${scss.checkbox_body} flex-row-center-normal-medium`}>\r\n        <input tabIndex={-1} name={name} className={scss.checkbox_default_input} type=\"checkbox\" defaultChecked={defaultValue}/>\r\n        <div className={scss.checkbox_custom_checkbox_wrapper}>\r\n          <p className={scss.checkbox_custom_checkbox_body}></p>\r\n          <Check/>\r\n        </div>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  )\r\n}","import scss from './page.module.scss'\r\n\r\nimport type { Content, ServerResponseError } from '@/global.type'\r\nimport type { AppDispatch, RootState } from '@/store/store'\r\nimport type { PostCommentsData } from '../post/page.type'\r\nimport type { CreatorState, ContentDraft } from '@/store/creator/creator.type'\r\n\r\nimport FormWrapper from \"@/component/form-wrapper/formWrapper\"\r\nimport TextInput from \"@/component/input/textInput/textInput\"\r\nimport TextArea from '@/component/input/textArea/textArea'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport ModalError from '@/component/modal-error/modalError'\r\nimport TextTagInput from '@/component/input/text-tag-input/textTagInput'\r\nimport Button from '@/component/button/button'\r\nimport WriteNewLoader from './loader'\r\n\r\nimport { Fragment, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\n\r\nimport { editOrinsertContentDraft, removeContentDraft } from '@/store/creator/creator'\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useForm from '@/custom-hook/useForm/useForm'\r\nimport useAuth from '@/custom-hook/useAuth/useAuth'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport usePermitor from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata'\r\n\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\nimport CheckBoxInput from '@/component/input/checkbox-input/checkBoxInput'\r\n\r\n//Create content || Update content || Save draft || Update draft || Remove draft\r\nexport default function WriteNewPost() {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const redirect = useNavigate()\r\n  const creator = useSelector<RootState, CreatorState>(state => state.creator)\r\n  const searchParams = useSearchParams()\r\n  const auth = useAuth()\r\n  const { submit } = useForm<Content>([])\r\n  const permitor = usePermitor()\r\n  \r\n  const contentID: string | null = searchParams.get('content-id')\r\n  const draftID: string | null = searchParams.get('draft-id')\r\n  const isEdit: boolean = JSON.parse(searchParams.get('is-edit') || 'false')\r\n\r\n  if(!permitor.role(['Admin', 'Creator']).permited()) {\r\n    return <Navigate to='/'/>\r\n  }\r\n\r\n  const currContent: ContentDraft | undefined = \r\n    //Get content to edit\r\n    isEdit && contentID ? \r\n    localStorage.get<ContentDraft>(contentID, 'null') :\r\n    //Get content draft to edit\r\n    draftID ?\r\n    creator.contentDraft.find(content => content._id === draftID) :\r\n    undefined\r\n\r\n  const isPost: boolean = currContent?.contentType === 'post'\r\n\r\n  useMetadata({ \r\n    title: \r\n      isEdit && currContent ? `${isPost ? currContent.title : 'Comment'} ändern` :\r\n      draftID && currContent ? `${isPost ? currContent.title : 'Entwurf'} ändern` :\r\n      'Neue post schreiben',\r\n    description: 'Hier kannst neue post oder entwurfe schreiben oder ändern.'\r\n  })\r\n\r\n  const key: string[] = currContent?.isFromAdmin ? [] : currContent?.contentType === 'comment' ? [`post-${currContent.onPost}-comments-${currContent.onPage}`] : ['all-posts']\r\n\r\n  const { mutate, isMutating, error } = useRequest({ deps: key })\r\n\r\n  const toError: ServerResponseError | undefined = error ? error : isEdit && !currContent ? { code: 404, message: 'Content not found!' } : undefined\r\n  \r\n  const tagsRef = useRef<string[]>(currContent?.tags || [])\r\n  const contentRef = useRef<string>('')\r\n  \r\n  const createNew = async(data: any): Promise<void> => {\r\n    delete data.alt\r\n    delete data.uploadImg\r\n    delete data.url\r\n\r\n    mutate<PostCommentsData | Content[]>({\r\n      key,\r\n      request: async function(option) {\r\n        if(isEdit) {\r\n          const updated = await fetcher.post<Content>(`/admin/${currContent?.contentType}/update`, {...data, content: contentRef.current, tags: tagsRef.current, id: contentID }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n          localStorage.remove(updated._id!)\r\n\r\n          //Edit post\r\n          if(currContent?.contentType === 'post') {\r\n            const state = option.state as Content[] || []\r\n  \r\n            option.removeCache(`/post-${updated._id}`)\r\n\r\n            for(let index: number = (currContent?.onPage || 0) + 1; index >= 0; index--) {\r\n              option.removeCache(`${currContent.contentType}-${index}`)\r\n            }\r\n\r\n            if(!currContent.isFromAdmin) redirect(`/post/${updated._id}`)\r\n            else redirect(`/admin/${currContent.contentType}`)\r\n  \r\n            return state.map(post => post._id === updated._id ? updated : post)\r\n          }\r\n          \r\n          //Edit comment\r\n          if(currContent?.contentType === 'comment') {\r\n            const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n  \r\n            if(!currContent.isFromAdmin) {\r\n              redirect(`/post/${currContent?.onPost}?page=${currContent?.onPage}`)\r\n              return {...state, comments: state.comments.map(comment => comment._id === updated._id ? updated : comment) }\r\n            }\r\n\r\n            redirect('/admin')\r\n            return undefined\r\n          }\r\n        }\r\n\r\n        //Insert post\r\n        const post = await fetcher.post<Content>(`/insert/post`, {...data, content: contentRef.current, tags: tagsRef.current }, { 'Authorization': `Bearer ${auth?.user?.token}` })\r\n        const state = option.state as Content[] || []\r\n\r\n        redirect(`/post/${post._id}`)\r\n        return [...state || [], post]\r\n      }\r\n    })\r\n  }\r\n\r\n  const getTags = (tags: string[]): void => {\r\n    tagsRef.current = tags\r\n  }\r\n\r\n  const saveDraft = (): void => {\r\n    const newDraftID: string = draftID || contentID || window.crypto.randomUUID()\r\n      \r\n    dispatch(editOrinsertContentDraft({...currContent, _id: newDraftID!, content: contentRef.current }))\r\n      \r\n    searchParams.set({ 'draft-id': newDraftID })\r\n    searchParams.remove(['content-id'])\r\n    localStorage.remove(contentID!)\r\n  }\r\n\r\n  const deleteDraft = (): void => {\r\n    dispatch(removeContentDraft(draftID || contentID!))\r\n    searchParams.remove(['draft-id'])\r\n  }\r\n\r\n  const getTextAreaContentValue = (content: string): void => {\r\n    contentRef.current = content\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {toError ? <ModalError error={toError}/> : null}\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      {auth.isAuthPending ?\r\n        <WriteNewLoader/> :\r\n        <div className={`${scss.create_new_post_container} flex-row-normal-center-big`}>\r\n          <FormWrapper className={scss.create_new_post_form} onSubmit={submit(createNew)} isPending={false}>\r\n            {currContent?.contentType !== 'comment' ?\r\n              <Fragment>\r\n                <TextInput name='title' defaultValue={currContent?.title} placeholder='Post title'/>\r\n                <TextTagInput getTags={getTags} placeholder='Post tags' value={tagsRef.current}/>\r\n                <CheckBoxInput name='isHidden' label='Hidde post' defaultValue={currContent?.isHidden}/>\r\n              </Fragment> : null}\r\n            <TextArea defaultValue={currContent?.content} placeholder='Write content body here...' getValue={getTextAreaContentValue}/>\r\n            <div className={scss.create_new_buttons_container}>\r\n              <Button label={isEdit ? `Edit ${currContent?.contentType}` : `Create post`} type='submit'/>\r\n              <Button label={currContent && !contentID ? \"Save draft changes\" : 'Save as draft'} onClick={saveDraft}/>\r\n              <Button label=\"Delete draft\" onClick={deleteDraft}/>\r\n            </div>\r\n          </FormWrapper>\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["slice","createSlice","name","initialState","contentDraft","localStorage","get","reducers","editOrinsertContentDraft","state","payload","length","set","find","content","index","_id","map","removeContentDraft","filter","draft","actions","creator","reducer","WriteNewLoader","jsx","className","scss","write_new_loader_container","children","jsxs","write_new_loader_body","write_new_loader_input","style","height","memo","placeholder","defaultValue","getValue","textAreaContent","setTextAreaContent","useState","errors","setErrors","imgAlt","setImgAlt","imgUrl","setImgUrl","asset","useRef","textAreaRef","isUploading","cursorPosition","searchParams","useSearchParams","isOpen","JSON","parse","isPreview","addImg","useCallback","async","res","currState","alt","check","is","secureURL","url","areaValidation","test","current","type","selection","selectionEnd","Object","entries","notUndefined","uploadedAsset","FormData","uploadedURL","append","formData","fetcher","post","error","Error","uploadAsset","message","imgLink","substring","assetURL","useEffect","Fragment","MutatingLoader","ModalError","disabled","onClick","selectionStart","contentSubstring","bolded","replace","Bold","header","Heading","link","Link2","FileImage","document","body","scrollTop","remove","scrollTo","top","Eye","TextInput","onInput","event","currentTarget","value","FileInput","label","initValue","ContentViewer","spellCheck","onChange","ref","rows","split","CheckBoxInput","width","checkbox_body","tabIndex","checkbox_default_input","defaultChecked","checkbox_custom_checkbox_wrapper","checkbox_custom_checkbox_body","Check","dispatch","useDispatch","redirect","useNavigate","useSelector","auth","useAuth","submit","useForm","permitor","usePermitor","contentID","draftID","isEdit","role","permited","Navigate","to","currContent","isPost","contentType","useMetadata","title","description","key","isFromAdmin","onPost","onPage","mutate","isMutating","useRequest","deps","toError","code","tagsRef","tags","contentRef","isAuthPending","FormWrapper","onSubmit","data","uploadImg","request","option","updated","id","Authorization","coockie","getOne","removeCache","pagesCount","comments","comment","user","token","isPending","TextTagInput","getTags","isHidden","TextArea","Button","newDraftID","window","crypto","randomUUID"],"mappings":"wVAMA,MAIMA,EAAQC,EAAY,CACxBC,KAAM,UACNC,aAN8B,CAC9BC,aAAcC,EAAaC,IAAI,gBAAiB,OAMhDC,SAAU,CACRC,yBAA0B,CAACC,GAASC,cAClC,GAAiC,IAA9BD,EAAML,aAAaO,OAAqB,OAAAN,EAAaO,IAAI,gBAAiBH,EAAML,aAAe,CAACM,IAE9ED,EAAML,aAAaS,MAAK,CAACC,EAASC,IAAUD,EAAQE,MAAQN,EAAQM,IAAM,CAAEA,IAAKF,EAAQE,IAAKD,cAAU,IAG3HV,EAAaO,IAAI,gBAAiBH,EAAML,aAAeK,EAAML,aAAaa,KAAeH,GAAAA,EAAQE,MAAQN,EAAQM,IAAMN,EAAUI,KAEpHT,EAAAO,IAAI,gBAAiBH,EAAML,aAAe,IAAIK,EAAML,aAAcM,GACjF,EAEFQ,mBAAoB,CAACT,GAASC,cACK,IAA9BD,EAAML,aAAaO,QACTN,EAAAO,IAAI,gBAAiBH,EAAML,aAAeK,EAAML,aAAae,QAAgBC,GAAAA,EAAMJ,MAAQN,IAAQ,MAKzGF,yBAAEA,EAAAU,mBAA0BA,GAAuBlB,EAAMqB,QACvDC,EAAAtB,EAAMuB,2GC9BrB,SAAwBC,IACtB,OACGC,EAAAA,IAAA,MAAA,CAAIC,UAAW,GAAGC,EAAKC,2DACtBC,SAAAC,EAAAA,KAAC,MAAI,CAAAJ,UAAW,GAAGC,EAAKI,wDACtBF,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAIC,UAAWC,EAAKK,yBACpBP,EAAAA,IAAA,MAAA,CAAIC,UAAWC,EAAKK,yBACrBF,EAAAA,KAAC,MAAI,CAAAJ,UAAU,+BACbG,SAAA,CAAAJ,EAAAA,IAAC,SAAO,UACP,SAAO,UACP,SAAO,OAEVA,MAAC,OAAIQ,MAAO,CAAEC,OAAQ,SAAWR,UAAWC,EAAKK,6BAIzD,0ECKA,MAAeG,EAAAA,EAAAA,MAAK,UAASC,YAAEA,EAAaC,aAAAA,EAAAC,SAAcA,IACxD,MAAOC,EAAiBC,GAAsBC,WAAiBJ,IACxDK,EAAQC,GAAaF,EAAyBA,YAE9CG,EAAQC,GAAaJ,EAAiBA,YACtCK,EAAQC,GAAaN,EAAiBA,WAEvCO,EAAQC,EAAAA,SACRC,EAAcD,SAA4B,MAC1CE,EAAcF,UAAgB,GAC9BG,EAAiBH,SAAe,GAEhCI,EAAeC,IAEfC,EAAkBC,KAAKC,MAAMJ,EAAa/C,IAAI,YAAc,SAC5DoD,EAAqBF,KAAKC,MAAMJ,EAAa/C,IAAI,eAAiB,SA6ClEqD,EAASC,EAAAA,aAAYC,UACzB,MAAMC,EClFV,SAAuCC,GACrC,IAAIrB,EAAoC,CAAA,EAMjC,OAJHqB,EAAUC,MAAKtB,EAAS,IAAIA,EAAQsB,IAAK,2BACzCC,EAAMC,GAAGC,UAAUJ,EAAUK,KAAO,KAAQL,EAAUK,KAAQL,EAAUf,QAAON,EAAS,IAAIA,EAAQ0B,IAAK,uBACzGL,EAAUK,KAAO,KAAKzD,OAAS,GAAKoD,EAAUf,QAAON,EAAS,IAAIA,EAAQ0B,IAAK,gCAE5E1B,CACT,CD0EgC2B,CAAe,CAAEL,IAAK,SAASM,KAAKtB,EAAMuB,SAASC,MAAQ,IAAM,cAAgB5B,EAAQwB,IAAKtB,EAAQE,MAAOA,EAAMuB,UACzIE,EAAoBvB,EAAYqB,QAASG,aAM5C,GAJHtB,EAAemB,QAAUE,EAEzB9B,EAAUmB,KAEPa,OAAOC,QAAQd,GAAK3C,QAAuB0D,GAAAA,IAAclE,OAAS,GAAlE,CAEH,GAAGqC,EAAMuB,QAAS,CAChBpB,EAAYoB,SAAU,EAChB,MAAAO,EAAgB,IAAIC,SACtB,IAAAC,EACUF,EAAAG,OAAO,OAAQjC,EAAMuB,SAE/B,IACYS,QElGtBnB,eAA0CqB,GACpC,IACF,aAAaC,EAAQC,KAA2B,cAAeF,SACzDG,GACA,MAAA,IAAIC,MAAM,0BAClB,CACF,CF4F4BC,CAAYT,SAC1BO,GACN1C,EAAU,CAAE,eAAiBD,EAA+B8C,UAC5DrC,EAAYoB,SAAU,CACxB,CAEA,GAAG,SAASD,KAAKtB,EAAMuB,SAASC,MAAQ,IAAK,CAC3C,MAAMiB,EAAU,GAAGlD,EAAgBmD,UAAU,EAAGjB,MAAcO,EAAaW,YAAYpD,EAAgBmD,UAAUjB,EAAWlC,EAAgB5B,UAC5I6B,EAAmBiD,GAEhBnD,KAAmBmD,EAAO,KACxB,CACL,MAAMA,EAAU,GAAGlD,EAAgBmD,UAAU,EAAGjB,MAAc7B,KAAUoC,EAAaW,YAAYpD,EAAgBmD,UAAUjB,EAAWlC,EAAgB5B,UACtJ6B,EAAmBiD,GAEhBnD,KAAmBmD,EACxB,CAEAtC,EAAYoB,SAAU,CAAA,KACjB,CACL,MAAMkB,EAAU,GAAGlD,EAAgBmD,UAAU,EAAGjB,MAAc7B,KAAUE,KAAUP,EAAgBmD,UAAUjB,EAAWlC,EAAgB5B,UACvI6B,EAAmBiD,GAEhBnD,KAAmBmD,EACxB,CAEA5C,EAAU,IACVE,EAAU,IACVJ,EAAU,CAAE,GACZK,EAAMuB,aAAU,EAChBlB,EAAazC,IAAI,CAAE,WAAW,GAvC0C,CAuCnC,GACpC,CAACgC,EAAQE,EAAQE,IA+CpB,OAPA4C,EAAAA,WAAU,KAENpD,EAAmBH,GAAgB,IAChCC,GAAmBA,EAAAD,GAAgB,GACxC,GACC,CAACA,WAGDwD,WACE,CAAAhE,SAAA,CAAYsB,EAAAoB,QAAW9C,EAAAA,IAAAqE,EAAA,CAAA,GAAmB,KAC1CrE,EAAAA,IAAAsE,EAAA,CAAWV,MAAO3C,IAAS,kBAC3BZ,EAAAA,KAAA,UAAA,CAAQJ,UAAWC,EAClBE,SAAA,CAAAJ,MAAC,SAAO,CAAAuE,SAAUtC,EAAWuC,QA7IlB,KACT,MAAAC,EAAyBhD,EAAYqB,QAAS2B,eAC9CxB,EAAuBxB,EAAYqB,QAASG,aAElDtB,EAAemB,QAAUG,EAEzB,MAAMyB,EAAmB5D,EAAgBmD,UAAUQ,EAAgBxB,GAC7D0B,EAAS7D,EAAgB8D,QAAQF,EAAkB,IAAIA,MAE7D3D,EAAmB4D,GAEhB9D,KAAmB8D,EAAM,EAkIwB5B,KAAK,SAAS9C,UAAW,GAAGC,gCAA0DE,SAAAJ,MAAC6E,GAAK,KAC3I7E,MAAA,SAAA,CAAOuE,SAAUtC,EAAWuC,QAhIhB,KACX,MAAAC,EAAyBhD,EAAYqB,QAAS2B,eAC9CxB,EAAuBxB,EAAYqB,QAASG,aAElDtB,EAAemB,QAAUG,EAEzB,MAAMyB,EAAmB5D,EAAgBmD,UAAUQ,EAAgBxB,GAE7D6B,EAAShE,EAAgB8D,QAAQF,EAAkB,KAAKA,OAE9D3D,EAAmB+D,GAEhBjE,KAAmBiE,EAAM,EAoH0B/B,KAAK,SAAS9C,UAAW,GAAGC,gCAA0DE,SAAAJ,MAAC+E,GAAQ,KAChJ/E,MAAA,SAAA,CAAOuE,SAAUtC,EAAWuC,QAlHnB,KACR,MAAAxB,EAAoBvB,EAAYqB,QAASG,aAE/CtB,EAAemB,QAAUE,EAEzB,MAAMgC,EAAO,GAAGlE,EAAgBmD,UAAU,EAAGjB,2BAAmClC,EAAgBmD,UAAUjB,EAAWlC,EAAgB5B,UAErI6B,EAAmBiE,GAEhBnE,KAAmBmE,EAAI,EAyGyBjC,KAAK,SAAS9C,UAAW,GAAGC,gCAA0DE,SAAAJ,MAACiF,GAAM,KAC3IjF,MAAA,SAAA,CAAOuE,SAAUtC,EAAWuC,QAvCd,KACnB5C,EAAazC,IAAI,CAAE,WAAW,GAAM,EAsCoB4D,KAAK,SAAS9C,UAAW,GAAGC,gCAA0DE,SAAAJ,MAACkF,GAAU,KACpJlF,EAAAA,IAAA,SAAA,CAAOwE,QA1Ba,IACtBvC,GACDrD,EAAaO,IAAI,kBAAmBgG,SAASC,KAAKC,WAC3CzD,EAAa0D,OAAO,CAAC,iBAGrBH,SAAAC,KAAKG,SAAS,CAAEC,IAAK5G,EAAaC,IAAI,kBAAmB,OAC3D+C,EAAazC,IAAI,CAAE,cAAc,KAmBC4D,KAAK,SAAS9C,UAAW,GAAGC,gCAA0DE,SAAAJ,EAAAA,IAACyF,GAAI,QAEjIpF,EAAAA,KAAA,MAAA,CAAIJ,UAAWC,EACdE,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAIC,UAAW6B,EAAS,GAAG5B,gCAAqE,GAAGA,KAAwCA,gCAC1IE,SAACC,EAAAA,KAAA,MAAA,CAAIJ,UAAW,GAAGC,2DACjBE,SAAA,CAAAJ,EAAAA,IAAC0F,EAAU,CAAAzE,SAAgB0E,QArDhBC,IACTtE,EAAAsE,EAAMC,cAAcC,MAAK,EAoDsBlF,aAAcS,GAAU,GAAI5C,KAAK,MAAMsE,KAAK,OAAOpC,YAAY,0BAC/GX,EAAAA,IAAA0F,EAAA,CAAUzE,SAAgB0E,QAlDhBC,IACTxE,EAAAwE,EAAMC,cAAcC,MAAK,EAiDsBlF,aAAcO,GAAU,GAAI1C,KAAK,MAAMsE,KAAK,OAAOpC,YAAY,iCAChHX,MAAC+F,GAAUC,MAAM,cAAcvH,KAAK,YAAY8C,QAAc0E,UAAW5E,IACzErB,EAAAA,IAAC,UAAOuE,SAAU7C,EAAYoB,QAASC,KAAK,SAASyB,QAAStC,EAAQ9B,SAAQ,mBAC7E,SAAO,CAAA2C,KAAK,SAASyB,QA7Cb,KACjBpD,EAAU,IACVE,OAAU,GACVJ,EAAU,CAAE,GACZU,EAAazC,IAAI,CAAE,WAAW,IAC9BoC,EAAMuB,aAAU,EAEbjC,KAAmBC,EAAe,EAsCcV,SAAI,oBAGlD,MACE,CAAAA,SAAA6B,QAAaiE,EAAc,CAAA7G,QAASyB,IACnCd,EAAAA,IAAC,WAAA,CACCC,UAAWC,EACXS,cACAwF,YAAY,EACZC,SAxEUR,IACLjE,EAAAmB,QAAU8C,EAAMC,cAAc5C,aAC1BlC,EAAA6E,EAAMC,cAAcC,OACpCjF,GAAUA,EAAS+E,EAAMC,cAAcC,MAAK,EAsErCO,IAAK5E,EACLqE,MAAOhF,EACPwF,MAAOxF,GAAiByF,MAAM,OAAOrH,QAAU,GAAK,WAKlE,gIG9MA,SAAwBsH,GAAc5F,aAAEA,EAAcoF,MAAAA,EAAAvH,KAAOA,IAC3D,OACGuB,EAAAA,IAAA,MAAA,CAAIQ,MAAO,CAAEiG,MAAO,QAAUxG,UAAW,8BACxCG,gBAAC,QAAM,CAAAH,UAAW,GAAGC,EAAKwG,8CACxBtG,SAAA,CAACJ,EAAAA,IAAA,QAAA,CAAM2G,UAAU,EAAIlI,OAAYwB,UAAWC,EAAK0G,uBAAwB7D,KAAK,WAAW8D,eAAgBjG,IACxGP,EAAAA,KAAA,MAAA,CAAIJ,UAAWC,EAAK4G,iCACnB1G,SAAA,CAACJ,EAAAA,IAAA,IAAA,CAAEC,UAAWC,EAAK6G,sCAClBC,EAAK,OAEPhB,MAIT,qECeA,WACE,MAAMiB,EAAWC,IACXC,EAAWC,IACXvH,EAAUwH,GAA8CrI,GAAAA,EAAMa,UAC9D+B,EAAeC,IACfyF,EAAOC,KACPC,OAAEA,GAAWC,EAAiB,IAC9BC,EAAWC,IAEXC,EAA2BhG,EAAa/C,IAAI,cAC5CgJ,EAAyBjG,EAAa/C,IAAI,YAC1CiJ,EAAkB/F,KAAKC,MAAMJ,EAAa/C,IAAI,YAAc,SAE/D,IAAC6I,EAASK,KAAK,CAAC,QAAS,YAAYC,WAC/B,OAAAhI,EAAAA,IAACiI,EAAS,CAAAC,GAAG,MAGhB,MAAAC,EAEJL,GAAUF,EACVhJ,EAAaC,IAAkB+I,EAAW,QAE1CC,EACAhI,EAAQlB,aAAaS,SAAgBC,EAAQE,MAAQsI,SACrD,EAEIO,EAA+C,SAA7BD,GAAaE,YAEzBC,EAAA,CACVC,MACET,GAAUK,EAAc,GAAGC,EAASD,EAAYI,MAAQ,mBACxDV,GAAWM,EAAc,GAAGC,EAASD,EAAYI,MAAQ,mBACzD,sBACFC,YAAa,+DAGf,MAAMC,EAAgBN,GAAaO,YAAc,GAAkC,YAA7BP,GAAaE,YAA4B,CAAC,QAAQF,EAAYQ,mBAAmBR,EAAYS,UAAY,CAAC,cAE1JC,OAAEA,aAAQC,EAAYlF,MAAAA,GAAUmF,EAAW,CAAEC,KAAMP,IAEnDQ,EAA2CrF,IAAgBkE,IAAWK,EAAc,CAAEe,KAAM,IAAKnF,QAAS,2BAAyB,GAEnIoF,EAAU3H,EAAAA,OAAiB2G,GAAaiB,MAAQ,IAChDC,EAAa7H,SAAe,IA8ElC,cACG4C,WACE,CAAAhE,SAAA,CAAA6I,EAAWjJ,EAAAA,IAAAsE,EAAA,CAAWV,MAAOqF,IAAa,KAC1CH,EAAc9I,EAAAA,IAAAqE,EAAA,CAAA,GAAmB,KACjCiD,EAAKgC,cACHtJ,EAAAA,IAAAD,EAAA,CAAc,GACdC,EAAAA,IAAA,MAAA,CAAIC,UAAW,GAAGC,+BACjBE,SAACC,EAAAA,KAAAkJ,EAAA,CAAYtJ,UAAWC,EAA2BsJ,SAAUhC,GAnFnDpF,MAAMqH,WACfA,EAAKlH,WACLkH,EAAKC,iBACLD,EAAK9G,IAEyBkG,EAAA,CACnCJ,MACAkB,QAASvH,eAAewH,GACtB,GAAG9B,EAAQ,CACT,MAAM+B,QAAgBnG,EAAQC,KAAc,UAAUwE,GAAaE,qBAAsB,IAAIoB,EAAMpK,QAASgK,EAAWvG,QAASsG,KAAMD,EAAQrG,QAASgH,GAAIlC,GAAa,CAAEmC,cAAiB,UAAUC,EAAQC,OAAO,gBAKjN,GAHUrL,EAAA0G,OAAOuE,EAAQtK,KAGI,SAA7B4I,GAAaE,YAAwB,CAChCrJ,MAAAA,EAAQ4K,EAAO5K,OAAsB,GAE3C4K,EAAOM,YAAY,SAASL,EAAQtK,OAEpC,IAAA,IAAQD,GAAiB6I,GAAaS,QAAU,GAAK,EAAGtJ,GAAS,EAAGA,IAClEsK,EAAOM,YAAY,GAAG/B,EAAYE,eAAe/I,KAM5CN,OAHHmJ,EAAYO,YACFvB,EAAA,UAAUgB,EAAYE,iBADE,SAASwB,EAAQtK,OAGhDP,EAAMQ,KAAImE,GAAQA,EAAKpE,MAAQsK,EAAQtK,IAAMsK,EAAUlG,GAChE,CAGG,GAA6B,YAA7BwE,GAAaE,YAA2B,CACnCrJ,MAAAA,EAAQ4K,EAAO5K,OAA6B,CAAEmL,WAAY,EAAGC,SAAU,IAE1E,OAACjC,EAAYO,iBAKhBvB,EAAS,WAJPA,EAAS,SAASgB,GAAaQ,eAAeR,GAAaS,UACpD,IAAI5J,EAAOoL,SAAUpL,EAAMoL,SAAS5K,KAAe6K,GAAAA,EAAQ9K,MAAQsK,EAAQtK,IAAMsK,EAAUQ,KAKtG,CACF,CAGM,MAAA1G,QAAaD,EAAQC,KAAc,eAAgB,IAAI8F,EAAMpK,QAASgK,EAAWvG,QAASsG,KAAMD,EAAQrG,SAAW,CAAEiH,cAAiB,UAAUzC,GAAMgD,MAAMC,UAC5JvL,EAAQ4K,EAAO5K,OAAsB,GAG3C,OADSmI,EAAA,SAASxD,EAAKpE,OAChB,IAAIP,GAAS,GAAI2E,EAC1B,GACD,IAiCqF6G,WAAW,EACxFpK,SAAA,CAA6B,YAAhB+H,GAAAE,YACZhI,EAAAA,KAAC+D,EACCA,SAAA,CAAAhE,SAAA,CAAAJ,MAAC0F,GAAUjH,KAAK,QAAQmC,aAAcuH,GAAaI,MAAO5H,YAAY,qBACrE8J,EAAa,CAAAC,QAlCXtB,IACfD,EAAQrG,QAAUsG,CAAA,EAiC0BzI,YAAY,YAAYmF,MAAOqD,EAAQrG,UACvE9C,MAACwG,GAAc/H,KAAK,WAAWuH,MAAM,aAAapF,aAAcuH,GAAawC,cACjE,KAChB3K,MAAC4K,GAAShK,aAAcuH,GAAa9I,QAASsB,YAAY,6BAA6BE,SAlBhExB,IAC/BgK,EAAWvG,QAAUzD,CAAA,IAkBZgB,EAAAA,KAAA,MAAA,CAAIJ,UAAWC,EACdE,SAAA,CAACJ,EAAAA,IAAA6K,EAAA,CAAO7E,MAAO8B,EAAS,QAAQK,GAAaE,cAAgB,cAAetF,KAAK,WACjF/C,EAAAA,IAAC6K,GAAO7E,MAAOmC,IAAgBP,EAAY,qBAAuB,gBAAiBpD,QApC7E,KAChB,MAAMsG,EAAqBjD,GAAWD,GAAamD,OAAOC,OAAOC,aAExDhE,EAAAlI,EAAyB,IAAIoJ,EAAa5I,IAAKuL,EAAazL,QAASgK,EAAWvG,WAEzFlB,EAAazC,IAAI,CAAE,WAAY2L,IAClBlJ,EAAA0D,OAAO,CAAC,eACrB1G,EAAa0G,OAAOsC,EAAU,IA8BnB5H,EAAAA,IAAA6K,EAAA,CAAO7E,MAAM,eAAexB,QA3BrB,KACTyC,EAAAxH,EAAmBoI,GAAWD,IAC1BhG,EAAA0D,OAAO,CAAC,YAAW,cA+BpC"}