{"version":3,"file":"write-new.js","sources":["../../../../src/store/creator/creator.ts","../../../../src/page/write-new/loader.tsx","../../../../src/component/input/textArea/text-editor/parts/shortCut.ts","../../../../src/component/input/textArea/text-editor/textEditor.ts","../../../../src/lib/count-duplicate/countDuplicate.ts","../../../../src/component/input/textArea/text-editor/parts/edit.ts","../../../../src/component/input/textArea/textArea.tsx","../../../../src/component/input/textArea/areaValidation.ts","../../../../src/component/input/textArea/fetch/uploadAsset.ts","../../../../src/component/input/checkbox-input/checkBoxInput.tsx","../../../../src/page/write-new/page.tsx"],"sourcesContent":["import { type PayloadAction, createSlice } from '@reduxjs/toolkit'\r\n\r\nimport type { ContentDraft, CreatorState } from './creator.type'\r\n\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nconst initState: CreatorState = {\r\n  contentDraft: localStorage.get('content-draft', '[]')  \r\n}\r\n\r\nconst slice = createSlice({\r\n  name: 'creator',\r\n  initialState: initState,\r\n  reducers: {\r\n    editOrinsertContentDraft: (state, { payload }: PayloadAction<ContentDraft>) => {\r\n      if(state.contentDraft.length === 0) return localStorage.set('content-draft', state.contentDraft = [payload])\r\n\r\n      const currentDraft = state.contentDraft.find((content, index) => content._id === payload._id ? { _id: content._id, index } : undefined)\r\n\r\n      if(currentDraft) {\r\n        localStorage.set('content-draft', state.contentDraft = state.contentDraft.map(content => content._id === payload._id ? payload : content))\r\n      } else {\r\n        localStorage.set('content-draft', state.contentDraft = [...state.contentDraft, payload])\r\n      }\r\n    },\r\n    removeContentDraft: (state, { payload }: PayloadAction<string>) => {\r\n      if(state.contentDraft.length === 0) return\r\n      localStorage.set('content-draft', state.contentDraft = state.contentDraft.filter(draft => draft._id !== payload))\r\n    }\r\n  }\r\n})\r\n\r\nexport const { editOrinsertContentDraft, removeContentDraft } = slice.actions\r\nexport default slice.reducer","import scss from './loader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function WriteNewLoader() {\r\n  return(\r\n    <div className={`${scss.write_new_loader_container} flex-row-normal-center-medium`}>\r\n      <div className={`${scss.write_new_loader_body} flex-column-normal-normal-small`}>\r\n        <div className={scss.write_new_loader_input}></div>\r\n        <div className={scss.write_new_loader_input}></div>\r\n        <div className='flex-row-normal-normal-small'>\r\n          <button></button>\r\n          <button></button>\r\n          <button></button>\r\n        </div>\r\n        <div style={{ height: '10rem' }} className={scss.write_new_loader_input}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { TextEditorShortCut } from \"../textEditor.type\";\r\n\r\nimport countDuplicate from \"@/lib/count-duplicate/countDuplicate\";\r\n\r\nexport default {\r\n  lineEnd: 0,\r\n  lineStart: 0,\r\n  currentHistory: 0,\r\n  shortCutPressedKeys: [],\r\n  history: [],\r\n  pushIntoHistory: function(content) {\r\n    const isFull: boolean = this.history.length === 10\r\n \r\n    if(isFull) {\r\n      this.history = [...this.history.slice(1, 10), content]\r\n      return\r\n    } \r\n\r\n    this.currentHistory = this.history.push(content)\r\n  },\r\n  KeyL: function(event, textAreaRef) {\r\n    event.preventDefault()\r\n\r\n    const textArea = textAreaRef.current!\r\n    const isMultiple: boolean = countDuplicate(this.shortCutPressedKeys, 'KeyL') > 1\r\n\r\n    this.lineStart = textArea.selectionStart\r\n    this.lineEnd = textArea.value.indexOf('\\n', isMultiple ? textArea.selectionEnd : textArea.selectionStart)\r\n\r\n\r\n    //Check if all of left site is selected\r\n    for(let index: number = this.lineStart; index >= 0; index--) {\r\n      if(textArea.value[index] === '\\n' || index === 0) {\r\n        this.lineStart = index\r\n        break\r\n      }\r\n    }\r\n\r\n    //Handle multiple lines\r\n    if(isMultiple && textArea.selectionEnd !== textArea.value.length) {\r\n      for(let index: number = this.lineEnd + 1; index <= textArea.value.length; index++) {\r\n        if(textArea.value[index] === '\\n' || index === textArea.value.length) {\r\n          this.lineEnd = index\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    textAreaRef.current!.selectionStart = this.lineStart\r\n    textAreaRef.current!.selectionEnd = this.lineEnd\r\n  },\r\n  KeyZ: function(event) {\r\n    event.preventDefault()\r\n    if(this.currentHistory === 0) return this.history[0]\r\n    --this.currentHistory\r\n    return this.history[this.currentHistory]\r\n  },\r\n  KeyY: function(event) {\r\n    event.preventDefault()\r\n    if(this.currentHistory === 10) return this.history[10]\r\n    ++this.currentHistory\r\n    return this.history[this.currentHistory]\r\n  }\r\n} as TextEditorShortCut","import { TextEditor } from \"./textEditor.type\";\r\n\r\nimport shortCut from \"./parts/shortCut\";\r\nimport edit from \"./parts/edit\";\r\n\r\nexport default {\r\n  shortCut,\r\n  edit\r\n} as TextEditor","export default function countDuplicate(array: any[], find: any): number {\r\n  let count: number = 0\r\n\r\n  for(let index: number = 0; index < array.length; index++) {\r\n    if(array[index] === find) count++\r\n  }\r\n\r\n  return count\r\n}","import type { TextEditorEdit } from \"../textEditor.type\";\r\n\r\nexport default {\r\n  wrappKeys: {\r\n    BOLD: '#',\r\n    HEADER_1: '##',\r\n    HEADER_2: '###',\r\n    LINK: '[Text;Url]'\r\n  },\r\n  wrapp: function(content, textArea, to) {\r\n    const start: number = textArea.selectionStart\r\n    const end: number = textArea.selectionEnd\r\n\r\n    const toWrapp: string = content.substring(start, end)\r\n  \r\n    if(start === 0) {\r\n      if(to === 'LINK') return this.wrappKeys[to] + content.substring(end, content.length)\r\n      return `${this.wrappKeys[to]}${toWrapp}${this.wrappKeys[to]}` + content.substring(end, content.length)\r\n    } else if(end === content.length) {\r\n      if(to === 'LINK') return content.substring(end, content.length) + this.wrappKeys[to]\r\n      return content.substring(0, start) + `${this.wrappKeys[to]}${toWrapp}${this.wrappKeys[to]}`\r\n    }\r\n\r\n    if(to === 'LINK') return content.substring(0, start) + this.wrappKeys[to] + content.substring(end, content.length)\r\n\r\n    return content.substring(0, start) + `${this.wrappKeys[to]}${toWrapp}${this.wrappKeys[to]}` + content.substring(end, content.length)\r\n  }\r\n} as TextEditorEdit","import scss from './textArea.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { TextAreaProps } from \"../input.type\";\r\nimport type { KeyValueObject, ServerResponseError } from '@/global.type';\r\n\r\nimport { Bold, Link2, FileImage, Eye, X, Heading1, Heading2 } from 'lucide-react';\r\nimport { Fragment, memo, SyntheticEvent, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport TextInput from '../textInput/textInput';\r\nimport FileInput from '../fileInput/fileInput';\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader';\r\nimport ModalError from '@/component/modal-error/modalError';\r\nimport ContentViewer from '@/component/content-viewer/contentViewer';\r\n\r\nimport areaValidation from './areaValidation';\r\n\r\nimport uploadAsset from './fetch/uploadAsset';\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useOutsideClick from '@/custom-hook/use-outside-click/useOutsideClick';\r\n\r\nimport TextEditor from './text-editor/textEditor';\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts';\r\n\r\nexport default memo(function({ placeholder, defaultValue, getValue }: TextAreaProps) {\r\n  const [textAreaContent, setTextAreaContent] = useState<string>(defaultValue)\r\n  const [errors, setErrors] = useState<KeyValueObject>()\r\n  const [isPreviewMode, setIsPreviewMode] = useState<boolean>(false)\r\n  const [imgAlt, setImgAlt] = useState<string>()\r\n  const [imgUrl, setImgUrl] = useState<string>()\r\n\r\n  const asset = useRef<File>()\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n  const mainContainerRef = useRef<HTMLDivElement>(null)\r\n  const isUploading = useRef<boolean>(false)\r\n  const cursorPosition = useRef<number>(0)\r\n\r\n  const isOpen = useOutsideClick(URL_SEARCH_PARAMS['IS-UPLOAD-MODAL-OPEN'], mainContainerRef)\r\n  \r\n  const searchParams = useSearchParams()\r\n\r\n  let initRender: boolean = true\r\n\r\n  const bold = (): void => {\r\n    const bolded: string = TextEditor.edit.wrapp(textAreaContent, textAreaRef.current!, 'BOLD')\r\n    setTextAreaContent(bolded)\r\n    TextEditor.shortCut.pushIntoHistory(bolded)\r\n    if(getValue) getValue(bolded)\r\n  }\r\n\r\n  const headerOne = (): void => {\r\n    const headered: string = TextEditor.edit.wrapp(textAreaContent, textAreaRef.current!, 'HEADER_1')\r\n    setTextAreaContent(headered)\r\n    TextEditor.shortCut.pushIntoHistory(headered)\r\n    if(getValue) getValue(headered)\r\n  }\r\n\r\n  const headerTwo = (): void => {\r\n    const headered: string = TextEditor.edit.wrapp(textAreaContent, textAreaRef.current!, 'HEADER_2')\r\n    setTextAreaContent(headered)\r\n    TextEditor.shortCut.pushIntoHistory(headered)\r\n    if(getValue) getValue(headered)\r\n  }\r\n\r\n  const link = (): void => {\r\n    const link: string = TextEditor.edit.wrapp(textAreaContent, textAreaRef.current!, 'LINK')\r\n    setTextAreaContent(link)\r\n    TextEditor.shortCut.pushIntoHistory(link)\r\n    if(getValue) getValue(link)\r\n  }\r\n\r\n  const addImg = useCallback(async(): Promise<void> => {\r\n    const res: KeyValueObject = areaValidation({ alt: /video/g.test(asset.current?.type || '') ? 'placeholder' : imgAlt, url: imgUrl, asset: asset.current })\r\n    const selection: number = textAreaRef.current!.selectionEnd\r\n\r\n    cursorPosition.current = selection\r\n    \r\n    setErrors(res)\r\n\r\n    if(Object.entries(res).filter(notUndefined => notUndefined).length > 0) return\r\n    \r\n    if(asset.current) {\r\n      isUploading.current = true\r\n      const uploadedAsset = new FormData()\r\n      let uploadedURL\r\n      uploadedAsset.append('file', asset.current)\r\n\r\n      try {\r\n        uploadedURL = await uploadAsset(uploadedAsset)\r\n      } catch(error) {\r\n        setErrors({ 'upload-error': (errors as ServerResponseError).message })\r\n        isUploading.current = false\r\n      }\r\n\r\n      if(/video/g.test(asset.current?.type || '')) {\r\n        const imgLink = `${textAreaContent.substring(0, selection)}[${uploadedURL!.assetURL}]${textAreaContent.substring(selection, textAreaContent.length)}`\r\n        setTextAreaContent(imgLink)\r\n\r\n        if(getValue) getValue(imgLink)\r\n      } else {\r\n        const imgLink = `${textAreaContent.substring(0, selection)}(${imgAlt};${uploadedURL!.assetURL})${textAreaContent.substring(selection, textAreaContent.length)}`\r\n        setTextAreaContent(imgLink)\r\n        \r\n        if(getValue) getValue(imgLink)\r\n      }\r\n      \r\n      isUploading.current = false\r\n    } else {\r\n      const imgLink = `${textAreaContent.substring(0, selection)}(${imgAlt};${imgUrl})${textAreaContent.substring(selection, textAreaContent.length)}`\r\n      setTextAreaContent(imgLink)\r\n\r\n      if(getValue) getValue(imgLink)\r\n    }\r\n  \r\n    setImgAlt('')\r\n    setImgUrl('')\r\n    setErrors({})\r\n    asset.current = undefined\r\n    searchParams.remove([URL_SEARCH_PARAMS['IS-UPLOAD-MODAL-OPEN']])\r\n  }, [imgAlt, imgUrl, asset])\r\n\r\n  const inputContent = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\r\n    cursorPosition.current = event.currentTarget.selectionEnd\r\n    setTextAreaContent(event.currentTarget.value)\r\n    TextEditor.shortCut.pushIntoHistory(event.currentTarget.value)\r\n    if(getValue) getValue(event.currentTarget.value)\r\n  }\r\n\r\n  const inputImgUrl = (event: SyntheticEvent<HTMLInputElement>): void => {\r\n    setImgUrl(event.currentTarget.value)\r\n  }\r\n\r\n  const inputImgAlt = (event: SyntheticEvent<HTMLInputElement>): void => {\r\n    setImgAlt(event.currentTarget.value)\r\n  }\r\n\r\n  const openImgModal = (): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['IS-UPLOAD-MODAL-OPEN']]: true })\r\n  }\r\n\r\n  const closeUploadModal = (): void => {\r\n    setImgAlt('')\r\n    setImgUrl(undefined)\r\n    setErrors({})\r\n    searchParams.remove([URL_SEARCH_PARAMS['IS-UPLOAD-MODAL-OPEN']])\r\n    asset.current = undefined\r\n    \r\n    if(getValue) getValue(textAreaContent)\r\n  }\r\n\r\n  const showCurrentContent = (): void => {\r\n    setIsPreviewMode(prev => !prev)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(initRender) {\r\n      TextEditor.shortCut.pushIntoHistory(defaultValue || '')\r\n      setTextAreaContent(defaultValue || '')\r\n      if(getValue) getValue(defaultValue || '')\r\n    }\r\n  }, [defaultValue])\r\n\r\n  useEffect(() => {\r\n    const keyUp = (event: KeyboardEvent): void => {\r\n      if(event.code === 'ControlLeft') {\r\n        TextEditor.shortCut.lineStart = 0\r\n        TextEditor.shortCut.lineEnd = 0\r\n        TextEditor.shortCut.shortCutPressedKeys = []\r\n      }\r\n    }\r\n\r\n    const keyDown = (event: KeyboardEvent): void => {\r\n      const code = event.code as keyof typeof TextEditor.shortCut\r\n\r\n      if(event.ctrlKey && document.activeElement === textAreaRef.current) {\r\n        TextEditor.shortCut.shortCutPressedKeys.push(code)\r\n\r\n        if(code === 'KeyL') {\r\n          TextEditor.shortCut.KeyL(event, textAreaRef)\r\n        } else if(code === 'KeyZ') {\r\n          setTextAreaContent(TextEditor.shortCut.KeyZ(event))\r\n        } else if(code === 'KeyY') {\r\n          setTextAreaContent(TextEditor.shortCut.KeyY(event))\r\n        }\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', keyDown)\r\n    document.addEventListener('keyup', keyUp)\r\n  }, [])\r\n\r\n  return(\r\n    <Fragment>\r\n      {isUploading.current ? <MutatingLoader/> : null}\r\n      <ModalError error={errors?.['upload-error']}/>\r\n      <section className={scss.text_area_action_buttons_container}>\r\n        <button disabled={isPreviewMode} onClick={bold} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Bold /></button>\r\n        <button disabled={isPreviewMode} onClick={headerOne} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Heading1/></button>\r\n        <button disabled={isPreviewMode} onClick={headerTwo} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Heading2/></button>\r\n        <button disabled={isPreviewMode} onClick={link} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Link2 /></button>\r\n        <button disabled={isPreviewMode} onClick={openImgModal} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><FileImage /></button>\r\n        <button onClick={showCurrentContent} type='button' className={`${scss.text_area_text_action} flex-row-center-center-none`}><Eye /></button>\r\n      </section>\r\n      <div className={scss.text_area_container}>\r\n        <div ref={mainContainerRef} className={isOpen ? `${scss.text_area_asset_modal_container} flex-row-center-center-none` : `${scss.text_area_asset_modal_container} ${scss.text_area_asset_modal_container_hidden} flex-row-center-center-none`}>\r\n          <div className={`${scss.text_area_asset_modal_body} main-content-container flex-column-normal-normal-small`}>\r\n            <div className={`${scss.text_area_asset_modal_header} flex-row-normal-space-between-medium`}>\r\n              <p>Upload File</p>\r\n              <X onClick={closeUploadModal}/>\r\n            </div>\r\n            <TextInput errors={errors} onInput={inputImgUrl} defaultValue={imgUrl || ''} name='url' type='text' placeholder='Put you img URL here!'/>\r\n            <TextInput errors={errors} onInput={inputImgAlt} defaultValue={imgAlt || ''} name='alt' type='text' placeholder='Put img Alt attributte here!'/>\r\n            <FileInput label='Upload img!' name='uploadImg' asset={asset} initValue={imgUrl}/>\r\n            <button disabled={isUploading.current} type='button' onClick={addImg}>Add Link</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {isPreviewMode ? <ContentViewer content={textAreaContent}/> :\r\n            <textarea \r\n              className={scss.text_area}\r\n              placeholder={placeholder} \r\n              spellCheck={false}\r\n              onChange={inputContent} \r\n              ref={textAreaRef} \r\n              value={textAreaContent} \r\n              rows={(textAreaContent?.split(/\\n/)?.length || 0) + 1}></textarea>}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  ) \r\n})","import check from \"@/component/content-viewer/parser/contentParser\"\r\n\r\nexport default function areaValidation(currState: { alt?: string, url?: string, asset?: File }) {\r\n  let errors: { [key: string]: string } = {}\r\n\r\n  if(!currState.alt) errors = {...errors, alt: 'Alt is required filed!' }\r\n  if(!check.secure.URL(currState.url || '') && !currState.url && !currState.asset) errors = {...errors, url: 'URL is not valid!' }\r\n  if((currState.url || '')?.length > 0 && currState.asset) errors = {...errors, url: 'Url or Data url is defined!'  }\r\n\r\n  return errors\r\n}","import fetcher from \"@/lib/fetcher/fetcher\";\r\n\r\nexport default async function uploadAsset(formData: FormData): Promise<{ assetURL: string }> {\r\n  try {\r\n    return await fetcher.post<{ assetURL: string }>('/api/upload', formData)\r\n  } catch(error) {\r\n    throw new Error('Error by uploading img!')\r\n  } \r\n}","import scss from './checkBoxInput.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { Check } from 'lucide-react'\r\n\r\nimport type { CheckBoxInputProps } from \"../input.type\";\r\n\r\nexport default function CheckBoxInput({ defaultValue, label, name }: CheckBoxInputProps) {\r\n  return(\r\n    <div style={{ width: '100%' }} className={`flex-row-center-normal-none`}>\r\n      <label className={`${scss.checkbox_body} flex-row-center-normal-medium`}>\r\n        <input tabIndex={-1} name={name} className={scss.checkbox_default_input} type=\"checkbox\" defaultChecked={defaultValue}/>\r\n        <div className={scss.checkbox_custom_checkbox_wrapper}>\r\n          <p className={scss.checkbox_custom_checkbox_body}></p>\r\n          <Check/>\r\n        </div>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  )\r\n}","import scss from './page.module.scss'\r\n\r\nimport type { Content, ServerResponseError } from '@/global.type'\r\nimport type { AppDispatch, RootState } from '@/store/store'\r\nimport type { PostCommentsData } from '../post/page.type'\r\nimport type { CreatorState, ContentDraft } from '@/store/creator/creator.type'\r\n\r\nimport FormWrapper from \"@/component/form-wrapper/formWrapper\"\r\nimport TextInput from \"@/component/input/textInput/textInput\"\r\nimport TextArea from '@/component/input/textArea/textArea'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport ModalError from '@/component/modal-error/modalError'\r\nimport TextTagInput from '@/component/input/text-tag-input/textTagInput'\r\nimport Button from '@/component/button/button'\r\nimport CheckBoxInput from '@/component/input/checkbox-input/checkBoxInput'\r\nimport WriteNewLoader from './loader'\r\n\r\nimport { Fragment, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\n\r\nimport { editOrinsertContentDraft, removeContentDraft } from '@/store/creator/creator'\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useForm from '@/custom-hook/useForm/useForm'\r\nimport useAuth from '@/custom-hook/useAuth/useAuth'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport usePermitor from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata'\r\n\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\n//Create content || Update content || Save draft || Update draft || Remove draft\r\nexport default function WriteNewPost() {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const redirect = useNavigate()\r\n  const creator = useSelector<RootState, CreatorState>(state => state.creator)\r\n\r\n  const searchParams = useSearchParams()\r\n  const auth = useAuth()\r\n  const { submit } = useForm<Content>([])\r\n  const permitor = usePermitor()\r\n  \r\n  const contentID: string | null = searchParams.get('content-id')\r\n  const draftID: string | null = searchParams.get('draft-id')\r\n  const isEdit: boolean = JSON.parse(searchParams.get('is-edit') || 'false')\r\n\r\n  if(!permitor.role(['Admin', 'Creator']).permited()) {\r\n    return <Navigate to='/'/>\r\n  }\r\n\r\n  const currContent: ContentDraft | undefined = \r\n    //Get content to edit\r\n    isEdit && contentID ? \r\n    localStorage.get<ContentDraft>(contentID, 'null') :\r\n    //Get content draft to edit\r\n    draftID ?\r\n    creator.contentDraft.find(content => content._id === draftID) :\r\n    undefined\r\n\r\n  const isPost: boolean = currContent?.contentType === 'post'\r\n\r\n  useMetadata({ \r\n    title: \r\n      isEdit && currContent ? `${isPost ? currContent.title : 'Comment'} ändern` :\r\n      draftID && currContent ? `${isPost ? currContent.title : 'Entwurf'} ändern` :\r\n      'Neue post schreiben',\r\n    description: 'Hier kannst neue post oder entwurfe schreiben oder ändern.'\r\n  })\r\n\r\n  const key: string[] = currContent?.isFromAdmin ? [] : currContent?.contentType === 'comment' ? [`post-${currContent.onPost}-comments-${currContent.onPage}`] : ['all-posts']\r\n\r\n  const { mutate, isMutating, error } = useRequest({ deps: key })\r\n\r\n  const toError: ServerResponseError | undefined = error ? error : isEdit && !currContent ? { code: 404, message: 'Content not found!' } : undefined\r\n  \r\n  const tagsRef = useRef<string[]>(currContent?.tags || [])\r\n  const contentRef = useRef<string>('')\r\n  \r\n  const createNew = async(data: any): Promise<void> => {\r\n    delete data.alt\r\n    delete data.uploadImg\r\n    delete data.url\r\n\r\n    mutate<PostCommentsData | Content[]>({\r\n      key,\r\n      request: async function(option) {\r\n        if(isEdit) {\r\n          const updated = await fetcher.post<Content>(`/admin/${currContent?.contentType}/update`, {...data, content: contentRef.current, tags: tagsRef.current, id: contentID }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n          localStorage.remove(updated._id!)\r\n\r\n          //Edit post\r\n          if(currContent?.contentType === 'post') {\r\n            const state = option.state as Content[] || []\r\n  \r\n            option.removeCache(`/post-${updated._id}`)\r\n\r\n            for(let index: number = (currContent?.onPage || 0) + 1; index >= 0; index--) {\r\n              option.removeCache(`${currContent.contentType}-${index}`)\r\n            }\r\n\r\n            if(!currContent.isFromAdmin) redirect(`/post/${updated._id}`)\r\n            else redirect(`/admin/${currContent.contentType}`)\r\n  \r\n            return state.map(post => post._id === updated._id ? updated : post)\r\n          }\r\n          \r\n          //Edit comment\r\n          if(currContent?.contentType === 'comment') {\r\n            const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n  \r\n            if(!currContent.isFromAdmin) {\r\n              redirect(`/post/${currContent?.onPost}?page=${currContent?.onPage}`)\r\n              return {...state, comments: state.comments.map(comment => comment._id === updated._id ? updated : comment) }\r\n            }\r\n\r\n            redirect('/admin')\r\n            return undefined\r\n          }\r\n        }\r\n\r\n        //Insert post\r\n        const post = await fetcher.post<Content>(`/insert/post`, {...data, content: contentRef.current, tags: tagsRef.current }, { 'Authorization': `Bearer ${auth?.user?.token}` })\r\n        const state = option.state as Content[] || []\r\n\r\n        redirect(`/post/${post._id}`)\r\n        return [...state || [], post]\r\n      }\r\n    })\r\n  }\r\n\r\n  const getTags = (tags: string[]): void => {\r\n    tagsRef.current = tags\r\n  }\r\n\r\n  const saveDraft = (): void => {\r\n    const newDraftID: string = draftID || contentID || window.crypto.randomUUID()\r\n      \r\n    dispatch(editOrinsertContentDraft({...currContent, _id: newDraftID!, content: contentRef.current }))\r\n      \r\n    searchParams.set({ 'draft-id': newDraftID })\r\n    searchParams.remove(['content-id'])\r\n    localStorage.remove(contentID!)\r\n  }\r\n\r\n  const deleteDraft = (): void => {\r\n    dispatch(removeContentDraft(draftID || contentID!))\r\n    searchParams.remove(['draft-id'])\r\n  }\r\n\r\n  const getTextAreaContentValue = (content: string): void => {\r\n    contentRef.current = content\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {toError ? <ModalError error={toError}/> : null}\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      {auth.isAuthPending ?\r\n        <WriteNewLoader/> :\r\n        <div className={`${scss.create_new_post_container} flex-row-normal-center-big`}>\r\n          <FormWrapper className={scss.create_new_post_form} onSubmit={submit(createNew)} isPending={false}>\r\n            {currContent?.contentType !== 'comment' ?\r\n              <Fragment>\r\n                <TextInput name='title' defaultValue={currContent?.title} placeholder='Post title'/>\r\n                <CheckBoxInput name='isHidden' label='Hidde post' defaultValue={currContent?.isHidden}/>\r\n                <TextTagInput getTags={getTags} placeholder='Post tags' value={tagsRef.current}/>\r\n              </Fragment> : null}\r\n            <TextArea defaultValue={currContent?.content} placeholder='Write content body here...' getValue={getTextAreaContentValue}/>\r\n            <div className={scss.create_new_buttons_container}>\r\n              <Button label={isEdit ? `Edit ${currContent?.contentType}` : `Create post`} type='submit'/>\r\n              <Button label={currContent && !contentID ? \"Save draft changes\" : 'Save as draft'} onClick={saveDraft}/>\r\n              <Button label=\"Delete draft\" onClick={deleteDraft}/>\r\n            </div>\r\n          </FormWrapper>\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["slice","createSlice","name","initialState","contentDraft","localStorage","get","reducers","editOrinsertContentDraft","state","payload","length","set","find","content","index","_id","map","removeContentDraft","filter","draft","actions","creator","reducer","WriteNewLoader","jsx","className","scss","write_new_loader_container","children","jsxs","write_new_loader_body","write_new_loader_input","style","height","TextEditor","shortCut","lineEnd","lineStart","currentHistory","shortCutPressedKeys","history","pushIntoHistory","this","push","KeyL","event","textAreaRef","preventDefault","textArea","current","isMultiple","array","count","countDuplicate","selectionStart","value","indexOf","selectionEnd","KeyZ","KeyY","edit","wrappKeys","BOLD","HEADER_1","HEADER_2","LINK","wrapp","to","start","end","toWrapp","substring","memo","placeholder","defaultValue","getValue","textAreaContent","setTextAreaContent","useState","errors","setErrors","isPreviewMode","setIsPreviewMode","imgAlt","setImgAlt","imgUrl","setImgUrl","asset","useRef","mainContainerRef","isUploading","cursorPosition","isOpen","useOutsideClick","URL_SEARCH_PARAMS","searchParams","useSearchParams","addImg","useCallback","async","res","currState","alt","check","secure","URL","url","areaValidation","test","type","selection","Object","entries","notUndefined","uploadedAsset","FormData","uploadedURL","append","formData","fetcher","post","error","Error","uploadAsset","message","imgLink","assetURL","remove","useEffect","document","addEventListener","code","ctrlKey","activeElement","Fragment","MutatingLoader","ModalError","disabled","onClick","bolded","Bold","headered","Heading1","Heading2","link","Link2","FileImage","prev","Eye","ref","X","TextInput","onInput","currentTarget","FileInput","label","initValue","ContentViewer","spellCheck","onChange","rows","split","CheckBoxInput","width","checkbox_body","tabIndex","checkbox_default_input","defaultChecked","checkbox_custom_checkbox_wrapper","checkbox_custom_checkbox_body","Check","dispatch","useDispatch","redirect","useNavigate","useSelector","auth","useAuth","submit","useForm","permitor","usePermitor","contentID","draftID","isEdit","JSON","parse","role","permited","Navigate","currContent","isPost","contentType","useMetadata","title","description","key","isFromAdmin","onPost","onPage","mutate","isMutating","useRequest","deps","toError","tagsRef","tags","contentRef","isAuthPending","FormWrapper","onSubmit","data","uploadImg","request","option","updated","id","Authorization","coockie","getOne","removeCache","pagesCount","comments","comment","user","token","isPending","isHidden","TextTagInput","getTags","TextArea","Button","newDraftID","window","crypto","randomUUID"],"mappings":"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"}