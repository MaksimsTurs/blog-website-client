{"version":3,"file":"write-new.js","sources":["../../../../src/store/creator/creator.ts","../../../../src/page/write-new/loader.tsx","../../../../src/page/write-new/page.tsx"],"sourcesContent":["import { type PayloadAction, createSlice } from '@reduxjs/toolkit'\r\n\r\nimport type { ContentDraft, CreatorState } from './creator.type'\r\n\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nconst initState: CreatorState = {\r\n  contentDraft: localStorage.get('content-draft', '[]')  \r\n}\r\n\r\nconst slice = createSlice({\r\n  name: 'creator',\r\n  initialState: initState,\r\n  reducers: {\r\n    editOrinsertContentDraft: (state, { payload }: PayloadAction<ContentDraft>) => {\r\n      if(state.contentDraft.length === 0) return localStorage.set('content-draft', state.contentDraft = [payload])\r\n\r\n      const currentDraft = state.contentDraft.find((content, index) => content._id === payload._id ? { _id: content._id, index } : undefined)\r\n\r\n      if(currentDraft) {\r\n        localStorage.set('content-draft', state.contentDraft = state.contentDraft.map(content => content._id === payload._id ? payload : content))\r\n      } else {\r\n        localStorage.set('content-draft', state.contentDraft = [...state.contentDraft, payload])\r\n      }\r\n    },\r\n    removeContentDraft: (state, { payload }: PayloadAction<string>) => {\r\n      if(state.contentDraft.length === 0) return\r\n      localStorage.set('content-draft', state.contentDraft = state.contentDraft.filter(draft => draft._id !== payload))\r\n    }\r\n  }\r\n})\r\n\r\nexport const { editOrinsertContentDraft, removeContentDraft } = slice.actions\r\nexport default slice.reducer","import scss from './loader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function WriteNewLoader() {\r\n  return(\r\n    <div className={`${scss.write_new_loader_container} flex-row-normal-center-medium`}>\r\n      <div className={`${scss.write_new_loader_body} flex-column-normal-normal-small`}>\r\n        <div className={scss.write_new_loader_input}></div>\r\n        <div className={scss.write_new_loader_input}></div>\r\n        <div className='flex-row-normal-normal-small'>\r\n          <button></button>\r\n          <button></button>\r\n          <button></button>\r\n        </div>\r\n        <div style={{ height: '10rem' }} className={scss.write_new_loader_input}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from './page.module.scss'\r\n\r\nimport type { Content, CustomInputsRef } from '@/global.type'\r\nimport type { AppDispatch, RootState } from '@/store/store'\r\nimport type { PostCommentsData } from '../post/page.type'\r\nimport type { CreatorState, ContentDraft } from '@/store/creator/creator.type'\r\nimport type { FormFieldsValidation } from '@/custom-hook/use-form/useForm.type'\r\n\r\nimport FormWrapper from \"@/component/form-wrapper/formWrapper\"\r\nimport TextInput from \"@/component/input/textInput/textInput\"\r\nimport TextArea from '@/component/input/textArea/textArea'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport TextTagInput from '@/component/input/text-tag-input/textTagInput'\r\nimport Button from '@/component/buttons/button/button'\r\nimport CheckBoxInput from '@/component/input/checkbox-input/checkBoxInput'\r\nimport LocalError from '@/component/errors/local-error/localError'\r\nimport WriteNewLoader from './loader'\r\n\r\nimport { Fragment, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\n\r\nimport { editOrinsertContentDraft, removeContentDraft } from '@/store/creator/creator'\r\n\r\nimport useForm from '@/custom-hook/use-form/useForm'\r\nimport useAuth from '@/custom-hook/use-auth/useAuth'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport usePermitor from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useMutate from '@/custom-hook/use-request/useMutate'\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\n\r\nimport { AUTHORIZATION_OBJECT } from '@/conts'\r\n\r\nconst USE_FORM_VALIDATION: FormFieldsValidation<Content> = { title: { isMin: { message: 'Title is to short!', value: 4 }}}\r\n\r\nexport default function WriteNewPost() {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const redirect = useNavigate()\r\n  const creator = useSelector<RootState, CreatorState>(state => state.creator)\r\n  const postTagsRef = useRef<CustomInputsRef<string[]> | undefined>()\r\n  const postContentRef = useRef<CustomInputsRef<string> | undefined>()\r\n\r\n  const searchParams = useSearchParams()\r\n  const auth = useAuth()\r\n  const permitor = usePermitor()\r\n  \r\n  const draftID: string | null = searchParams.get('draft-id')\r\n\r\n  if(!permitor.role(['Admin', 'Creator']).permited()) return <Navigate to='/'/>\r\n\r\n  const currContent: ContentDraft | undefined = draftID ? creator.contentDraft.find(content => content._id === draftID) : undefined\r\n  \r\n  const { mutate, isMutating, error } = useMutate<PostCommentsData | Content[]>('/10')\r\n  const { submit, reset, register, formState: { errors }} = useForm<Content>(\r\n    USE_FORM_VALIDATION, \r\n    { title: currContent?.title, isHidden: currContent?.isHidden },\r\n    () => {\r\n      postTagsRef.current?.clear()\r\n      postContentRef.current?.clear()\r\n    }\r\n  )\r\n    \r\n  const createNew = async(data: any): Promise<void> => {\r\n    delete data.alt\r\n    delete data.uploadImg\r\n    delete data.url\r\n\r\n    mutate(async function(option) {\r\n      const post = await fetcher.post<Content>(`/insert/post`, {...data, content: postContentRef.current?.value, tags: postTagsRef.current?.value }, AUTHORIZATION_OBJECT)\r\n      const state = option.state as Content[] || []\r\n\r\n      redirect(`/post/${post._id}`)\r\n      return [...state || [], post]\r\n    })\r\n\r\n    reset()\r\n  }\r\n\r\n  const saveDraft = (): void => {\r\n    const newDraftID: string = draftID || window.crypto.randomUUID()\r\n      \r\n    dispatch(editOrinsertContentDraft({...currContent, _id: newDraftID!, content: postContentRef.current?.value || '' }))\r\n      \r\n    searchParams.set({ 'draft-id': newDraftID })\r\n  }\r\n\r\n  const deleteDraft = (): void => {\r\n    dispatch(removeContentDraft(draftID!))\r\n\r\n    searchParams.remove(['draft-id'])\r\n    reset()\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {isMutating && <MutatingLoader/>}\r\n      {auth.isAuthPending ?\r\n        <WriteNewLoader/> :\r\n        <div className={`${scss.create_new_post_container} flex-row-normal-center-big`}>\r\n          <FormWrapper className={scss.create_new_post_form} onSubmit={submit(createNew)} isPending={false}>\r\n            <TextInput register={register} name='title' errors={errors} placeholder='Post title'/>\r\n            <CheckBoxInput register={register} name='isHidden' label='Hidde post'/>\r\n            <TextTagInput ref={postTagsRef} placeholder='Post tags' value={currContent?.tags}/>\r\n            <TextArea ref={postContentRef} defaultValue={currContent?.content} placeholder='Write content body here...'/>\r\n            <div className={`${scss.create_new_buttons_container} flex-row-center-normal-medium`}>\r\n              <Button type='submit'>Post speichern</Button>\r\n              <Button onClick={saveDraft}>{currContent ? \"Entwurf speichern\" : 'Als Entwurf speichern'}</Button>\r\n              {draftID && <Button onClick={deleteDraft}>Entwurf l√∂schen</Button>}\r\n            </div>\r\n            {error && <LocalError error={error.message}/>}\r\n          </FormWrapper>\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["slice","createSlice","name","initialState","contentDraft","localStorage","get","reducers","editOrinsertContentDraft","state","payload","length","set","find","content","index","_id","map","removeContentDraft","filter","draft","actions","creator","reducer","WriteNewLoader","jsx","className","scss","children","jsxs","style","height","USE_FORM_VALIDATION","title","isMin","message","value","dispatch","useDispatch","redirect","useNavigate","useSelector","postTagsRef","useRef","postContentRef","searchParams","useSearchParams","auth","useAuth","permitor","usePermitor","draftID","role","permited","Navigate","to","currContent","mutate","isMutating","error","useMutate","submit","reset","register","formState","errors","useForm","isHidden","current","clear","Fragment","MutatingLoader","isAuthPending","FormWrapper","onSubmit","async","data","alt","uploadImg","url","option","post","fetcher","tags","AUTHORIZATION_OBJECT","isPending","TextInput","placeholder","CheckBoxInput","label","TextTagInput","ref","TextArea","defaultValue","Button","type","onClick","newDraftID","window","crypto","randomUUID","remove","LocalError"],"mappings":"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"}