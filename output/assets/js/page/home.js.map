{"version":3,"file":"home.js","sources":["../../../../src/custom-hook/use-auth/useAuth.ts","../../../../src/component/loader/post-container-loader/postContainerLoader.tsx","../../../../src/page/home/loader.tsx","../../../../src/component/modals/confirm-modal/confirmModal.tsx","../../../../src/component/post-container/component/postHeader.tsx","../../../../src/component/post-container/component/postWrapper.tsx","../../../../src/component/post-container/component/postTags.tsx","../../../../src/component/post-container/postContainer.tsx","../../../../src/page/home/page.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./authProvider\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nimport type { CreateParams, UserSessionData } from \"./useAuth.type\";\r\n\r\nimport useSearchParams from \"../use-search-params/useSearchParams\";\r\n\r\nimport { URL_SEARCH_PARAMS } from \"@/conts\";\r\n\r\nexport default function \r\nuseAuth() {\r\n  const redirect = useNavigate()\r\n  const userContext = useContext(AuthContext)\r\n  const searchParams = useSearchParams()\r\n\r\n  const isLogOpen: string | null = searchParams.get(URL_SEARCH_PARAMS[\"IS-LOGIN-MODAL-OPEN\"])\r\n  const isRegOpen: string | null = searchParams.get(URL_SEARCH_PARAMS[\"IS-REGISTRATE-MODAL-OPEN\"])\r\n\r\n  return {\r\n    ...userContext?.userState,\r\n    create: async function(params: CreateParams): Promise<void> {\r\n      try {\r\n        if(params.setSession) return userContext?.updateUserState({ user: params.setSession, isAuthPending: false, isLoading: false })\r\n          \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: true })\r\n        \r\n        const response = await fetcher.post<UserSessionData>(params.apiURL!, params.body)\r\n        \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: response })\r\n\r\n        if(params?.setToken) coockie.set('PR_TOKEN', response.token)\r\n        if(params?.redirectURL) redirect(params.redirectURL)\r\n      } catch(error) {\r\n        userContext!.updateUserState!(prev => ({...prev, isAuthPending: false, isLoading: false, error: error instanceof Error ? { code: 503, message: 'Service Unavailable!' } : JSON.parse(error as string) }))\r\n      }\r\n    },\r\n    out: function(): void {\r\n      userContext?.updateUserState({ isAuthPending: false, isLoading: false })\r\n      coockie.set('PR_TOKEN', 'undefined')\r\n    },\r\n    clearError: function(): void {\r\n      useEffect(() => {\r\n        userContext?.updateUserState(prev => ({...prev, error: undefined }))\r\n      }, [isLogOpen, isRegOpen])\r\n    }\r\n  }\r\n}","import scss from './postContainerLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PostContainerLoader() {\r\n  return(\r\n    <div className={`${scss.post_loader_container} main-content-container flex-column-normal-normal-medium`}>\r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div className={scss.post_loader_avatar}></div>\r\n        <div className='flex-column-normal-normal-medium'>\r\n          <div style={{ width: '4rem' }} className={scss.post_loader_text}></div>\r\n          <div style={{ width: '7rem' }} className={scss.post_loader_text}></div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '11rem' }} className={scss.post_loader_text}></div>\r\n      <div className='flex-column-normal-normal-medium'>\r\n        <div style={{ width: '50%' }} className={scss.post_loader_text}></div>\r\n        <div style={{ width: '20%' }} className={scss.post_loader_text}></div>\r\n      </div>\r\n      <div  className='flex-row-normal-space-between-none'>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n        </div>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nimport type { LoaderProps } from './page.type';\r\n\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata';\r\n\r\nexport default function Loader({ containersCount }: LoaderProps) {\r\n  useMetadata({ title: 'Home', description: 'Hier kannst du alle letzt geschriebene posts ansehen.' })\r\n  return <div className='flex-column-normal-normal-small'>{[...Array(containersCount || 3)].map((_, index) => <PostContainerLoader key={index}/>)}</div>\r\n}","import scss from './confirmModal.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport XButton from '../../buttons/x-button/xbutton'\r\nimport Button from '../../buttons/button/button'\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useOutsideClick from '@/custom-hook/use-outside-click/useOutsideClick'\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nimport type { ConfirmModalProps } from './confirmModal.type'\r\n\r\nimport { useRef } from 'react'\r\n\r\nexport default function ConfirmModal({ text, onConfirm }: ConfirmModalProps) {\r\n  const searchParams = useSearchParams()\r\n\r\n  const modalContainerRef = useRef<HTMLDivElement>(null)\r\n\r\n  const isOpen: boolean = useOutsideClick(URL_SEARCH_PARAMS['IS-CONFIRM-MODAL-OPEN'], modalContainerRef)\r\n\r\n  const closeConfirmModal = (): void => {\r\n    searchParams.remove([URL_SEARCH_PARAMS['IS-CONFIRM-MODAL-OPEN']])\r\n  }\r\n\r\n  return(\r\n    <div ref={modalContainerRef} className={`${isOpen ? scss.confirm_modal_open : ''} ${scss.confirm_modal_container} flex-row-center-center-none`}>\r\n      <div className={`${scss.confirm_modal_body} main-content-container`}>\r\n        <section className={`${scss.confirm_modal_header} flex-row-center-space-between-medium`}>\r\n          <p>Confirm</p>\r\n          <XButton onClick={closeConfirmModal}/>\r\n        </section>\r\n        <div className={scss.confirm_modal_text_body}>\r\n          <p>{text}</p>\r\n          <div className='flex-row-center-center-none'>\r\n            <Button label='Confirm' className={scss.confirm_modal_button} onClick={onConfirm}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postHeader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { PostHeaderProps } from '../postContainer.type'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Pencil, Trash2, UserX } from 'lucide-react'\r\nimport { Fragment } from 'react/jsx-runtime'\r\n\r\nimport useMutate from '@/custom-hook/use-request/useMutate'\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\nimport CharacterArray from '@/lib/string/characters'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nimport type { Content } from '@/global.type'\r\nimport type { PostCommentsData } from '@/page/post/page.type'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\nimport ConfirmModal from '@/component/modals/confirm-modal/confirmModal'\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nexport default function PostHeader({ user, createdAt, type, contentID, postID, content, tags, title, isHidden }: PostHeaderProps) {\r\n  const permission = useHavePermission()\r\n  const searchParams = useSearchParams()\r\n  const redirect = useNavigate()\r\n  const { pathname } = useLocation()\r\n  \r\n  const isAdminOrCreator: boolean = permission.roleAndEqual(['Admin', 'Creator'], '_id', user?._id).permited()\r\n\r\n  const isPostPage: boolean = pathname.search('/post/') > -1\r\n  const isHomePage: boolean = pathname.search('/') > -1\r\n  const isSearchPage: boolean = pathname.search('/search') > -1\r\n\r\n  const typeForAPI = type === 'preview' ? 'post' : type\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n  const key: string = isPostPage && type === 'comment' ? `post-${postID}-comments-${searchParams.get('page') || 0}` : isHomePage ? 'all-posts' : ''\r\n\r\n  const { mutate, changeError } = useMutate<Content[] | PostCommentsData>(key)\r\n\r\n  const openConfirmModal = (): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['IS-CONFIRM-MODAL-OPEN']]: true })\r\n  }\r\n\r\n  const removePost = (): void => {\r\n    contentAction('remove')\r\n  }\r\n\r\n  const contentAction = (action: 'hidde' | 'show' | 'remove' | 'edit'): void => {\r\n    //User have no permmissin\r\n    if(!permission.role(['Creator', 'Admin']).permited()) {\r\n      return changeError({ code: 403, message: 'You have no edit and remove permission!' })\r\n    }\r\n\r\n    if(action === 'edit') {\r\n      if(permission.role(['Creator']).permited()) {\r\n        localStorage.set(contentID, { content, tags, title, isHidden, isEdit: true, contentType: typeForAPI, onPage: page, onPost: postID })\r\n        return redirect(`/write-post?content-id=${contentID}`)\r\n      } \r\n\r\n      if(permission.role(['Admin']).permited()) {\r\n        return redirect(`/admin/${typeForAPI}?id=${contentID}&${typeForAPI}-edit-modal=true`)\r\n      }\r\n    }\r\n\r\n    mutate(async (option) => {\r\n      //Remove item handlers\r\n      if(action === 'remove') {\r\n        const removedItem = await fetcher.get<Content>(`/admin/remove/${CharacterArray.firstLetterToUpperCase(typeForAPI)}/${contentID}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n        \r\n        //Remove some comment from post page\r\n        if(isPostPage && type === 'comment') {\r\n          const state = option.state as PostCommentsData || { comments: [], pagesCount: 0 }\r\n\r\n          if(state.comments.length === 1 && state.pagesCount >= 1) {\r\n            for(let index: number = state.pagesCount - 1; index >= 0; index--) if(index !== page) option.removeCache(`post-${postID}-comments-${index}`)\r\n            redirect(`/post/${postID}?page=${+page - 1}`)\r\n            return { pagesCount: 0, comments: [] }            \r\n          }\r\n          return {...state, comments: state.comments!.filter(content => content._id !== removedItem._id) }\r\n        } \r\n        \r\n        //Remove some post from home page\r\n        if(isHomePage) {\r\n          const state = option.state as Content[] || []\r\n          return state.filter(content => content._id !== removedItem._id)\r\n        }\r\n      }\r\n\r\n      //Hidde item handlers\r\n      const hiddenItem = await fetcher.post<Content>(`/admin/${typeForAPI}/update`, { id: contentID, isHidden: action === 'hidde' }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n      \r\n      //Hidde some comment from post page\r\n      if(isPostPage) {\r\n        const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n        return {...state, comments: state.comments!.map(content => content._id === hiddenItem._id ? {...content, ...hiddenItem } : content) }\r\n      }\r\n\r\n      //Hidde post from home page\r\n      const state = option.state as Content[] || []\r\n      return state.map(content => content._id === hiddenItem._id ? hiddenItem : content)\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(createdAt)\r\n    .getSortDate({\r\n       year: '[year] year [month] months ago!',\r\n       month: '[month] month [day] days ago!',\r\n       day: '[day] day [hour] hours ago!',\r\n       hour: '[hour] hour [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <Fragment>\r\n      <ConfirmModal text='Do you will to remove this post?' onConfirm={removePost}/>\r\n      <div className={`${scss.post_header} flex-row-center-space-between-none`}>\r\n        {user ? \r\n        <div className='flex-row-center-normal-medium'>\r\n          <ImageComponent styles={{ svg: { width: '2rem', height: '2rem' }, img: { width: '2rem', height: '2rem' }}} src={user?.avatar} alt={user?.name || 'User avatar'}/>\r\n          <div className={scss.post_author}>\r\n            <Link to={`/user/${user?._id}`}>{user?.name}</Link>\r\n            <p className={scss.post_create_date}>{createdAtDifference}</p>  \r\n          </div>\r\n        </div> :\r\n        <div className={`${scss.post_header_author_not_defined} flex-row-center-normal-medium`}>\r\n          <UserX/>\r\n          <p>Author is possibly deleted!</p>\r\n        </div>}\r\n        {(isAdminOrCreator && !isSearchPage) ?\r\n        <button className={scss.post_action_button}>\r\n          <svg viewBox=\"0 0 128 512\"><path d=\"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z\"/></svg>\r\n          <ul className={`${scss.post_action_container} flex-column-normal-normal-none`}>\r\n            <li onClick={openConfirmModal} className='flex-row-center-normal-medium'><Trash2/><p>Remove</p></li>\r\n            <li onClick={() => contentAction('edit')} className='flex-row-center-normal-medium'><Pencil/><p>Edit</p></li>\r\n            <li onClick={() => contentAction(isHidden ? 'show' : 'hidde')} className='flex-row-center-normal-medium'>{isHidden ? <Eye/> : <EyeOff/>}<p>{isHidden ? 'Show' : 'Hidden'}</p></li>\r\n          </ul>\r\n        </button> : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}","import scss from '../scss/postWrapper.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PropsWithChildren } from \"react\"\r\nimport type { PostWrapperProps } from '../postContainer.type'\r\n\r\nimport { EyeOff } from 'lucide-react'\r\n\r\nexport default function PostWrapper({ children, className }: PropsWithChildren<PostWrapperProps>) {\r\n  return (\r\n    <section className={`${scss.post_wrapper_container} ${className} main-content-container`}>\r\n      {className ? \r\n       <div className={`${scss.post_is_hidden} flex-row-center-center-medium`}>\r\n         <EyeOff/>\r\n         <p>Hidden</p>\r\n       </div> : null}\r\n      <div style={{ padding: '1rem' }}>{children}</div>\r\n    </section>\r\n  )\r\n}","import scss from '../scss/postTags.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PostTagsProps } from '../postContainer.type'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostTags({ tags }: PostTagsProps) {\r\n  return <div className={`${scss.post_tags} flex-row-normal-normal-medium`}>{tags.map(tag => tag.trim() ? <Link to={`/search?tag=${tag}`} key={tag}>{tag}</Link> : null)}</div>\r\n}","import scss from './postContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport PostHeader from \"./component/postHeader\";\r\nimport PostWrapper from \"./component/postWrapper\";\r\nimport PostTags from './component/postTags';\r\nimport ContentViewer from '../content-viewer/contentViewer';\r\nimport type { Content } from '@/global.type';\r\nimport type { PostCommentsData } from '@/page/post/page.type';\r\nimport type { PostContainerProps } from \"./postContainer.type\";\r\n\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fragment } from 'react/jsx-runtime';\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser';\r\n\r\nimport useAuth from '@/custom-hook/use-auth/useAuth';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission';\r\nimport useMutate from '@/custom-hook/use-request/useMutate';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts';\r\n\r\nexport default function PostContainer({ post, type }: PostContainerProps) {\r\n  const { id } = useParams()\r\n  const { pathname } = useLocation()\r\n  const redirect = useNavigate()\r\n\r\n  const auth = useAuth()\r\n  const searchParams = useSearchParams()\r\n  const permission = useHavePermission()\r\n\r\n  const isPostPage: boolean = pathname.search('/post') > -1\r\n  const isHomePage: boolean = pathname === '/'\r\n  const isLiked: boolean = post.likedBy.includes(auth.user?._id || '')\r\n  const isContentCreator: boolean = permission.role(['Creator']).equal('_id', post?.author?._id).permited()\r\n  const isAdmin: boolean = permission.role(['Admin']).permited()\r\n  const isHidden: boolean = post.isHidden\r\n\r\n  const postID: string = (type === 'preview' || type === 'post') ? post._id : id!\r\n  const currPage: number = (type === 'comment') ? parseInt(searchParams.get('page') || '0') : 0\r\n  const hiddenClass: string = ((isHidden && isAdmin) || (isContentCreator && isHidden)) ? scss.post_hidden : ''\r\n  const key: string = type === 'post' ? `post-${post._id}` : `post-${postID}-comments-${currPage}`\r\n\r\n  const { mutate } = useMutate<Content | PostCommentsData>(key)\r\n\r\n  if(isHidden && isPostPage && !isAdmin && !isContentCreator && type === 'post') redirect('/')\r\n\r\n  const showSomeData = (showThe: string): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['STATISTIC-TO-PREVIEW']]: showThe, [URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID']]: post._id, [URL_SEARCH_PARAMS['LIST-PAGE']]: 0 })\r\n  }\r\n\r\n  const likeThisPost = async (): Promise<void> => {\r\n    if(post.isHidden && !auth.user) return\r\n\r\n    mutate( async (option) => {\r\n      const likedContent = await fetcher.get<Content>(`/${type}/${post._id}/like`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n      //Update post\r\n      if(type === 'post') return likedContent\r\n\r\n      //Update comment\r\n      const state = option.state as PostCommentsData\r\n      const comments = state.comments || []\r\n\r\n      return {...state, comments: comments.map(comment => comment._id === likedContent._id ? likedContent : comment) }\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(post.createdAt)\r\n    .getSortDate({\r\n       year: '[year] years [month] months ago!',\r\n       month: '[month] months [day] days ago!',\r\n       day: '[day] days [hour] hours ago!',\r\n       hour: '[hour] hours [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <Fragment>\r\n      {isHomePage && !isContentCreator && !isAdmin && isHidden ? null :\r\n        <PostWrapper className={hiddenClass}>\r\n          {(type === 'comment' || type === 'preview') ? <PostHeader tags={post.tags || []} title={post.title || ''} content={post.content} isHidden={post.isHidden} postID={postID} contentID={post._id} type={type} createdAt={post.createdAt} user={post?.author}/> : null}\r\n          {type === 'post' ? \r\n            <div className={scss.post_content_container}>\r\n              <h4 className={scss.post_title}>{post.title}</h4>\r\n              <p className={scss.post_content_date}>{createdAtDifference}</p>\r\n              <ContentViewer content={post.content}/>\r\n            </div> : null}\r\n          {type === 'preview' ? \r\n            <div className={scss.post_content_container}>\r\n              <Link to={`/post/${post._id}`}>{post.title}</Link>\r\n              <ContentViewer className={scss.post_short_view} content={post.content.slice(0, 200)}/>\r\n            </div> : null}\r\n          {type === 'comment' ? <div className={scss.post_data}><ContentViewer content={post.content}/></div> : null}\r\n            <div className={`${scss.post_tags_statistic_container} flex-row-center-space-between-medium`}>\r\n              {((type === 'post' || type === 'preview') && post.tags) ? <PostTags tags={post.tags}/> : null}\r\n              <div className='flex-row-center-normal-big'>\r\n              {type === 'preview' ? \r\n                <Fragment>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('views') : undefined} ><Eye />{post.viewedBy?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('comments') : undefined}><MessageCircle />{post.comments?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('likes') : undefined}><Heart />{post.likedBy?.length}</p>\r\n                </Fragment> : null}\r\n              {(type === 'comment' || type === 'post') && auth.user ? <button onClick={likeThisPost} className={`${isLiked ? scss.post_liked : ''} ${scss.post_statistic_data} flex-row-center-normal-small`}><Heart/>{post.likedBy.length}</button> : null}\r\n            </div>\r\n          </div>\r\n        </PostWrapper>}\r\n    </Fragment>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport PageError from \"@/component/errors/page-error/pageError\"\r\nimport Empty from \"@/component/empty/empty\"\r\nimport Button from '@/component/buttons/button/button'\r\nimport StatisticPreview from './component/statisticPreview'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport LocalError from '@/component/errors/local-error/localError'\r\nimport Loader from './loader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport { Fragment, useState } from 'react'\r\n\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useMutate from '@/custom-hook/use-request/useMutate'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nconst contentPerLoad: number = 10\r\n\r\nexport default function Page() {\r\n  const [postCount, setPostCount] = useState<number>(10)\r\n\r\n  const searchParams = useSearchParams()\r\n\r\n  const statisticPreviewType: string | null = searchParams.get(URL_SEARCH_PARAMS['STATISTIC-TO-PREVIEW'])\r\n  \r\n  const { mutate, ...otherMutateProps } = useMutate('all-posts')\r\n  const { isFetching, isMutating, data, error } = useRequest({ \r\n    deps: ['all-posts'], \r\n    request: async () => await fetcher.get<Content[]>(`/home/${postCount}`, AUTHORIZATION_OBJECT) \r\n  })\r\n\r\n  const loadMorePosts = async (): Promise<void> => {\r\n    const nextLoadCount: number = postCount + contentPerLoad\r\n\r\n    setPostCount(prev => prev + contentPerLoad)\r\n    \r\n    await mutate(async () => await fetcher.get<Content[]>(`/home/${nextLoadCount}`))\r\n    \r\n    if(!isFetching && !isMutating) setTimeout(() => window.scrollTo({ behavior: 'smooth', top: document.body.scrollHeight }), 100)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMutating && <MutatingLoader/>}\r\n      <div style={{ height: '100%' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ flexGrow: 1 }} className='flex-column-normal-normal-small'>\r\n          {isFetching ? <Loader/> : \r\n          error ? <PageError error={error}/> :\r\n          data && data.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"Nothing found!\"/> : \r\n          data && \r\n          <Fragment>\r\n            {data.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n            {otherMutateProps.error && <LocalError error={otherMutateProps.error.message}/>}\r\n            {data.length % 10 === 0 ? <div className='flex-row-center-center-none'><Button onClick={loadMorePosts} label='Load More'/></div> : null}\r\n          </Fragment>}\r\n        </div>\r\n        {/* {statisticPreviewType && <StatisticPreview statisticToPreview={statisticPreviewType}/>} */}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"names":["useAuth","redirect","useNavigate","userContext","useContext","AuthContext","searchParams","useSearchParams","isLogOpen","get","URL_SEARCH_PARAMS","isRegOpen","userState","create","async","params","setSession","updateUserState","user","isAuthPending","isLoading","response","fetcher","post","apiURL","body","error","setToken","coockie","set","token","redirectURL","prev","Error","code","message","JSON","parse","out","clearError","useEffect","PostContainerLoader","className","scss","post_loader_container","children","jsxs","jsx","post_loader_avatar","style","width","post_loader_text","post_loader_tag","Loader","containersCount","useMetadata","title","description","Array","map","_","index","ConfirmModal","text","onConfirm","modalContainerRef","useRef","isOpen","useOutsideClick","ref","confirm_modal_open","confirm_modal_container","confirm_modal_body","confirm_modal_header","XButton","onClick","remove","confirm_modal_text_body","Button","label","confirm_modal_button","PostHeader","createdAt","type","contentID","postID","content","tags","isHidden","permission","useHavePermission","pathname","useLocation","isAdminOrCreator","roleAndEqual","_id","permited","isPostPage","search","isHomePage","isSearchPage","typeForAPI","page","parseInt","key","mutate","changeError","useMutate","contentAction","action","role","localStorage","isEdit","contentType","onPage","onPost","option","removedItem","CharacterArray","firstLetterToUpperCase","Authorization","getOne","state","comments","pagesCount","length","removeCache","filter","hiddenItem","id","createdAtDifference","DateParser","getDifference","getSortDate","year","month","day","hour","minute","second","Fragment","post_header","ImageComponent","styles","svg","height","img","src","avatar","alt","name","post_author","Link","to","post_create_date","post_header_author_not_defined","UserX","post_action_button","viewBox","d","post_action_container","Trash2","Pencil","Eye","EyeOff","PostWrapper","post_wrapper_container","post_is_hidden","padding","PostTags","post_tags","tag","trim","PostContainer","useParams","auth","isLiked","likedBy","includes","isContentCreator","equal","author","isAdmin","currPage","hiddenClass","post_hidden","showSomeData","showThe","post_content_container","post_title","post_content_date","ContentViewer","post_short_view","slice","post_data","post_tags_statistic_container","post_statistic_data","viewedBy","MessageCircle","Heart","likedContent","comment","post_liked","postCount","setPostCount","useState","otherMutateProps","isFetching","isMutating","data","useRequest","deps","request","AUTHORIZATION_OBJECT","MutatingLoader","flexGrow","PageError","Empty","flexCenterCenter","LocalError","nextLoadCount","setTimeout","window","scrollTo","behavior","top","document","scrollHeight"],"mappings":"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"}