{"version":3,"file":"home.js","sources":["../../../../src/custom-hook/use-auth/useAuth.ts","../../../../src/component/loader/post-container-loader/postContainerLoader.tsx","../../../../src/page/home/loader.tsx","../../../../src/component/modals/confirm-modal/confirmModal.tsx","../../../../src/component/post-container/component/postHeader.tsx","../../../../src/component/post-container/component/postWrapper.tsx","../../../../src/component/post-container/component/postTags.tsx","../../../../src/component/post-container/component/postQuote.tsx","../../../../src/component/post-container/postContainer.tsx","../../../../src/component/fetch-data-component/fetchDataComponent.tsx","../../../../src/component/pagination-list/component/paginationListLoader.tsx","../../../../src/page/home/component/statisticPreviewLoader.tsx","../../../../src/page/home/component/statisticPreview.tsx","../../../../src/page/home/page.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./authProvider\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nimport type { CreateParams, UserSessionData } from \"./useAuth.type\";\r\n\r\nimport useSearchParams from \"../use-search-params/useSearchParams\";\r\n\r\nimport { URL_SEARCH_PARAMS } from \"@/conts\";\r\n\r\nexport default function \r\nuseAuth() {\r\n  const redirect = useNavigate()\r\n  const userContext = useContext(AuthContext)\r\n  const searchParams = useSearchParams()\r\n\r\n  const isLogOpen: string | null = searchParams.get(URL_SEARCH_PARAMS[\"IS-LOGIN-MODAL-OPEN\"])\r\n  const isRegOpen: string | null = searchParams.get(URL_SEARCH_PARAMS[\"IS-REGISTRATE-MODAL-OPEN\"])\r\n\r\n  return {\r\n    ...userContext?.userState,\r\n    create: async function(params: CreateParams): Promise<void> {\r\n      try {\r\n        if(params.setSession) return userContext?.updateUserState({ user: params.setSession, isAuthPending: false, isLoading: false })\r\n          \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: true })\r\n        \r\n        const response = await fetcher.post<UserSessionData>(params.apiURL!, params.body)\r\n        \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: response })\r\n\r\n        if(params?.setToken) coockie.set('PR_TOKEN', response.token)\r\n        if(params?.redirectURL) redirect(params.redirectURL)\r\n      } catch(error) {\r\n        userContext!.updateUserState!(prev => ({...prev, isAuthPending: false, isLoading: false, error: error instanceof Error ? { code: 503, message: 'Service Unavailable!' } : JSON.parse(error as string) }))\r\n      }\r\n    },\r\n    out: function(): void {\r\n      userContext?.updateUserState({ isAuthPending: false, isLoading: false })\r\n      coockie.set('PR_TOKEN', 'undefined')\r\n    },\r\n    clearError: function(): void {\r\n      useEffect(() => {\r\n        userContext?.updateUserState(prev => ({...prev, error: undefined }))\r\n      }, [isLogOpen, isRegOpen])\r\n    }\r\n  }\r\n}","import scss from './postContainerLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PostContainerLoader() {\r\n  return(\r\n    <div className={`${scss.post_loader_container} main-content-container flex-column-normal-normal-medium`}>\r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div className={scss.post_loader_avatar}></div>\r\n        <div className='flex-column-normal-normal-medium'>\r\n          <div style={{ width: '4rem' }} className={scss.post_loader_text}></div>\r\n          <div style={{ width: '7rem' }} className={scss.post_loader_text}></div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '11rem' }} className={scss.post_loader_text}></div>\r\n      <div className='flex-column-normal-normal-medium'>\r\n        <div style={{ width: '50%' }} className={scss.post_loader_text}></div>\r\n        <div style={{ width: '20%' }} className={scss.post_loader_text}></div>\r\n      </div>\r\n      <div  className='flex-row-normal-space-between-none'>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n        </div>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nimport type { LoaderProps } from './page.type';\r\n\r\nexport default function Loader({ containersCount }: LoaderProps) {\r\n  return <div className={'flex-column-normal-normal-small'}>{[...Array(containersCount || 3)].map((_, index) => <PostContainerLoader key={index}/>)}</div>\r\n}","import scss from './confirmModal.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport XButton from '../../buttons/x-button/xbutton'\r\nimport Button from '../../buttons/button/button'\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useOutsideClick from '@/custom-hook/use-outside-click/useOutsideClick'\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nimport type { ConfirmModalProps } from './confirmModal.type'\r\n\r\nimport { useRef } from 'react'\r\n\r\nexport default function ConfirmModal({ text, onConfirm }: ConfirmModalProps) {\r\n  const searchParams = useSearchParams()\r\n\r\n  const modalContainerRef = useRef<HTMLDivElement>(null)\r\n\r\n  const isOpen: boolean = useOutsideClick(URL_SEARCH_PARAMS['IS-CONFIRM-MODAL-OPEN'], modalContainerRef)\r\n\r\n  const closeConfirmModal = (): void => {\r\n    searchParams.remove([URL_SEARCH_PARAMS['IS-CONFIRM-MODAL-OPEN']])\r\n  }\r\n\r\n  return(\r\n    <div ref={modalContainerRef} className={`${isOpen ? scss.confirm_modal_open : ''} ${scss.confirm_modal_container} flex-row-center-center-none`}>\r\n      <div className={`${scss.confirm_modal_body} main-content-container`}>\r\n        <section className={`${scss.confirm_modal_header} flex-row-center-space-between-medium`}>\r\n          <p>Confirm</p>\r\n          <XButton onClick={closeConfirmModal}/>\r\n        </section>\r\n        <div className={scss.confirm_modal_text_body}>\r\n          <p>{text}</p>\r\n          <div className='flex-row-center-center-none'>\r\n            <Button label='Confirm' className={scss.confirm_modal_button} onClick={onConfirm}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postHeader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { PostHeaderProps } from '../postContainer.type'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Pencil, Trash2, UserX } from 'lucide-react'\r\nimport { Fragment } from 'react/jsx-runtime'\r\n\r\nimport useMutate from '@/custom-hook/use-request/useMutate'\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\nimport CharacterArray from '@/lib/string/strings'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nimport type { Content } from '@/global.type'\r\nimport type { PostCommentsData } from '@/page/post/page.type'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\nimport ConfirmModal from '@/component/modals/confirm-modal/confirmModal'\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nexport default function PostHeader({ user, createdAt, type, contentID, postID, content, tags, title, isHidden }: PostHeaderProps) {\r\n  const permission = useHavePermission()\r\n  const searchParams = useSearchParams()\r\n  const redirect = useNavigate()\r\n  const { pathname } = useLocation()\r\n  \r\n  const isAdminOrCreator: boolean = permission.roleAndEqual(['Admin', 'Creator'], '_id', user?._id).permited()\r\n\r\n  const isPostPage: boolean = pathname.search('/post/') > -1\r\n  const isHomePage: boolean = pathname.search('/') > -1\r\n  const isSearchPage: boolean = pathname.search('/search') > -1\r\n\r\n  const typeForAPI = type === 'preview' ? 'post' : type\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n  const key: string = isPostPage && type === 'comment' ? `post-${postID}-comments-${searchParams.get('page') || 0}` : isHomePage ? 'all-posts' : ''\r\n\r\n  const { mutate, changeError } = useMutate<Content[] | PostCommentsData>(key)\r\n\r\n  const openConfirmModal = (): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['IS-CONFIRM-MODAL-OPEN']]: true })\r\n  }\r\n\r\n  const removePost = (): void => {\r\n    contentAction('remove')\r\n  }\r\n\r\n  const contentAction = (action: 'hidde' | 'show' | 'remove' | 'edit'): void => {\r\n    //User have no permmissin\r\n    if(!permission.role(['Creator', 'Admin']).permited()) {\r\n      return changeError({ code: 403, message: 'You have no edit and remove permission!' })\r\n    }\r\n\r\n    if(action === 'edit') {\r\n      if(permission.role(['Creator']).permited()) {\r\n        localStorage.set(contentID, { content, tags, title, isHidden, isEdit: true, contentType: typeForAPI, onPage: page, onPost: postID })\r\n        return redirect(`/write-post?content-id=${contentID}`)\r\n      } \r\n\r\n      if(permission.role(['Admin']).permited()) {\r\n        return redirect(`/admin/${typeForAPI}?id=${contentID}&${typeForAPI}-edit-modal=true`)\r\n      }\r\n    }\r\n\r\n    mutate(async (option) => {\r\n      //Remove item handlers\r\n      if(action === 'remove') {\r\n        const removedItem = await fetcher.get<Content>(`/admin/remove/${CharacterArray.firstLetterToUpperCase(typeForAPI)}/${contentID}`, AUTHORIZATION_OBJECT)\r\n        \r\n        //Remove some comment from post page\r\n        if(isPostPage && type === 'comment') {\r\n          const state = option.state as PostCommentsData || { comments: [], pagesCount: 0 }\r\n\r\n          if(state.comments.length === 1 && state.pagesCount >= 1) {\r\n            for(let index: number = state.pagesCount - 1; index >= 0; index--) if(index !== page) option.removeCache(`post-${postID}-comments-${index}`)\r\n            redirect(`/post/${postID}?page=${+page - 1}`)\r\n            return { pagesCount: 0, comments: [] }            \r\n          }\r\n          return {...state, comments: state.comments!.filter(content => content._id !== removedItem._id) }\r\n        } \r\n        \r\n        //Remove some post from home page\r\n        if(isHomePage) {\r\n          const state = option.state as Content[] || []\r\n          return state.filter(content => content._id !== removedItem._id)\r\n        }\r\n      }\r\n\r\n      //Hidde item handlers\r\n      const hiddenItem = await fetcher.post<Content>(`/admin/${typeForAPI}/update`, { id: contentID, isHidden: action === 'hidde', flag: action }, AUTHORIZATION_OBJECT)\r\n      \r\n      //Hidde some comment from post page\r\n      if(isPostPage) {\r\n        const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n        return {...state, comments: state.comments!.map(content => content._id === hiddenItem._id ? {...content, ...hiddenItem } : content) }\r\n      }\r\n\r\n      //Hidde post from home page\r\n      const state = option.state as Content[] || []\r\n      return state.map(content => content._id === hiddenItem._id ? hiddenItem : content)\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(createdAt)\r\n    .getSortDate({\r\n       year: '[year] year [month] months ago!',\r\n       month: '[month] month [day] days ago!',\r\n       day: '[day] day [hour] hours ago!',\r\n       hour: '[hour] hour [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <Fragment>\r\n      <ConfirmModal text='Do you will to remove this post?' onConfirm={removePost}/>\r\n      <div className={`${scss.post_header} flex-row-center-space-between-none`}>\r\n        {user ? \r\n        <div className='flex-row-center-normal-medium'>\r\n          <ImageComponent styles={{ svg: { width: '2rem', height: '2rem' }, img: { width: '2rem', height: '2rem' }}} src={user?.avatar} alt={user?.name || 'User avatar'}/>\r\n          <div className={scss.post_author}>\r\n            <Link to={`/user/${user?._id}`}>{user?.name}</Link>\r\n            <p className={scss.post_create_date}>{createdAtDifference}</p>  \r\n          </div>\r\n        </div> :\r\n        <div className={`${scss.post_header_author_not_defined} flex-row-center-normal-medium`}>\r\n          <UserX/>\r\n          <p>Author is possibly deleted!</p>\r\n        </div>}\r\n        {(isAdminOrCreator && !isSearchPage) ?\r\n        <button className={scss.post_action_button}>\r\n          <svg viewBox=\"0 0 128 512\"><path d=\"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z\"/></svg>\r\n          <ul className={`${scss.post_action_container} flex-column-normal-normal-none`}>\r\n            <li onClick={openConfirmModal} className='flex-row-center-normal-medium'><Trash2/><p>Remove</p></li>\r\n            <li onClick={() => contentAction('edit')} className='flex-row-center-normal-medium'><Pencil/><p>Edit</p></li>\r\n            <li onClick={() => contentAction(isHidden ? 'show' : 'hidde')} className='flex-row-center-normal-medium'>{isHidden ? <Eye/> : <EyeOff/>}<p>{isHidden ? 'Show' : 'Hidden'}</p></li>\r\n          </ul>\r\n        </button> : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}","import scss from '../scss/postWrapper.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PropsWithChildren } from \"react\"\r\nimport type { PostWrapperProps } from '../postContainer.type'\r\n\r\nimport { EyeOff } from 'lucide-react'\r\n\r\nexport default function PostWrapper({ children, className }: PropsWithChildren<PostWrapperProps>) {\r\n  return (\r\n    <section className={`${scss.post_wrapper_container} ${className} main-content-container`}>\r\n      {className ? \r\n       <div className={`${scss.post_is_hidden} flex-row-center-center-medium`}>\r\n         <EyeOff/>\r\n         <p>Hidden</p>\r\n       </div> : null}\r\n      <div style={{ padding: '1rem' }}>{children}</div>\r\n    </section>\r\n  )\r\n}","import scss from '../scss/postTags.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PostTagsProps } from '../postContainer.type'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostTags({ tags }: PostTagsProps) {\r\n  return <div className={`${scss.post_tags} flex-row-normal-normal-medium`}>{tags.map(tag => tag.trim() ? <Link to={`/search?tag=${tag}`} key={tag}>{tag}</Link> : null)}</div>\r\n}","import scss from '../scss/postQuotes.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { ChevronDown, ChevronRight } from 'lucide-react'\r\nimport { useState } from 'react'\r\n\r\nimport ContentViewer from '@/component/content-viewer/contentViewer'\r\n\r\nimport type { PostQuotesProps } from '../postContainer.type'\r\n\r\nexport default function PostQuotes({ content }: PostQuotesProps) {\r\n  const [isExpandend, setIsExpandend] = useState<boolean>(false)\r\n\r\n  const changeQuoteState = (): void => {\r\n    setIsExpandend(prev => !prev)\r\n  }\r\n\r\n  return(\r\n    <div className={`${scss.post_quotes_container} main-content-container`}>\r\n      <div className={`${scss.post_quotes_header} flex-row-center-space-between-medium`} onClick={changeQuoteState}>\r\n        <p>Zitate von {content.author?.name}</p>\r\n        {isExpandend ? <ChevronDown/> : <ChevronRight/>}\r\n      </div>\r\n      <div className={isExpandend ? `${scss.post_quote_container_expanded} ${scss.post_quote_content_container}` : scss.post_quote_content_container}>\r\n        <ContentViewer content={content.content}/>\r\n      </div> \r\n    </div>\r\n  )\r\n}","import scss from './postContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport PostHeader from \"./component/postHeader\";\r\nimport PostWrapper from \"./component/postWrapper\";\r\nimport PostTags from './component/postTags';\r\nimport ContentViewer from '../content-viewer/contentViewer';\r\nimport PostQuotes from './component/postQuote';\r\n\r\nimport type { Content } from '@/global.type';\r\nimport type { PostCommentsData } from '@/page/post/page.type';\r\nimport type { PostContainerProps } from \"./postContainer.type\";\r\n\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fragment } from 'react/jsx-runtime';\r\nimport { Eye, Heart, MessageCircle, Minus, Plus } from 'lucide-react';\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser';\r\n\r\nimport useAuth from '@/custom-hook/use-auth/useAuth';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission';\r\nimport useMutate from '@/custom-hook/use-request/useMutate';\r\nimport useWebsiteSetting from '@/custom-hook/use-website-setting/useWebsiteSetting';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport Numbers from '@/lib/number/number';\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts';\r\n\r\nexport default function PostContainer({ setToQuote, post, type, isQuoted }: PostContainerProps) {\r\n  const { id } = useParams()\r\n  const { pathname } = useLocation()\r\n  const redirect = useNavigate()\r\n\r\n  const auth = useAuth()\r\n  const searchParams = useSearchParams()\r\n  const permission = useHavePermission()\r\n  const website = useWebsiteSetting()\r\n  \r\n  const isPostPage: boolean = pathname.search('/post') > -1\r\n  const isHomePage: boolean = pathname === '/'\r\n  const isLiked: boolean = post.likedBy.includes(auth.user?._id || '')\r\n  const isContentCreator: boolean = permission.role(['Creator']).equal('_id', post?.author?._id).permited()\r\n  const isAdmin: boolean = permission.role(['Admin']).permited()\r\n  const isHidden: boolean = post.isHidden\r\n  \r\n  const postID: string = (type === 'preview' || type === 'post') ? post._id : id!\r\n  const currPage: number = (type === 'comment') ? parseInt(searchParams.get('page') || '0') : 0\r\n  const hiddenClass: string = ((isHidden && isAdmin) || (isContentCreator && isHidden)) ? scss.post_hidden : ''\r\n  const key: string = type === 'post' ? `post-${post._id}` : `post-${postID}-comments-${currPage}`\r\n  \r\n  const { mutate } = useMutate<Content | PostCommentsData>(key)\r\n\r\n  if(isHidden && isPostPage && !isAdmin && !isContentCreator && type === 'post') redirect('/')\r\n\r\n  const showSomeData = (showThe: string): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['STATISTIC-TO-PREVIEW']]: showThe, [URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID']]: post._id, [URL_SEARCH_PARAMS['LIST-PAGE']]: 0 })\r\n  }\r\n\r\n  const changeQuotes = (): void => {\r\n    if(setToQuote) {\r\n      setToQuote(prev => {\r\n        if(isQuoted) return prev.filter(quote => quote._id !== post._id)\r\n        return [...prev, post]\r\n      }) \r\n    }\r\n  }\r\n\r\n  const likeThisPost = async (): Promise<void> => {\r\n    if(post.isHidden && !auth.user) return\r\n\r\n    mutate( async (option) => {\r\n      const likedContent = await fetcher.get<Content>(`/${type}/${post._id}/like`, AUTHORIZATION_OBJECT)\r\n\r\n      //Update post\r\n      if(type === 'post') return likedContent\r\n\r\n      //Update comment\r\n      const state = option.state as PostCommentsData\r\n      const comments = state.comments || []\r\n\r\n      return {...state, comments: comments.map(comment => comment._id === likedContent._id ? likedContent : comment) }\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(post.createdAt)\r\n    .getSortDate({\r\n       year: '[year] years [month] months ago!',\r\n       month: '[month] months [day] days ago!',\r\n       day: '[day] days [hour] hours ago!',\r\n       hour: '[hour] hours [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <Fragment>\r\n      {isHomePage && !isContentCreator && !isAdmin && isHidden ? null :\r\n        <PostWrapper className={hiddenClass}>\r\n          {(type === 'comment' || type === 'preview') && <PostHeader tags={post.tags || []} title={post.title || ''} content={post.content} isHidden={post.isHidden} postID={postID} contentID={post._id} type={type} createdAt={post.createdAt} user={post?.author}/>}\r\n          {type === 'post' &&\r\n            <div className={scss.post_content_container}>\r\n              <h4 style={{ fontFamily: website.setting.postFont }} className={scss.post_title}>{post.title}</h4>\r\n              <p className={scss.post_content_date}>{createdAtDifference}</p>\r\n              <ContentViewer content={post.content}/>\r\n            </div>}\r\n          {type === 'preview' && \r\n            <div className={scss.post_content_container}>\r\n              <Link style={{ fontFamily: website.setting.postFont }} to={`/post/${post._id}`}>{post.title}</Link>\r\n              <ContentViewer content={`${post.content.slice(0, 250)}...`}/>\r\n            </div>}\r\n          {type === 'comment' && \r\n            <div className={scss.post_data}>\r\n              <ContentViewer content={post.content}/>\r\n              {(post.quotes?.length !== 0 && post.quotes) && post.quotes.map(quote => <PostQuotes key={quote._id} content={quote}/>)}\r\n            </div>}\r\n            <div className={`${scss.post_tags_statistic_container} flex-row-center-space-between-medium`}>\r\n              {((type === 'post' || type === 'preview') && post.tags) && <PostTags tags={post.tags}/>}\r\n              <div className='flex-row-center-normal-big'>\r\n              {type === 'preview' &&\r\n                <Fragment>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('views') : undefined} ><Eye />{Numbers.shortNum(post.viewedBy!.length)}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('comments') : undefined}><MessageCircle />{Numbers.shortNum(post.comments!.length)}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('likes') : undefined}><Heart />{Numbers.shortNum(post.likedBy.length)}</p>\r\n                </Fragment>}\r\n              {type === 'comment' && <button onClick={changeQuotes} className={`${scss.post_quote_button} ${isQuoted && scss.post_quote_button_selected} flex-row-center-center-none`}>{isQuoted ? <Minus/> : <Plus/>}</button>}\r\n              {(type === 'comment' || type === 'post') && auth.user ? <button onClick={likeThisPost} className={`${isLiked ? scss.post_liked : ''} ${scss.post_statistic_data} flex-row-center-normal-small`}><Heart/>{Numbers.shortNum(post.likedBy.length)}</button> : null}\r\n            </div>\r\n          </div>\r\n        </PostWrapper>}\r\n    </Fragment>\r\n  )\r\n}","import { Fragment } from \"react/jsx-runtime\";\r\n\r\nimport type { FetchDataComponentProps } from \"./fetchDataComponent.type\";\r\n\r\nimport PageError from \"../errors/page-error/pageError\";\r\nimport LocalError from \"../errors/local-error/localError\";\r\nimport Empty from \"../empty/empty\";\r\n\r\nexport default function FetchDataComponent({ \r\n  data, \r\n  loaderComponent, \r\n  useLocalErrorComponent, \r\n  error, \r\n  emptyLabel, \r\n  isFetching, \r\n  isPending, \r\n  emptyOptions,\r\n  dataComponent \r\n}: FetchDataComponentProps) {\r\n  const isLoading: boolean = isFetching || isPending || false\r\n  const isEmpty: boolean = Array.isArray(data) && data.length === 0\r\n\r\n  return(\r\n    <Fragment>\r\n      {error ? useLocalErrorComponent ? <LocalError error={error.message}/> : <PageError error={error}/> :\r\n      (isLoading && !data) ? loaderComponent :\r\n      (isEmpty || !data) && emptyLabel ? <Empty label={emptyLabel} option={{ flexCenterCenter: true, ...emptyOptions }}/> : dataComponent()}\r\n    </Fragment>\r\n  )\r\n}","import scss from '../scss/paginationListLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PaginationListLoader() {\r\n  return(\r\n    <div style={{ width: '100%' }} className='flex-row-normal-space-between-medium'>\r\n      <div className={scss.pagintion_list_button}></div>\r\n      <div className='flex-row-normal-normal-small'>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n      </div>\r\n      <div className={scss.pagintion_list_button}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreviewLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function StatisticPreviewLoader() {\r\n  return(\r\n    <div style={{ paddingTop: '1rem' }} className='flex-column-normal-normal-medium'>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport FetchDataComponent from '@/component/fetch-data-component/fetchDataComponent'\r\nimport PaginationList from \"@/component/pagination-list/paginationList\"\r\nimport PaginationListLoader from '@/component/pagination-list/component/paginationListLoader'\r\nimport StatisticPreviewLoader from './statisticPreviewLoader'\r\nimport ImageComponent from '@/component/image-component/image'\r\nimport XButton from '@/component/buttons/x-button/xbutton'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\nimport { Fragment } from 'react/jsx-runtime'\r\n\r\nimport type { GetPostStatistic, StatisticPreviewProps } from '../page.type'\r\nimport type { Content, KeyValueObject } from '@/global.type'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport Strings from '@/lib/string/strings'\r\nimport Numbers from '@/lib/number/number'\r\n\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nconst statisticPreviewType: KeyValueObject<{ icon: JSX.Element, emptyText: string }> = { \r\n  views:    { icon: <Eye/>, emptyText: 'Nieman hat sich dieses Post angeschaut!' }, \r\n  likes:    { icon: <Heart/>, emptyText: 'Niemand hat dieses Post geliked!' }, \r\n  comments: { icon: <MessageCircle/>, emptyText: 'Niemand hat dieses Post kommentiert!' }\r\n}\r\n\r\nexport default function StatisticPreview({ statisticToPreview }: StatisticPreviewProps) {\r\n  const searchParams = useSearchParams()\r\n  \r\n  const postID: string = searchParams.get(URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID'])!\r\n  const currPage: number = parseInt(searchParams.get(URL_SEARCH_PARAMS['LIST-PAGE']) || '0')\r\n  \r\n  const { data, prev, isPending, error } = useRequest<GetPostStatistic>({ \r\n    deps: [`post/preview/${statisticToPreview}/${postID}/${currPage}`], \r\n    prev: [`post/preview/${statisticToPreview}/${postID}/${currPage === 0 ? 0 : currPage - 1}`], \r\n    request: async () => fetcher.get(`/post/preview/${statisticToPreview}/${postID}/${currPage}`),\r\n  })\r\n\r\n  const pagesCount: number = (prev?.pagesCount || data?.pagesCount) || 0\r\n\r\n  const closePostStatisticModal = (): void => {\r\n    searchParams.remove([URL_SEARCH_PARAMS['STATISTIC-TO-PREVIEW'], URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID'], URL_SEARCH_PARAMS['LIST-PAGE']])\r\n  }\r\n\r\n  return(\r\n    <section className={scss.preview_container}>\r\n      <div className={`${scss.preview_body} main-content-container`}>\r\n        <div className={`${scss.preview_header} flex-row-center-space-between-none`}>\r\n          <div className='flex-row-center-normal-medium'>\r\n            {statisticPreviewType[statisticToPreview].icon}\r\n            <h4 className={scss.preview_type}>{Strings.firstLetterToUpperCase(statisticToPreview || '')}</h4>\r\n          </div>\r\n          <XButton onClick={closePostStatisticModal}/>\r\n        </div>\r\n        <div className='flex-column-normal-normal-small'>\r\n          {isPending ? <PaginationListLoader/> : pagesCount > 1 ? <PaginationList pagesCount={pagesCount}/> : null}\r\n          <FetchDataComponent\r\n            isFetching={isPending}\r\n            data={data?.items}\r\n            emptyOptions={{ size: 'SMALL' }}\r\n            emptyLabel={statisticPreviewType[statisticToPreview].emptyText}\r\n            error={error}\r\n            loaderComponent={<StatisticPreviewLoader/>}\r\n            dataComponent={() =>(\r\n              <Fragment>\r\n                {data!.items!.map(item => (\r\n                  <Link to={`/user/${item._id}`} className={`${scss.preview_item} flex-row-center-space-between-none`} key={Math.random() * 200}>\r\n                    <div className='flex-row-center-normal-medium'>\r\n                      <ImageComponent classNames={{ img: scss.preview_avatar, svg: scss.preview_avatar }} src={item.avatar} alt={item.name}/>\r\n                      <p>{item?.name || (item as unknown  as Content).author?.name}</p>\r\n                    </div>\r\n                    {statisticToPreview === 'views' && <p className={`${scss.preview_item_count} flex-row-center-center-none`}>{Numbers.shortNum(item.count)}</p>}\r\n                  </Link>))}            \r\n              </Fragment>\r\n            )}/>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}","import scss from './page.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport _PostContainer from \"@/component/post-container/postContainer\"\r\nimport Button from '@/component/buttons/button/button'\r\nimport FetchDataComponent from '@/component/fetch-data-component/fetchDataComponent'\r\nimport StatisticPreview from './component/statisticPreview'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport Loader from './loader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport { Fragment, memo, useState } from 'react'\r\n\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nconst contentPerLoad: number = 10\r\n\r\nconst PostContainer = memo(_PostContainer)\r\n\r\nexport default function Page() {\r\n  const [postCount, setPostCount] = useState<number>(10)\r\n\r\n  const searchParams = useSearchParams()\r\n\r\n  const statisticPreviewType: string | null = searchParams.get(URL_SEARCH_PARAMS['STATISTIC-TO-PREVIEW'])\r\n  \r\n  const { isFetching, isPending, data, error, request } = useRequest({ \r\n    deps: [`/${postCount}`],\r\n    request: async () => await fetcher.get<Content[]>(`/home/${postCount}`, AUTHORIZATION_OBJECT) \r\n  })\r\n\r\n  const loadMorePosts = async (): Promise<void> => {\r\n    setPostCount(prev => prev + contentPerLoad)\r\n    \r\n    await request()\r\n    \r\n    if(!isFetching && !isPending) setTimeout(() => window.scrollTo({ behavior: 'smooth', top: document.body.scrollHeight }), 100)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {(isPending && data) && <MutatingLoader/>}\r\n      <div className={`${scss.home_container} flex-row-normal-normal-medium`}>\r\n        <div className={`${scss.home_container} flex-column-normal-normal-small`}>\r\n          <FetchDataComponent \r\n            isFetching={isFetching}\r\n            loaderComponent={<Loader/>} \r\n            error={error} \r\n            data={data}\r\n            emptyLabel='Es wurde nichts gefunden!'\r\n            dataComponent={() => (\r\n              <Fragment>\r\n                {data!.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n                {!(data!.length % 10) && <Button className={scss.home_load_more_posts_button} onClick={loadMorePosts}>Mehr Laden</Button>}\r\n              </Fragment>\r\n            )}/>\r\n        </div>\r\n        {statisticPreviewType && <StatisticPreview statisticToPreview={statisticPreviewType}/>}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"names":["useAuth","redirect","useNavigate","userContext","useContext","AuthContext","searchParams","useSearchParams","isLogOpen","get","URL_SEARCH_PARAMS","isRegOpen","userState","create","async","params","setSession","updateUserState","user","isAuthPending","isLoading","response","fetcher","post","apiURL","body","error","setToken","coockie","set","token","redirectURL","prev","Error","code","message","JSON","parse","out","clearError","useEffect","PostContainerLoader","className","scss","children","jsxs","jsx","style","width","Loader","containersCount","Array","map","_","index","ConfirmModal","text","onConfirm","modalContainerRef","useRef","isOpen","useOutsideClick","ref","XButton","onClick","remove","Button","label","PostHeader","createdAt","type","contentID","postID","content","tags","title","isHidden","permission","useHavePermission","pathname","useLocation","isAdminOrCreator","roleAndEqual","_id","permited","isPostPage","search","isHomePage","isSearchPage","typeForAPI","page","parseInt","key","mutate","changeError","useMutate","contentAction","action","role","localStorage","isEdit","contentType","onPage","onPost","option","removedItem","CharacterArray","firstLetterToUpperCase","AUTHORIZATION_OBJECT","state","comments","pagesCount","length","removeCache","filter","hiddenItem","id","flag","createdAtDifference","DateParser","getDifference","getSortDate","year","month","day","hour","minute","second","Fragment","post_header","ImageComponent","styles","svg","height","img","src","avatar","alt","name","post_author","Link","to","post_create_date","post_header_author_not_defined","UserX","post_action_button","viewBox","d","post_action_container","Trash2","Pencil","Eye","EyeOff","PostWrapper","padding","PostTags","tag","trim","PostQuotes","isExpandend","setIsExpandend","useState","author","ChevronDown","ChevronRight","ContentViewer","PostContainer","setToQuote","isQuoted","useParams","auth","website","useWebsiteSetting","isLiked","likedBy","includes","isContentCreator","equal","isAdmin","currPage","hiddenClass","showSomeData","showThe","fontFamily","setting","postFont","slice","quotes","quote","Numbers","shortNum","viewedBy","MessageCircle","Heart","Minus","Plus","likedContent","comment","FetchDataComponent","data","loaderComponent","useLocalErrorComponent","emptyLabel","isFetching","isPending","emptyOptions","dataComponent","isEmpty","isArray","LocalError","PageError","Empty","flexCenterCenter","PaginationListLoader","StatisticPreviewLoader","paddingTop","statisticPreviewType","views","icon","emptyText","likes","StatisticPreview","statisticToPreview","useRequest","deps","request","preview_container","preview_body","preview_header","preview_type","Strings","PaginationList","items","size","item","preview_item","classNames","preview_avatar","preview_item_count","count","Math","random","memo","_PostContainer","postCount","setPostCount","loadMorePosts","setTimeout","window","scrollTo","behavior","top","document","scrollHeight","MutatingLoader"],"mappings":"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"}