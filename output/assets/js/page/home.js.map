{"version":3,"file":"home.js","sources":["../../../../src/lib/local-storage/localStorage.ts","../../../../src/custom-hook/useAuth/authProvider.tsx","../../../../src/custom-hook/useAuth/useAuth.ts","../../../../src/component/image-component/imageLoader.tsx","../../../../src/component/image-component/image.tsx","../../../../src/custom-hook/use-have-permission/useHavePermission.ts","../../../../src/component/loader/post-container-loader/postContainerLoader.tsx","../../../../src/custom-hook/use-metadata/useMetadata.ts","../../../../src/page/home/loader.tsx","../../../../src/component/error/error.tsx","../../../../src/component/post-container/component/postHeader.tsx","../../../../src/component/post-container/component/postWrapper.tsx","../../../../src/component/post-container/component/postTags.tsx","../../../../src/component/post-container/postContainer.tsx","../../../../src/component/button/button.tsx","../../../../src/component/pagination-list/component/paginationListLoader.tsx","../../../../src/page/home/component/statisticPreviewLoader.tsx","../../../../src/page/home/component/statisticPreview.tsx","../../../../src/page/home/page.tsx"],"sourcesContent":["export default {\r\n  get: <T>(key: string, or: string) => {\r\n    return JSON.parse(localStorage.getItem(key) || or) as T\r\n  },\r\n  set: (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  },\r\n  remove: (key: string) => {\r\n    localStorage.removeItem(key)\r\n  }\r\n}","import { type PropsWithChildren, createContext, useEffect, useState } from \"react\";\r\n\r\nimport type { TAuthContext, UserState } from \"./useAuth.type\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nexport const AuthContext = createContext<TAuthContext | undefined>(undefined)\r\n\r\nexport default function AuthProvider({ children }: PropsWithChildren) {\r\n  const [userState, updateUserState] = useState<UserState>({ isAuthPending: false, isLoading: false })\r\n\r\n  useEffect(() => {\r\n    async function isAuth() {\r\n      try {\r\n        const user = userState.user\r\n\r\n        if(!user) {\r\n          updateUserState({ isAuthPending: true, isLoading: false })\r\n            \r\n          const response = await fetcher.get<any>('/authenticate', { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n          const isSuccess = Object.hasOwn(response, 'token')\r\n            \r\n          updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: isSuccess ? response : undefined })\r\n        }\r\n      } catch(error) {\r\n        updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: undefined })\r\n      }\r\n    }\r\n\r\n    isAuth()\r\n  }, [])\r\n\r\n  return <AuthContext.Provider value={{ updateUserState, userState }}>{children}</AuthContext.Provider>\r\n}","import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./authProvider\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nimport type { CreateParams, UserSessionData } from \"./useAuth.type\";\r\n\r\nimport useSearchParams from \"../use-search-params/useSearchParams\";\r\n\r\nexport default function useAuth() {\r\n  const redirect = useNavigate()\r\n  const userContext = useContext(AuthContext)\r\n  const searchParams = useSearchParams()\r\n\r\n  const isLogOpen: string | null = searchParams.get('login-modal')\r\n  const isRegOpen: string | null = searchParams.get('registration-modal')\r\n\r\n  return {\r\n    ...userContext?.userState,\r\n    create: async function(params: CreateParams): Promise<void> {\r\n      try {\r\n        if(params.setSession) return userContext?.updateUserState({ user: params.setSession, isAuthPending: false, isLoading: false })\r\n          \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: true })\r\n        \r\n        const response = await fetcher.post<UserSessionData>(params.apiURL!, params.body)\r\n        \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: response })\r\n\r\n        if(params?.setToken) coockie.set('PR_TOKEN', response.token)\r\n        if(params?.redirectURL) redirect(params.redirectURL)\r\n      } catch(error) {\r\n        userContext!.updateUserState!(prev => ({...prev, isAuthPending: false, isLoading: false, error: error instanceof Error ? { code: 503, message: 'Service Unavailable!' } : JSON.parse(error as string) }))\r\n      }\r\n    },\r\n    out: function(): void {\r\n      userContext?.updateUserState({ isAuthPending: false, isLoading: false })\r\n    },\r\n    clearError: function(): void {\r\n      useEffect(() => {\r\n        userContext?.updateUserState(prev => ({...prev, error: undefined }))\r\n      }, [isLogOpen, isRegOpen])\r\n    }\r\n  }\r\n}","import scss from './image.module.scss'\r\n\r\nimport type { ImageLoaderProps } from './image.type'\r\n\r\nexport default function ImageLoader({ className, style }: ImageLoaderProps) {\r\n  return <div style={style} className={`${scss.default_image_loader} ${className}`}></div>\r\n}","import scss from './image.module.scss'\r\n\r\nimport type { ImageComponentProps } from './image.type'\r\n\r\nimport { CircleUserRound } from 'lucide-react'\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\n\r\nimport ImageLoader from './imageLoader'\r\n\r\nexport default function ImageComponent({ alt, classNames, src, styles }: ImageComponentProps) {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\r\n\r\n  const imgSourceRef = useRef<string | undefined>('default')\r\n  const imgRef = useRef<HTMLImageElement>(null)\r\n\r\n  const isHTTPProtocol: boolean = (imgSourceRef.current?.search(/\\http(s)/) || -1) > -1\r\n  \r\n  useEffect(() => {\r\n    if(!imgRef.current) return\r\n      \r\n    imgRef.current.addEventListener('loadstart', () => {\r\n      setIsLoaded(false)\r\n    })\r\n\r\n    imgRef.current.addEventListener('load', (event) => {\r\n      const image = event.target as HTMLImageElement\r\n      imgSourceRef.current = src\r\n      setIsLoaded(image.complete)\r\n    }, { once: true })\r\n\r\n    imgRef.current.addEventListener('error', () => {\r\n      imgSourceRef.current = undefined\r\n      setIsLoaded(false)\r\n    }, { once: true })\r\n  }, [imgRef.current])\r\n\r\n  console.log(isHTTPProtocol, isLoaded, imgSourceRef)\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isHTTPProtocol && !isLoaded ? <CircleUserRound className={`${classNames?.img} ${scss.default_image}`} size={40}/> : (!isLoaded && isHTTPProtocol) && <ImageLoader className={classNames?.loader} style={styles?.loader}/> }\r\n      <img ref={imgRef} src={src} alt={alt} className={classNames?.img} style={{...styles?.img, display: (isHTTPProtocol ? imgSourceRef.current : undefined || isLoaded) ? 'block' : 'none' }}/>\r\n    </Fragment>\r\n  )\r\n}","import { AuthContext } from \"@/custom-hook/useAuth/authProvider\";\r\nimport { useContext } from \"react\";\r\n\r\nimport type { UserRoles } from \"@/global.type\";\r\n\r\nexport default function useHavePermission() {\r\n  const auth = useContext(AuthContext)\r\n\r\n  let checkArray: number[] = []\r\n\r\n  return {\r\n    isHaveRole: function(mustHaveRoles: UserRoles[]) {\r\n      if(mustHaveRoles.includes(auth?.userState.user?.role || 'User')) return this\r\n      checkArray.push(1)\r\n      return this\r\n    },\r\n    isIDEqual: function(id?: string) {\r\n      if(auth?.userState.user?._id === id) return this\r\n      checkArray.push(1)\r\n      return this\r\n    },\r\n    isHaveRoleAndIsIDEqual: function(mustHaveRoles: UserRoles[], id?: string) {\r\n      if(auth?.userState.user?._id === id && mustHaveRoles.includes(auth?.userState.user?.role || 'User')) return this\r\n      checkArray.push(1)\r\n      return this\r\n    },\r\n    isHaveRoleOrIsIDEqual: function(mustHaveRoles: UserRoles[], id?: string) {\r\n      if(auth?.userState.user?._id === id || mustHaveRoles.includes(auth?.userState.user?.role || 'User')) return this\r\n      checkArray.push(1)\r\n      return this\r\n    },\r\n    result: function() {\r\n      const havePermission = checkArray.length <= 0\r\n      checkArray = []\r\n      return havePermission\r\n    }\r\n  }\r\n}","import scss from './postContainerLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PostContainerLoader() {\r\n  return(\r\n    <div className={`${scss.post_loader_container} main-content-container flex-column-normal-normal-medium`}>\r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div className={scss.post_loader_avatar}></div>\r\n        <div className='flex-column-normal-normal-medium'>\r\n          <div style={{ width: '4rem' }} className={scss.post_loader_text}></div>\r\n          <div style={{ width: '7rem' }} className={scss.post_loader_text}></div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '11rem' }} className={scss.post_loader_text}></div>\r\n      <div className='flex-column-normal-normal-medium'>\r\n        <div style={{ width: '50%' }} className={scss.post_loader_text}></div>\r\n        <div style={{ width: '20%' }} className={scss.post_loader_text}></div>\r\n      </div>\r\n      <div  className='flex-row-normal-space-between-none'>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n        </div>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect } from \"react\"\r\n\r\nimport type { Metadata } from \"./useMetadata.type\"\r\n\r\nexport default function useMetadata(metadata: Metadata): void {\r\n  useEffect(() => {\r\n    if(metadata.title) document.title = metadata.title\r\n  }, [metadata])\r\n\r\n  useEffect(() => {\r\n    delete metadata.title\r\n\r\n    const metaEntries: [string, string][] = Object.entries(metadata)\r\n  \r\n    for(let [key, value] of metaEntries) {\r\n      const metadataEl: HTMLMetaElement = document.createElement('meta')\r\n      \r\n      metadataEl.name = key\r\n      metadataEl.content = value\r\n  \r\n      document.head.appendChild(metadataEl)\r\n    }\r\n  }, [])\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nimport type { LoaderProps } from './page.type';\r\n\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata';\r\n\r\nexport default function Loader({ containersCount }: LoaderProps) {\r\n  useMetadata({ title: 'Home', description: 'Hier kannst du alle letzt geschriebene posts ansehen.' })\r\n  return <div className='flex-column-normal-normal-small'>{[...Array(containersCount || 3)].map((_, index) => <PostContainerLoader key={index}/>)}</div>\r\n}","import scss from './error.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { ErrorProps } from './error.type'\r\n\r\nexport default function Error({ code, message, underText }: ErrorProps) {\r\n  return(\r\n    <div className={`${scss.error_container} flex-row-center-center-none`}>\r\n      <div className={scss.error_body}>\r\n        <div className={`${scss.error_error} flex-column-normal-normal-none`}>\r\n          <p>Error - {code}!</p>\r\n          <p>{message}</p>\r\n        </div>\r\n        {underText ? <p>{underText}</p> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postHeader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { PostHeaderProps } from '../postContainer.type'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Pencil, Trash2, UserX } from 'lucide-react'\r\n\r\nimport useHavePermission from '@/custom-hook/use-have-permission/useHavePermission'\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\nimport type { Content } from '@/global.type'\r\nimport type { PostCommentsData } from '@/page/post/page.type'\r\n\r\nimport firstLetterToUpperCase from '@/lib/first-letter-to-upper/firstLetterToUpper'\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nexport default function PostHeader({ user, createdAt, type, contentID, postID, content, tags, title, isHidden }: PostHeaderProps) {\r\n  const permission = useHavePermission()\r\n  const { mutate, changeError } = useRequest({ deps: [] })\r\n  const searchParams = useSearchParams()\r\n  const redirect = useNavigate()\r\n  const { pathname } = useLocation()\r\n  \r\n  const isAdminOrCreator: boolean = permission.isHaveRoleOrIsIDEqual(['Admin', 'Creator'], user?._id)?.result()\r\n  const isPostPage: boolean = pathname.search('/post/') > -1\r\n  const isHomePage: boolean = pathname.search('/') > -1\r\n  const isSearchPage: boolean = pathname.search('/search') > -1\r\n\r\n  const typeForAPI = type === 'preview' ? 'post' : type\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n\r\n  const contentAction = (action: 'hidde' | 'show' | 'remove' | 'edit'): void => {\r\n    const key: string[] = \r\n      isPostPage && type === 'comment' ? \r\n        [`post-${postID}-comments-${searchParams.get('page') || 0}`] :\r\n      isHomePage ? ['all-posts'] :\r\n        []\r\n\r\n    //User have no permmissin\r\n    if(!permission.isHaveRole(['Creator', 'Admin']).result()) {\r\n      return changeError(key, { code: 403, message: 'You have no edit and remove permission!' })\r\n    }\r\n\r\n    if(action === 'edit') {\r\n      if(permission.isHaveRole(['Creator']).result()) {\r\n        localStorage.set(contentID, { content, tags, title, contentType: typeForAPI, onPage: page, onPost: postID })\r\n        return redirect(`/write-post?is-edit=true&content-id=${contentID}`)\r\n      } \r\n\r\n      if(permission.isHaveRole(['Admin']).result()) {\r\n        return redirect(`/admin/${typeForAPI}?id=${contentID}&${typeForAPI}-edit-modal=true`)\r\n      }\r\n    }\r\n\r\n    mutate<Content[] | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        //Remove item handlers\r\n        if(action === 'remove') {\r\n          const removedItem = await fetcher.get<Content>(`/admin/remove/${firstLetterToUpperCase(typeForAPI)}/${contentID}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n          \r\n          //Remove some comment from post page\r\n          if(isPostPage && type === 'comment') {\r\n            const state = option.state as PostCommentsData || { comments: [], pagesCount: 0 }\r\n\r\n            if(state.comments.length === 1 && state.pagesCount >= 1) {\r\n              for(let index: number = state.pagesCount - 1; index >= 0; index--) if(index !== page) option.removeCache(`post-${postID}-comments-${index}`)\r\n              redirect(`/post/${postID}?page=${+page - 1}`)\r\n              return { pagesCount: 0, comments: [] }            \r\n            }\r\n            return {...state, comments: state.comments!.filter(content => content._id !== removedItem._id) }\r\n          } \r\n          \r\n          //Remove some post from home page\r\n          if(isHomePage) {\r\n            const state = option.state as Content[] || []\r\n            return state.filter(content => content._id !== removedItem._id)\r\n          }\r\n        }\r\n\r\n        //Hidde item handlers\r\n        const hiddenItem = await fetcher.post<Content>(`/admin/${typeForAPI}/update`, { id: contentID, isHidden: action === 'hidde' }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n        \r\n        //Hidde some comment from post page\r\n        if(isPostPage) {\r\n          const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n          return {...state, comments: state.comments!.map(content => content._id === hiddenItem._id ? {...content, ...hiddenItem } : content) }\r\n        }\r\n\r\n        //Hidde post from home page\r\n        const state = option.state as Content[] || []\r\n        return state.map(content => content._id === hiddenItem._id ? hiddenItem : content)\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className={`${scss.post_header} flex-row-center-space-between-none`}>\r\n      {user ? \r\n      <div className='flex-row-normal-normal-medium'>\r\n         <ImageComponent src={user?.avatar} alt={user?.name || 'User avatar'}/>\r\n         <div className={scss.post_author}>\r\n           <Link to={`/user/${user?._id}`}>{user?.name}</Link>\r\n           <p className={scss.post_create_date}>{DateParser.getDifference(createdAt)}</p>  \r\n        </div>\r\n      </div> :\r\n      <div className={`${scss.post_header_author_not_defined} flex-row-center-normal-medium`}>\r\n        <UserX/>\r\n        <p>Author is possibly deleted!</p>\r\n      </div>}\r\n      {(isAdminOrCreator && !isSearchPage) ?\r\n      <button className={scss.post_action_button}>\r\n        <svg viewBox=\"0 0 128 512\"><path d=\"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z\"/></svg>\r\n        <ul className={`${scss.post_action_container} flex-column-normal-normal-none`}>\r\n          <li onClick={() => contentAction('remove')} className='flex-row-center-normal-medium'><Trash2 /><p>Remove</p></li>\r\n          <li onClick={() => contentAction('edit')} className='flex-row-center-normal-medium'><Pencil /><p>Edit</p></li>\r\n          <li onClick={() => contentAction(isHidden ? 'show' : 'hidde')} className='flex-row-center-normal-medium'>{isHidden ? <Eye /> : <EyeOff />}<p>{isHidden ? 'Show' : 'Hidden'}</p></li>\r\n        </ul>\r\n      </button> : null}\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postWrapper.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PropsWithChildren } from \"react\"\r\nimport type { PostWrapperProps } from '../postContainer.type'\r\n\r\nimport { EyeOff } from 'lucide-react'\r\n\r\nexport default function PostWrapper({ children, className }: PropsWithChildren<PostWrapperProps>) {\r\n  return (\r\n    <section className={`${scss.post_wrapper_container} ${className} main-content-container`}>\r\n      {className ? \r\n       <div className={`${scss.post_is_hidden} flex-row-center-center-medium`}>\r\n         <EyeOff/>\r\n         <p>Hidden</p>\r\n       </div> : null}\r\n      <div style={{ padding: '1rem' }}>{children}</div>\r\n    </section>\r\n  )\r\n}","import scss from '../scss/postTags.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PostTagsProps } from '../postContainer.type'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostTags({ tags }: PostTagsProps) {\r\n  return <div className={`${scss.post_tags} flex-row-normal-normal-medium`}>{tags.map(tag => tag.trim() ? <Link to={`/search?tag=${tag}`} key={tag}>{tag}</Link> : null)}</div>\r\n}","import scss from './postContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport PostHeader from \"./component/postHeader\";\r\nimport PostWrapper from \"./component/postWrapper\";\r\nimport PostTags from './component/postTags';\r\nimport ContentViewer from '../content-viewer/contentViewer';\r\n\r\nimport type { Content } from '@/global.type';\r\nimport type { PostCommentsData } from '@/page/post/page.type';\r\nimport type { PostContainerProps } from \"./postContainer.type\";\r\n\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fragment } from 'react/jsx-runtime';\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser';\r\n\r\nimport useAuth from '@/custom-hook/useAuth/useAuth';\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useHavePermission from '@/custom-hook/use-have-permission/useHavePermission';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nexport default function PostContainer({ post, type }: PostContainerProps) {\r\n  const { id } = useParams()\r\n  const { pathname } = useLocation()\r\n  const auth = useAuth()\r\n  const searchParams = useSearchParams()\r\n  const permission = useHavePermission()\r\n  const redirect = useNavigate()\r\n\r\n  const { mutate } = useRequest({ deps: [] })\r\n\r\n  const isPostPage: boolean = pathname.search('/post') > -1\r\n  const isHomePage: boolean = pathname === '/'\r\n  const isLiked: boolean = post.likedBy.includes(auth.user?._id || '')\r\n  \r\n  const isContentCreator: boolean = permission.isHaveRoleAndIsIDEqual(['Creator'], post?.author?._id).result()\r\n  const isAdmin: boolean = permission.isHaveRole(['Admin']).result()\r\n  const isHidden: boolean = post.isHidden\r\n  \r\n  const postID: string = (type === 'preview' || type === 'post') ? post._id : id!\r\n  const currPage: number = (type === 'comment') ? parseInt(searchParams.get('page') || '0') : 0\r\n  const hiddenClass: string = ((isHidden && isAdmin) || (isContentCreator && isHidden)) ? scss.post_hidden : ''\r\n\r\n  if(isHidden && isPostPage && !isAdmin && !isContentCreator && type === 'post') redirect('/')\r\n\r\n  const showSomeData = (showThe: string): void => {\r\n    searchParams.set({ 'type': showThe, 'post-id': post._id, 'list-page': 0 })\r\n  }\r\n\r\n  const likeThisPost = async (): Promise<void> => {\r\n    if(post.isHidden && !auth.user) return\r\n\r\n    const key: string[] = type === 'post' ? [`post-${post._id}`] : [`post-${postID}-comments-${currPage}`]\r\n\r\n    mutate<Content | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        const likedContent = await fetcher.get<Content>(`/${type}/${post._id}/like`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n        //Update post\r\n        if(type === 'post') return likedContent\r\n\r\n        //Update comment\r\n        const state = option.state as PostCommentsData\r\n        const comments = state.comments || []\r\n\r\n        return {...state, comments: comments.map(comment => comment._id === likedContent._id ? likedContent : comment) }\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {isHomePage && !isContentCreator && !isAdmin && isHidden ? null :\r\n        <PostWrapper className={hiddenClass}>\r\n          {(type === 'comment' || type === 'preview') ? <PostHeader tags={post.tags || []} title={post.title || ''} content={post.content} isHidden={post.isHidden} postID={postID} contentID={post._id} type={type} createdAt={post.createdAt} user={post?.author}/> : null}\r\n          {type === 'post' ? \r\n            <div className={scss.post_content_container}>\r\n              <h4>{post.title}</h4>\r\n              <p className={scss.post_content_date}>{DateParser.getDifference(post.createdAt)}</p>\r\n              <ContentViewer className={scss.post_short_view} content={post.content}/>\r\n            </div> : null}\r\n          {type === 'preview' ? \r\n            <div className={scss.post_content_container}>\r\n              <Link to={`/post/${post._id}`}>{post.title}</Link>\r\n              <ContentViewer className={scss.post_short_view} content={post.content}/>\r\n            </div> : null}\r\n          {type === 'comment' ? <div className={scss.post_data}><ContentViewer content={post.content}/></div> : null}\r\n            <div className='flex-row-center-space-between-none'>\r\n              {((type === 'post' || type === 'preview') && post.tags) ? <PostTags tags={post.tags}/> : null}\r\n                <div className='flex-row-center-normal-big'>\r\n              {type === 'preview' ? \r\n                <Fragment>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('views') : undefined} ><Eye />{post.viewedBy?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('comments') : undefined}><MessageCircle />{post.comments?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('likes') : undefined}><Heart />{post.likedBy?.length}</p>\r\n                </Fragment> : null}\r\n              {(type === 'comment' || type === 'post') && auth.user ? <button onClick={likeThisPost} className={`${isLiked ? scss.post_liked : ''} ${scss.post_statistic_data} flex-row-center-normal-small`}><Heart/>{post.likedBy.length}</button> : null}\r\n            </div>\r\n          </div>\r\n        </PostWrapper>}\r\n    </Fragment>\r\n  )\r\n}","import scss from './button.module.scss'\r\n\r\nimport type { ButtonProps } from \"./button.type\";\r\n\r\nexport default function Button({ label, className, onClick, type, isDisable }: ButtonProps) {\r\n  return(\r\n    <button type={type || 'button'} style={{ width: `${label.length * 13}px` }} disabled={isDisable} className={`${scss.button} ${className}`} onClick={onClick}>\r\n      <section className={scss.button_label}>{label}</section>\r\n    </button>\r\n  )\r\n}","import scss from '../scss/paginationListLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PaginationListLoader() {\r\n  return(\r\n    <div className='flex-row-normal-space-between-medium'>\r\n      <div className={scss.pagintion_list_button}></div>\r\n      <div className='flex-row-normal-normal-small'>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n      </div>\r\n      <div className={scss.pagintion_list_button}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreviewLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function StatisticPreviewLoader() {\r\n  return(\r\n    <div style={{ paddingTop: '1rem' }} className='flex-column-normal-normal-medium'>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport Empty from '@/component/empty/empty'\r\nimport PaginationList from \"@/component/pagination-list/paginationList\"\r\nimport PaginationListLoader from '@/component/pagination-list/component/paginationListLoader'\r\nimport StatisticPreviewLoader from './statisticPreviewLoader'\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { X } from 'lucide-react'\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport type { GetPostStatistic, StatisticPreviewProps } from '../page.type'\r\nimport type { KeyValueObject } from '@/global.type'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport firstLetterToUpperCase from \"@/lib/first-letter-to-upper/firstLetterToUpper\"\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nexport default function StatisticPreview({ type }: StatisticPreviewProps) {\r\n  const searchParams = useSearchParams()\r\n\r\n  const postID: string = searchParams.get('post-id')!\r\n  const currPage: number = parseInt(searchParams.get('list-page') || '0')\r\n\r\n  const iconDictionary: KeyValueObject = { views: <Eye/>, likes: <Heart/>, comments: <MessageCircle/> }\r\n\r\n  const { data, prev, isPending } = useRequest<GetPostStatistic>({ \r\n    deps: [`preview-${type}-${postID}-${currPage}`], \r\n    prev: [`preview-${type}-${postID}-${currPage - 1 < 0 ? 0 : currPage - 1}`], \r\n    request: async () => fetcher.get(`/post/preview/${type}/${postID}/${currPage}`),\r\n  })\r\n\r\n  const paginationLength: number = (prev?.pagesCount || data?.pagesCount) || 0\r\n\r\n  const closePreviewStatistic = (): void => {\r\n    searchParams.remove(['type', 'post-id', 'list-page'])\r\n  }\r\n\r\n  return(\r\n    <section className={`${scss.preview_container} main-content-container`}>\r\n      <div className={`${scss.preview_header} flex-row-center-space-between-none`}>\r\n        <div className='flex-row-center-normal-medium'>\r\n          {iconDictionary[type]}\r\n          <h4 className={scss.preview_type}>{firstLetterToUpperCase(type || '')}</h4>\r\n        </div>\r\n        <X onClick={closePreviewStatistic}/>\r\n      </div>\r\n      {isPending ? <PaginationListLoader/> : paginationLength > 1 ? <PaginationList pagesCount={paginationLength}/> : null}\r\n      {isPending ? <StatisticPreviewLoader/> :\r\n      <div style={{ paddingTop: paginationLength > 1 ? '0.5rem' : '0rem' }} className={scss.preview_item_count_list}>\r\n        {data?.items?.length === 0 ? <Empty label='Nothing found!'/> :\r\n        data?.items?.map(item => (\r\n          <Link to={`/user/${item._id}`} className='flex-row-center-space-between-none' key={Math.random() * 200}>\r\n            <div className='flex-row-center-normal-medium'>\r\n              <ImageComponent src={item.avatar} alt={item.name}/>\r\n              <p>{item.name}</p>\r\n            </div>\r\n            <p className={scss.preview_item_count}>{item.count}</p>\r\n          </Link>\r\n        ))}\r\n      </div>}\r\n    </section>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport Error from \"@/component/error/error\"\r\nimport Empty from \"@/component/empty/empty\"\r\nimport Button from '@/component/button/button'\r\nimport StatisticPreview from './component/statisticPreview'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport Loader from './loader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport { Fragment } from 'react'\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\n\r\nexport default function Page() {\r\n  const searchParams = useSearchParams()\r\n  const { isFetching, isMutating, data, error, mutate } = useRequest({ \r\n    deps: ['all-posts'], \r\n    request: async () => await fetcher.get<Content[]>(`/home/${postsCount}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` }) \r\n  })\r\n\r\n  const contentPerLoad: number = 10\r\n  const postsCount: number = parseInt(searchParams.get('posts-count') || String(contentPerLoad))\r\n  const postStatisticPreviewType: string | null = searchParams.get('type')!\r\n\r\n  const loadMorePosts = async (): Promise<void> => {\r\n    const nextLoadCount: number = postsCount + contentPerLoad\r\n\r\n    searchParams.set({ 'posts-count': nextLoadCount })\r\n    await mutate({ key: ['all-posts'], request: async () => await fetcher.get<Content[]>(`/home/${nextLoadCount}`) })\r\n    \r\n    if(!isFetching && !isMutating) setTimeout(() => window.scrollTo({ behavior: 'smooth', top: document.body.scrollHeight }), 100)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      <div style={{ height: '100%', marginRight: postStatisticPreviewType ? '17rem' : '0rem' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ flexGrow: 1 }} className='flex-column-normal-normal-small'>\r\n          {isFetching ? <Loader/> : \r\n          error ? <Error underText='Go back or reload the page!' code={error.code} message={error.message}/> :\r\n          data && data.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"No post would founded!\"/> : \r\n          data && \r\n          <Fragment>\r\n            {data.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n            {data.length % contentPerLoad === 0 ? <div className='flex-row-center-center-none'><Button onClick={loadMorePosts} label='Load More'/></div> : null}\r\n          </Fragment>}\r\n        </div>\r\n        {postStatisticPreviewType ? <StatisticPreview type={postStatisticPreviewType}/> : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"names":["localStorage$1","get","key","or","JSON","parse","localStorage","getItem","set","value","setItem","stringify","remove","removeItem","AuthContext","createContext","AuthProvider","children","userState","updateUserState","useState","isAuthPending","isLoading","useEffect","async","user","response","fetcher","Authorization","coockie","getOne","isSuccess","Object","hasOwn","error","isAuth","jsx","Provider","useAuth","redirect","useNavigate","userContext","useContext","searchParams","useSearchParams","isLogOpen","isRegOpen","create","params","setSession","post","apiURL","body","setToken","token","redirectURL","prev","Error","code","message","out","clearError","ImageLoader","className","style","scss","default_image_loader","ImageComponent","alt","classNames","src","styles","isLoaded","setIsLoaded","imgSourceRef","useRef","imgRef","isHTTPProtocol","current","search","addEventListener","event","image","target","complete","once","Fragment","loader","CircleUserRound","img","default_image","size","ref","display","useHavePermission","auth","checkArray","isHaveRole","mustHaveRoles","includes","role","push","this","isIDEqual","id","_id","isHaveRoleAndIsIDEqual","isHaveRoleOrIsIDEqual","result","havePermission","length","PostContainerLoader","post_loader_container","jsxs","post_loader_avatar","width","post_loader_text","post_loader_tag","useMetadata","metadata","title","document","metaEntries","entries","metadataEl","createElement","name","content","head","appendChild","Loader","containersCount","description","Array","map","_","index","underText","error_container","error_body","error_error","PostHeader","createdAt","type","contentID","postID","tags","isHidden","permission","mutate","changeError","useRequest","deps","pathname","useLocation","isAdminOrCreator","isPostPage","isHomePage","isSearchPage","typeForAPI","page","parseInt","contentAction","action","contentType","onPage","onPost","request","option","removedItem","firstLetterToUpperCase","state","comments","pagesCount","removeCache","filter","hiddenItem","post_header","avatar","post_author","Link","to","post_create_date","DateParser","getDifference","post_header_author_not_defined","UserX","post_action_button","viewBox","d","post_action_container","onClick","Trash2","Pencil","Eye","EyeOff","PostWrapper","post_wrapper_container","post_is_hidden","padding","PostTags","post_tags","tag","trim","PostContainer","useParams","isLiked","likedBy","isContentCreator","author","isAdmin","currPage","hiddenClass","post_hidden","showSomeData","showThe","post_content_container","post_content_date","ContentViewer","post_short_view","post_data","post_statistic_data","viewedBy","MessageCircle","Heart","likedContent","comment","post_liked","Button","label","isDisable","disabled","button","button_label","PaginationListLoader","pagintion_list_button","StatisticPreviewLoader","paddingTop","preview_loader","StatisticPreview","iconDictionary","views","likes","data","isPending","paginationLength","preview_container","preview_header","preview_type","X","PaginationList","preview_item_count_list","items","Empty","item","preview_item_count","count","Math","random","isFetching","isMutating","postsCount","String","postStatisticPreviewType","MutatingLoader","height","marginRight","flexGrow","flexCenterCenter","nextLoadCount","setTimeout","window","scrollTo","behavior","top","scrollHeight"],"mappings":"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"}