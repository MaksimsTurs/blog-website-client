{"version":3,"file":"home.js","sources":["../../../../src/custom-hook/useAuth/useAuth.ts","../../../../src/component/image-component/imageLoader.tsx","../../../../src/component/image-component/image.tsx","../../../../src/component/loader/post-container-loader/postContainerLoader.tsx","../../../../src/custom-hook/use-metadata/useMetadata.ts","../../../../src/page/home/loader.tsx","../../../../src/component/error/error.tsx","../../../../src/component/post-container/component/postHeader.tsx","../../../../src/component/post-container/component/postWrapper.tsx","../../../../src/component/post-container/component/postTags.tsx","../../../../src/component/post-container/postContainer.tsx","../../../../src/component/button/button.tsx","../../../../src/component/pagination-list/component/paginationListLoader.tsx","../../../../src/page/home/component/statisticPreviewLoader.tsx","../../../../src/page/home/component/statisticPreview.tsx","../../../../src/page/home/page.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./authProvider\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nimport type { CreateParams, UserSessionData } from \"./useAuth.type\";\r\n\r\nimport useSearchParams from \"../use-search-params/useSearchParams\";\r\n\r\nexport default function useAuth() {\r\n  const redirect = useNavigate()\r\n  const userContext = useContext(AuthContext)\r\n  const searchParams = useSearchParams()\r\n\r\n  const isLogOpen: string | null = searchParams.get('login-modal')\r\n  const isRegOpen: string | null = searchParams.get('registration-modal')\r\n\r\n  return {\r\n    ...userContext?.userState,\r\n    create: async function(params: CreateParams): Promise<void> {\r\n      try {\r\n        if(params.setSession) return userContext?.updateUserState({ user: params.setSession, isAuthPending: false, isLoading: false })\r\n          \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: true })\r\n        \r\n        const response = await fetcher.post<UserSessionData>(params.apiURL!, params.body)\r\n        \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: response })\r\n\r\n        if(params?.setToken) coockie.set('PR_TOKEN', response.token)\r\n        if(params?.redirectURL) redirect(params.redirectURL)\r\n      } catch(error) {\r\n        userContext!.updateUserState!(prev => ({...prev, isAuthPending: false, isLoading: false, error: error instanceof Error ? { code: 503, message: 'Service Unavailable!' } : JSON.parse(error as string) }))\r\n      }\r\n    },\r\n    out: function(): void {\r\n      userContext?.updateUserState({ isAuthPending: false, isLoading: false })\r\n      coockie.set('PR_TOKEN', 'undefined')\r\n    },\r\n    clearError: function(): void {\r\n      useEffect(() => {\r\n        userContext?.updateUserState(prev => ({...prev, error: undefined }))\r\n      }, [isLogOpen, isRegOpen])\r\n    }\r\n  }\r\n}","import scss from './image.module.scss'\r\n\r\nimport type { ImageLoaderProps } from './image.type'\r\n\r\nexport default function ImageLoader({ className, style }: ImageLoaderProps) {\r\n  return <div style={style} className={`${scss.default_image_loader} ${className}`}></div>\r\n}","import scss from './image.module.scss'\r\n\r\nimport type { ImageComponentProps } from './image.type'\r\n\r\nimport { CircleUserRound } from 'lucide-react'\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\n\r\nimport ImageLoader from './imageLoader'\r\n\r\nexport default function ImageComponent({ alt, classNames, src, styles }: ImageComponentProps) {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\r\n\r\n  const imgSourceRef = useRef<string | undefined>('default')\r\n  const imgRef = useRef<HTMLImageElement>(null)\r\n\r\n  const isHTTPProtocol: boolean = (imgSourceRef.current?.search(/\\http(s)/) || -1) > -1\r\n  \r\n  useEffect(() => {\r\n    if(!imgRef.current) return\r\n      \r\n    imgRef.current.addEventListener('loadstart', () => {\r\n      setIsLoaded(false)\r\n    })\r\n\r\n    imgRef.current.addEventListener('load', (event) => {\r\n      const image = event.target as HTMLImageElement\r\n      imgSourceRef.current = src\r\n      setIsLoaded(image.complete)\r\n    }, { once: true })\r\n\r\n    imgRef.current.addEventListener('error', () => {\r\n      imgSourceRef.current = undefined\r\n      setIsLoaded(false)\r\n    }, { once: true })\r\n  }, [imgRef.current])\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isHTTPProtocol && !isLoaded ? <CircleUserRound className={`${classNames?.img} ${scss.default_image}`} size={40}/> : (!isLoaded && isHTTPProtocol) && <ImageLoader className={classNames?.loader} style={styles?.loader}/> }\r\n      <img ref={imgRef} src={src} alt={alt} className={classNames?.img} style={{...styles?.img, display: (isHTTPProtocol ? imgSourceRef.current : undefined || isLoaded) ? 'block' : 'none' }}/>\r\n    </Fragment>\r\n  )\r\n}","import scss from './postContainerLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PostContainerLoader() {\r\n  return(\r\n    <div className={`${scss.post_loader_container} main-content-container flex-column-normal-normal-medium`}>\r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div className={scss.post_loader_avatar}></div>\r\n        <div className='flex-column-normal-normal-medium'>\r\n          <div style={{ width: '4rem' }} className={scss.post_loader_text}></div>\r\n          <div style={{ width: '7rem' }} className={scss.post_loader_text}></div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '11rem' }} className={scss.post_loader_text}></div>\r\n      <div className='flex-column-normal-normal-medium'>\r\n        <div style={{ width: '50%' }} className={scss.post_loader_text}></div>\r\n        <div style={{ width: '20%' }} className={scss.post_loader_text}></div>\r\n      </div>\r\n      <div  className='flex-row-normal-space-between-none'>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n        </div>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect } from \"react\"\r\n\r\nimport type { Metadata } from \"./useMetadata.type\"\r\n\r\nexport default function useMetadata(metadata: Metadata): void {\r\n  useEffect(() => {\r\n    if(metadata.title) document.title = metadata.title\r\n  }, [metadata])\r\n\r\n  useEffect(() => {\r\n    delete metadata.title\r\n\r\n    const metaEntries: [string, string][] = Object.entries(metadata)\r\n  \r\n    for(let [key, value] of metaEntries) {\r\n      const metadataEl: HTMLMetaElement = document.createElement('meta')\r\n      \r\n      metadataEl.name = key\r\n      metadataEl.content = value\r\n  \r\n      document.head.appendChild(metadataEl)\r\n    }\r\n  }, [])\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nimport type { LoaderProps } from './page.type';\r\n\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata';\r\n\r\nexport default function Loader({ containersCount }: LoaderProps) {\r\n  useMetadata({ title: 'Home', description: 'Hier kannst du alle letzt geschriebene posts ansehen.' })\r\n  return <div className='flex-column-normal-normal-small'>{[...Array(containersCount || 3)].map((_, index) => <PostContainerLoader key={index}/>)}</div>\r\n}","import scss from './error.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { ErrorProps } from './error.type'\r\n\r\nexport default function Error({ code, message, underText }: ErrorProps) {\r\n  return(\r\n    <div className={`${scss.error_container} flex-row-center-center-none`}>\r\n      <div className={scss.error_body}>\r\n        <div className={`${scss.error_error} flex-column-normal-normal-none`}>\r\n          <p>Error - {code}!</p>\r\n          <p>{message}</p>\r\n        </div>\r\n        {underText ? <p>{underText}</p> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postHeader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { PostHeaderProps } from '../postContainer.type'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Pencil, Trash2, UserX } from 'lucide-react'\r\n\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\nimport type { Content } from '@/global.type'\r\nimport type { PostCommentsData } from '@/page/post/page.type'\r\n\r\nimport firstLetterToUpperCase from '@/lib/first-letter-to-upper/firstLetterToUpper'\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nexport default function PostHeader({ user, createdAt, type, contentID, postID, content, tags, title, isHidden }: PostHeaderProps) {\r\n  const permission = useHavePermission()\r\n  const { mutate, changeError } = useRequest({ deps: [] })\r\n  const searchParams = useSearchParams()\r\n  const redirect = useNavigate()\r\n  const { pathname } = useLocation()\r\n  \r\n  const isAdminOrCreator: boolean = permission.isHaveRoleOrIsIDEqual(['Admin', 'Creator'], user?._id)?.result()\r\n  const isPostPage: boolean = pathname.search('/post/') > -1\r\n  const isHomePage: boolean = pathname.search('/') > -1\r\n  const isSearchPage: boolean = pathname.search('/search') > -1\r\n\r\n  const typeForAPI = type === 'preview' ? 'post' : type\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n\r\n  const contentAction = (action: 'hidde' | 'show' | 'remove' | 'edit'): void => {\r\n    const key: string[] = \r\n      isPostPage && type === 'comment' ? \r\n        [`post-${postID}-comments-${searchParams.get('page') || 0}`] :\r\n      isHomePage ? ['all-posts'] :\r\n        []\r\n\r\n    //User have no permmissin\r\n    if(!permission.isHaveRole(['Creator', 'Admin']).result()) {\r\n      return changeError(key, { code: 403, message: 'You have no edit and remove permission!' })\r\n    }\r\n\r\n    if(action === 'edit') {\r\n      if(permission.isHaveRole(['Creator']).result()) {\r\n        localStorage.set(contentID, { content, tags, title, contentType: typeForAPI, onPage: page, onPost: postID })\r\n        return redirect(`/write-post?is-edit=true&content-id=${contentID}`)\r\n      } \r\n\r\n      if(permission.isHaveRole(['Admin']).result()) {\r\n        return redirect(`/admin/${typeForAPI}?id=${contentID}&${typeForAPI}-edit-modal=true`)\r\n      }\r\n    }\r\n\r\n    mutate<Content[] | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        //Remove item handlers\r\n        if(action === 'remove') {\r\n          const removedItem = await fetcher.get<Content>(`/admin/remove/${firstLetterToUpperCase(typeForAPI)}/${contentID}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n          \r\n          //Remove some comment from post page\r\n          if(isPostPage && type === 'comment') {\r\n            const state = option.state as PostCommentsData || { comments: [], pagesCount: 0 }\r\n\r\n            if(state.comments.length === 1 && state.pagesCount >= 1) {\r\n              for(let index: number = state.pagesCount - 1; index >= 0; index--) if(index !== page) option.removeCache(`post-${postID}-comments-${index}`)\r\n              redirect(`/post/${postID}?page=${+page - 1}`)\r\n              return { pagesCount: 0, comments: [] }            \r\n            }\r\n            return {...state, comments: state.comments!.filter(content => content._id !== removedItem._id) }\r\n          } \r\n          \r\n          //Remove some post from home page\r\n          if(isHomePage) {\r\n            const state = option.state as Content[] || []\r\n            return state.filter(content => content._id !== removedItem._id)\r\n          }\r\n        }\r\n\r\n        //Hidde item handlers\r\n        const hiddenItem = await fetcher.post<Content>(`/admin/${typeForAPI}/update`, { id: contentID, isHidden: action === 'hidde' }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n        \r\n        //Hidde some comment from post page\r\n        if(isPostPage) {\r\n          const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n          return {...state, comments: state.comments!.map(content => content._id === hiddenItem._id ? {...content, ...hiddenItem } : content) }\r\n        }\r\n\r\n        //Hidde post from home page\r\n        const state = option.state as Content[] || []\r\n        return state.map(content => content._id === hiddenItem._id ? hiddenItem : content)\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className={`${scss.post_header} flex-row-center-space-between-none`}>\r\n      {user ? \r\n      <div className='flex-row-normal-normal-medium'>\r\n         <ImageComponent src={user?.avatar} alt={user?.name || 'User avatar'}/>\r\n         <div className={scss.post_author}>\r\n           <Link to={`/user/${user?._id}`}>{user?.name}</Link>\r\n           <p className={scss.post_create_date}>{DateParser.getDifference(createdAt)}</p>  \r\n        </div>\r\n      </div> :\r\n      <div className={`${scss.post_header_author_not_defined} flex-row-center-normal-medium`}>\r\n        <UserX/>\r\n        <p>Author is possibly deleted!</p>\r\n      </div>}\r\n      {(isAdminOrCreator && !isSearchPage) ?\r\n      <button className={scss.post_action_button}>\r\n        <svg viewBox=\"0 0 128 512\"><path d=\"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z\"/></svg>\r\n        <ul className={`${scss.post_action_container} flex-column-normal-normal-none`}>\r\n          <li onClick={() => contentAction('remove')} className='flex-row-center-normal-medium'><Trash2 /><p>Remove</p></li>\r\n          <li onClick={() => contentAction('edit')} className='flex-row-center-normal-medium'><Pencil /><p>Edit</p></li>\r\n          <li onClick={() => contentAction(isHidden ? 'show' : 'hidde')} className='flex-row-center-normal-medium'>{isHidden ? <Eye /> : <EyeOff />}<p>{isHidden ? 'Show' : 'Hidden'}</p></li>\r\n        </ul>\r\n      </button> : null}\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postWrapper.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PropsWithChildren } from \"react\"\r\nimport type { PostWrapperProps } from '../postContainer.type'\r\n\r\nimport { EyeOff } from 'lucide-react'\r\n\r\nexport default function PostWrapper({ children, className }: PropsWithChildren<PostWrapperProps>) {\r\n  return (\r\n    <section className={`${scss.post_wrapper_container} ${className} main-content-container`}>\r\n      {className ? \r\n       <div className={`${scss.post_is_hidden} flex-row-center-center-medium`}>\r\n         <EyeOff/>\r\n         <p>Hidden</p>\r\n       </div> : null}\r\n      <div style={{ padding: '1rem' }}>{children}</div>\r\n    </section>\r\n  )\r\n}","import scss from '../scss/postTags.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PostTagsProps } from '../postContainer.type'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostTags({ tags }: PostTagsProps) {\r\n  return <div className={`${scss.post_tags} flex-row-normal-normal-medium`}>{tags.map(tag => tag.trim() ? <Link to={`/search?tag=${tag}`} key={tag}>{tag}</Link> : null)}</div>\r\n}","import scss from './postContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport PostHeader from \"./component/postHeader\";\r\nimport PostWrapper from \"./component/postWrapper\";\r\nimport PostTags from './component/postTags';\r\nimport ContentViewer from '../content-viewer/contentViewer';\r\n\r\nimport type { Content } from '@/global.type';\r\nimport type { PostCommentsData } from '@/page/post/page.type';\r\nimport type { PostContainerProps } from \"./postContainer.type\";\r\n\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fragment } from 'react/jsx-runtime';\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser';\r\n\r\nimport useAuth from '@/custom-hook/useAuth/useAuth';\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nexport default function PostContainer({ post, type }: PostContainerProps) {\r\n  const { id } = useParams()\r\n  const { pathname } = useLocation()\r\n  const auth = useAuth()\r\n  const searchParams = useSearchParams()\r\n  const permission = useHavePermission()\r\n  const redirect = useNavigate()\r\n\r\n  const { mutate } = useRequest({ deps: [] })\r\n\r\n  const isPostPage: boolean = pathname.search('/post') > -1\r\n  const isHomePage: boolean = pathname === '/'\r\n  const isLiked: boolean = post.likedBy.includes(auth.user?._id || '')\r\n  \r\n  const isContentCreator: boolean = permission.isHaveRoleAndIsIDEqual(['Creator'], post?.author?._id).result()\r\n  const isAdmin: boolean = permission.isHaveRole(['Admin']).result()\r\n  const isHidden: boolean = post.isHidden\r\n  \r\n  const postID: string = (type === 'preview' || type === 'post') ? post._id : id!\r\n  const currPage: number = (type === 'comment') ? parseInt(searchParams.get('page') || '0') : 0\r\n  const hiddenClass: string = ((isHidden && isAdmin) || (isContentCreator && isHidden)) ? scss.post_hidden : ''\r\n\r\n  if(isHidden && isPostPage && !isAdmin && !isContentCreator && type === 'post') redirect('/')\r\n\r\n  const showSomeData = (showThe: string): void => {\r\n    searchParams.set({ 'type': showThe, 'post-id': post._id, 'list-page': 0 })\r\n  }\r\n\r\n  const likeThisPost = async (): Promise<void> => {\r\n    if(post.isHidden && !auth.user) return\r\n\r\n    const key: string[] = type === 'post' ? [`post-${post._id}`] : [`post-${postID}-comments-${currPage}`]\r\n\r\n    mutate<Content | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        const likedContent = await fetcher.get<Content>(`/${type}/${post._id}/like`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n        //Update post\r\n        if(type === 'post') return likedContent\r\n\r\n        //Update comment\r\n        const state = option.state as PostCommentsData\r\n        const comments = state.comments || []\r\n\r\n        return {...state, comments: comments.map(comment => comment._id === likedContent._id ? likedContent : comment) }\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {isHomePage && !isContentCreator && !isAdmin && isHidden ? null :\r\n        <PostWrapper className={hiddenClass}>\r\n          {(type === 'comment' || type === 'preview') ? <PostHeader tags={post.tags || []} title={post.title || ''} content={post.content} isHidden={post.isHidden} postID={postID} contentID={post._id} type={type} createdAt={post.createdAt} user={post?.author}/> : null}\r\n          {type === 'post' ? \r\n            <div className={scss.post_content_container}>\r\n              <h4>{post.title}</h4>\r\n              <p className={scss.post_content_date}>{DateParser.getDifference(post.createdAt)}</p>\r\n              <ContentViewer className={scss.post_short_view} content={post.content}/>\r\n            </div> : null}\r\n          {type === 'preview' ? \r\n            <div className={scss.post_content_container}>\r\n              <Link to={`/post/${post._id}`}>{post.title}</Link>\r\n              <ContentViewer className={scss.post_short_view} content={post.content}/>\r\n            </div> : null}\r\n          {type === 'comment' ? <div className={scss.post_data}><ContentViewer content={post.content}/></div> : null}\r\n            <div className='flex-row-center-space-between-none'>\r\n              {((type === 'post' || type === 'preview') && post.tags) ? <PostTags tags={post.tags}/> : null}\r\n                <div className='flex-row-center-normal-big'>\r\n              {type === 'preview' ? \r\n                <Fragment>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('views') : undefined} ><Eye />{post.viewedBy?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('comments') : undefined}><MessageCircle />{post.comments?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('likes') : undefined}><Heart />{post.likedBy?.length}</p>\r\n                </Fragment> : null}\r\n              {(type === 'comment' || type === 'post') && auth.user ? <button onClick={likeThisPost} className={`${isLiked ? scss.post_liked : ''} ${scss.post_statistic_data} flex-row-center-normal-small`}><Heart/>{post.likedBy.length}</button> : null}\r\n            </div>\r\n          </div>\r\n        </PostWrapper>}\r\n    </Fragment>\r\n  )\r\n}","import scss from './button.module.scss'\r\n\r\nimport type { ButtonProps } from \"./button.type\";\r\n\r\nexport default function Button({ label, className, onClick, type, isDisable }: ButtonProps) {\r\n  return(\r\n    <button type={type || 'button'} style={{ width: `${label.length * 13}px` }} disabled={isDisable} className={`${scss.button} ${className}`} onClick={onClick}>\r\n      <section className={scss.button_label}>{label}</section>\r\n    </button>\r\n  )\r\n}","import scss from '../scss/paginationListLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PaginationListLoader() {\r\n  return(\r\n    <div className='flex-row-normal-space-between-medium'>\r\n      <div className={scss.pagintion_list_button}></div>\r\n      <div className='flex-row-normal-normal-small'>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n      </div>\r\n      <div className={scss.pagintion_list_button}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreviewLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function StatisticPreviewLoader() {\r\n  return(\r\n    <div style={{ paddingTop: '1rem' }} className='flex-column-normal-normal-medium'>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport Empty from '@/component/empty/empty'\r\nimport PaginationList from \"@/component/pagination-list/paginationList\"\r\nimport PaginationListLoader from '@/component/pagination-list/component/paginationListLoader'\r\nimport StatisticPreviewLoader from './statisticPreviewLoader'\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { X } from 'lucide-react'\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport type { GetPostStatistic, StatisticPreviewProps } from '../page.type'\r\nimport type { KeyValueObject } from '@/global.type'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport firstLetterToUpperCase from \"@/lib/first-letter-to-upper/firstLetterToUpper\"\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nexport default function StatisticPreview({ type }: StatisticPreviewProps) {\r\n  const searchParams = useSearchParams()\r\n\r\n  const postID: string = searchParams.get('post-id')!\r\n  const currPage: number = parseInt(searchParams.get('list-page') || '0')\r\n\r\n  const iconDictionary: KeyValueObject = { views: <Eye/>, likes: <Heart/>, comments: <MessageCircle/> }\r\n\r\n  const { data, prev, isPending } = useRequest<GetPostStatistic>({ \r\n    deps: [`preview-${type}-${postID}-${currPage}`], \r\n    prev: [`preview-${type}-${postID}-${currPage - 1 < 0 ? 0 : currPage - 1}`], \r\n    request: async () => fetcher.get(`/post/preview/${type}/${postID}/${currPage}`),\r\n  })\r\n\r\n  const paginationLength: number = (prev?.pagesCount || data?.pagesCount) || 0\r\n\r\n  const closePreviewStatistic = (): void => {\r\n    searchParams.remove(['type', 'post-id', 'list-page'])\r\n  }\r\n\r\n  return(\r\n    <section className={`${scss.preview_container} main-content-container`}>\r\n      <div className={`${scss.preview_header} flex-row-center-space-between-none`}>\r\n        <div className='flex-row-center-normal-medium'>\r\n          {iconDictionary[type]}\r\n          <h4 className={scss.preview_type}>{firstLetterToUpperCase(type || '')}</h4>\r\n        </div>\r\n        <X onClick={closePreviewStatistic}/>\r\n      </div>\r\n      {isPending ? <PaginationListLoader/> : paginationLength > 1 ? <PaginationList pagesCount={paginationLength}/> : null}\r\n      {isPending ? <StatisticPreviewLoader/> :\r\n      <div style={{ paddingTop: paginationLength > 1 ? '0.5rem' : '0rem' }} className={scss.preview_item_count_list}>\r\n        {data?.items?.length === 0 ? <Empty label='Nothing found!'/> :\r\n        data?.items?.map(item => (\r\n          <Link to={`/user/${item._id}`} className='flex-row-center-space-between-none' key={Math.random() * 200}>\r\n            <div className='flex-row-center-normal-medium'>\r\n              <ImageComponent src={item.avatar} alt={item.name}/>\r\n              <p>{item.name}</p>\r\n            </div>\r\n            <p className={scss.preview_item_count}>{item.count}</p>\r\n          </Link>\r\n        ))}\r\n      </div>}\r\n    </section>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport Error from \"@/component/error/error\"\r\nimport Empty from \"@/component/empty/empty\"\r\nimport Button from '@/component/button/button'\r\nimport StatisticPreview from './component/statisticPreview'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport Loader from './loader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport { Fragment } from 'react'\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\n\r\nexport default function Page() {\r\n  const searchParams = useSearchParams()\r\n  const { isFetching, isMutating, data, error, mutate } = useRequest({ \r\n    deps: ['all-posts'], \r\n    request: async () => await fetcher.get<Content[]>(`/home/${postsCount}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` }) \r\n  })\r\n\r\n  const contentPerLoad: number = 10\r\n  const postsCount: number = parseInt(searchParams.get('posts-count') || String(contentPerLoad))\r\n  const postStatisticPreviewType: string | null = searchParams.get('type')!\r\n\r\n  const loadMorePosts = async (): Promise<void> => {\r\n    const nextLoadCount: number = postsCount + contentPerLoad\r\n\r\n    searchParams.set({ 'posts-count': nextLoadCount })\r\n    await mutate({ key: ['all-posts'], request: async () => await fetcher.get<Content[]>(`/home/${nextLoadCount}`) })\r\n    \r\n    if(!isFetching && !isMutating) setTimeout(() => window.scrollTo({ behavior: 'smooth', top: document.body.scrollHeight }), 100)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      <div style={{ height: '100%', marginRight: postStatisticPreviewType ? '17rem' : '0rem' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ flexGrow: 1 }} className='flex-column-normal-normal-small'>\r\n          {isFetching ? <Loader/> : \r\n          error ? <Error underText='Go back or reload the page!' code={error.code} message={error.message}/> :\r\n          data && data.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"No post would founded!\"/> : \r\n          data && \r\n          <Fragment>\r\n            {data.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n            {data.length % contentPerLoad === 0 ? <div className='flex-row-center-center-none'><Button onClick={loadMorePosts} label='Load More'/></div> : null}\r\n          </Fragment>}\r\n        </div>\r\n        {postStatisticPreviewType ? <StatisticPreview type={postStatisticPreviewType}/> : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"names":["useAuth","redirect","useNavigate","userContext","useContext","AuthContext","searchParams","useSearchParams","isLogOpen","get","isRegOpen","userState","create","async","params","setSession","updateUserState","user","isAuthPending","isLoading","response","fetcher","post","apiURL","body","error","setToken","coockie","set","token","redirectURL","prev","Error","code","message","JSON","parse","out","clearError","useEffect","ImageLoader","className","style","jsx","scss","default_image_loader","ImageComponent","alt","classNames","src","styles","isLoaded","setIsLoaded","useState","imgSourceRef","useRef","imgRef","isHTTPProtocol","current","search","addEventListener","event","image","target","complete","once","Fragment","children","loader","CircleUserRound","img","default_image","size","ref","display","PostContainerLoader","post_loader_container","jsxs","post_loader_avatar","width","post_loader_text","post_loader_tag","useMetadata","metadata","title","document","metaEntries","Object","entries","key","value","metadataEl","createElement","name","content","head","appendChild","Loader","containersCount","description","Array","map","_","index","underText","error_container","error_body","error_error","PostHeader","createdAt","type","contentID","postID","tags","isHidden","permission","useHavePermission","mutate","changeError","useRequest","deps","pathname","useLocation","isAdminOrCreator","isHaveRoleOrIsIDEqual","_id","result","isPostPage","isHomePage","isSearchPage","typeForAPI","page","parseInt","contentAction","action","isHaveRole","localStorage","contentType","onPage","onPost","request","option","removedItem","firstLetterToUpperCase","Authorization","getOne","state","comments","pagesCount","length","removeCache","filter","hiddenItem","id","post_header","avatar","post_author","Link","to","post_create_date","DateParser","getDifference","post_header_author_not_defined","UserX","post_action_button","viewBox","d","post_action_container","onClick","Trash2","Pencil","Eye","EyeOff","PostWrapper","post_wrapper_container","post_is_hidden","padding","PostTags","post_tags","tag","trim","PostContainer","useParams","auth","isLiked","likedBy","includes","isContentCreator","isHaveRoleAndIsIDEqual","author","isAdmin","currPage","hiddenClass","post_hidden","showSomeData","showThe","post_content_container","post_content_date","ContentViewer","post_short_view","post_data","post_statistic_data","viewedBy","MessageCircle","Heart","likedContent","comment","post_liked","Button","label","isDisable","disabled","button","button_label","PaginationListLoader","pagintion_list_button","StatisticPreviewLoader","paddingTop","preview_loader","StatisticPreview","iconDictionary","views","likes","data","isPending","paginationLength","preview_container","preview_header","preview_type","X","remove","PaginationList","preview_item_count_list","items","Empty","item","preview_item_count","count","Math","random","isFetching","isMutating","postsCount","String","postStatisticPreviewType","MutatingLoader","height","marginRight","flexGrow","flexCenterCenter","nextLoadCount","setTimeout","window","scrollTo","behavior","top","scrollHeight"],"mappings":"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"}