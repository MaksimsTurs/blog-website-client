{"version":3,"file":"home.js","sources":["../../../../src/custom-hook/useAuth/useAuth.ts","../../../../src/component/image-component/imageLoader.tsx","../../../../src/component/image-component/image.tsx","../../../../src/component/loader/post-container-loader/postContainerLoader.tsx","../../../../src/custom-hook/use-metadata/useMetadata.ts","../../../../src/page/home/loader.tsx","../../../../src/component/error/error.tsx","../../../../src/component/post-container/component/postHeader.tsx","../../../../src/component/post-container/component/postWrapper.tsx","../../../../src/component/post-container/component/postTags.tsx","../../../../src/component/content-viewer/parser/parts/regexp.ts","../../../../src/component/content-viewer/parser/parts/secure.ts","../../../../src/component/content-viewer/parser/parts/have.ts","../../../../src/component/content-viewer/parser/contentParsingError.ts","../../../../src/component/content-viewer/parser/parts/error.ts","../../../../src/component/content-viewer/parser/parts/benchmark.ts","../../../../src/component/content-viewer/parser/parse.ts","../../../../src/component/content-viewer/parser/parts/kind.ts","../../../../src/component/content-viewer/parser/parts/parseAs.ts","../../../../src/component/content-viewer/parser/contentParser.ts","../../../../src/component/content-viewer/contentViewer.tsx","../../../../src/component/post-container/postContainer.tsx","../../../../src/component/button/button.tsx","../../../../src/component/pagination-list/component/paginationListLoader.tsx","../../../../src/page/home/component/statisticPreviewLoader.tsx","../../../../src/page/home/component/statisticPreview.tsx","../../../../src/page/home/page.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./authProvider\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nimport type { CreateParams, UserSessionData } from \"./useAuth.type\";\r\n\r\nimport useSearchParams from \"../use-search-params/useSearchParams\";\r\n\r\nexport default function useAuth() {\r\n  const redirect = useNavigate()\r\n  const userContext = useContext(AuthContext)\r\n  const searchParams = useSearchParams()\r\n\r\n  const isLogOpen: string | null = searchParams.get('login-modal')\r\n  const isRegOpen: string | null = searchParams.get('registration-modal')\r\n\r\n  return {\r\n    ...userContext?.userState,\r\n    create: async function(params: CreateParams): Promise<void> {\r\n      try {\r\n        if(params.setSession) return userContext?.updateUserState({ user: params.setSession, isAuthPending: false, isLoading: false })\r\n          \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: true })\r\n        \r\n        const response = await fetcher.post<UserSessionData>(params.apiURL!, params.body)\r\n        \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: response })\r\n\r\n        if(params?.setToken) coockie.set('PR_TOKEN', response.token)\r\n        if(params?.redirectURL) redirect(params.redirectURL)\r\n      } catch(error) {\r\n        userContext!.updateUserState!(prev => ({...prev, isAuthPending: false, isLoading: false, error: error instanceof Error ? { code: 503, message: 'Service Unavailable!' } : JSON.parse(error as string) }))\r\n      }\r\n    },\r\n    out: function(): void {\r\n      userContext?.updateUserState({ isAuthPending: false, isLoading: false })\r\n      coockie.set('PR_TOKEN', 'undefined')\r\n    },\r\n    clearError: function(): void {\r\n      useEffect(() => {\r\n        userContext?.updateUserState(prev => ({...prev, error: undefined }))\r\n      }, [isLogOpen, isRegOpen])\r\n    }\r\n  }\r\n}","import scss from './image.module.scss'\r\n\r\nimport type { ImageLoaderProps } from './image.type'\r\n\r\nexport default function ImageLoader({ className, style }: ImageLoaderProps) {\r\n  return <div style={style} className={`${scss.default_image_loader} ${className}`}></div>\r\n}","import scss from './image.module.scss'\r\n\r\nimport type { ImageComponentProps } from './image.type'\r\n\r\nimport { CircleUserRound } from 'lucide-react'\r\nimport { Fragment, memo, useEffect, useState } from 'react'\r\n\r\nimport ImageLoader from './imageLoader'\r\n\r\nexport default memo(function ImageComponent({ alt, classNames, src, styles }: ImageComponentProps) {\r\n  const [imageState, setImageState] = useState<{ isLoading: boolean, source?: string }>({ isLoading: true })\r\n  \r\n  useEffect(() => {\r\n    const checkImageSource = async (): Promise<void> => {\r\n      try {\r\n        await fetch(src || '')\r\n        setImageState({ isLoading: false, source: src })\r\n      } catch(error) {\r\n        console.error(error)\r\n        setImageState({ isLoading: false })\r\n      }\r\n    }\r\n\r\n    checkImageSource()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {imageState.isLoading ? <ImageLoader className={classNames?.loader} style={styles?.loader}/> : !imageState.source ? <CircleUserRound className={`${classNames?.img} ${scss.default_image}`}/> : null}\r\n      <img src={src} alt={alt} className={classNames?.img} style={{...styles?.img, display: imageState.source && !imageState.isLoading ? 'block' : 'none' }}/>\r\n    </Fragment>\r\n  )\r\n})","import scss from './postContainerLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PostContainerLoader() {\r\n  return(\r\n    <div className={`${scss.post_loader_container} main-content-container flex-column-normal-normal-medium`}>\r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div className={scss.post_loader_avatar}></div>\r\n        <div className='flex-column-normal-normal-medium'>\r\n          <div style={{ width: '4rem' }} className={scss.post_loader_text}></div>\r\n          <div style={{ width: '7rem' }} className={scss.post_loader_text}></div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '11rem' }} className={scss.post_loader_text}></div>\r\n      <div className='flex-column-normal-normal-medium'>\r\n        <div style={{ width: '50%' }} className={scss.post_loader_text}></div>\r\n        <div style={{ width: '20%' }} className={scss.post_loader_text}></div>\r\n      </div>\r\n      <div  className='flex-row-normal-space-between-none'>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n        </div>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect } from \"react\"\r\n\r\nimport type { Metadata } from \"./useMetadata.type\"\r\n\r\nexport default function useMetadata(metadata: Metadata): void {\r\n  useEffect(() => {\r\n    if(metadata.title) document.title = metadata.title\r\n  }, [metadata])\r\n\r\n  useEffect(() => {\r\n    delete metadata.title\r\n\r\n    const metaEntries: [string, string][] = Object.entries(metadata)\r\n  \r\n    for(let [key, value] of metaEntries) {\r\n      const metadataEl: HTMLMetaElement = document.createElement('meta')\r\n      \r\n      metadataEl.name = key\r\n      metadataEl.content = value\r\n  \r\n      document.head.appendChild(metadataEl)\r\n    }\r\n  }, [])\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nimport type { LoaderProps } from './page.type';\r\n\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata';\r\n\r\nexport default function Loader({ containersCount }: LoaderProps) {\r\n  useMetadata({ title: 'Home', description: 'Hier kannst du alle letzt geschriebene posts ansehen.' })\r\n  return <div className='flex-column-normal-normal-small'>{[...Array(containersCount || 3)].map((_, index) => <PostContainerLoader key={index}/>)}</div>\r\n}","import scss from './error.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { ErrorProps } from './error.type'\r\n\r\nexport default function Error({ code, message, underText }: ErrorProps) {\r\n  return(\r\n    <div className={`${scss.error_container} flex-row-center-center-none`}>\r\n      <div className={scss.error_body}>\r\n        <div className={`${scss.error_error} flex-column-normal-normal-none`}>\r\n          <p>Error - {code}!</p>\r\n          <p>{message}</p>\r\n        </div>\r\n        {underText ? <p>{underText}</p> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postHeader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { PostHeaderProps } from '../postContainer.type'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Pencil, Trash2, UserX } from 'lucide-react'\r\n\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\nimport firstLetterToUpperCase from '@/lib/first-letter-to-upper/firstLetterToUpper'\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\n\r\nimport type { Content } from '@/global.type'\r\nimport type { PostCommentsData } from '@/page/post/page.type'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nexport default function PostHeader({ user, createdAt, type, contentID, postID, content, tags, title, isHidden }: PostHeaderProps) {\r\n  const permission = useHavePermission()\r\n  const searchParams = useSearchParams()\r\n  const redirect = useNavigate()\r\n  const { mutate, changeError } = useRequest({ deps: [] })\r\n  const { pathname } = useLocation()\r\n  \r\n  const isAdminOrCreator: boolean = permission.roleAndEqual(['Admin', 'Creator'], '_id', user?._id).permited()\r\n\r\n  const isPostPage: boolean = pathname.search('/post/') > -1\r\n  const isHomePage: boolean = pathname.search('/') > -1\r\n  const isSearchPage: boolean = pathname.search('/search') > -1\r\n\r\n  const typeForAPI = type === 'preview' ? 'post' : type\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n\r\n  const contentAction = (action: 'hidde' | 'show' | 'remove' | 'edit'): void => {\r\n    const key: string[] = \r\n      isPostPage && type === 'comment' ? \r\n        [`post-${postID}-comments-${searchParams.get('page') || 0}`] :\r\n      isHomePage ? ['all-posts'] :\r\n        []\r\n\r\n    //User have no permmissin\r\n    if(!permission.role(['Creator', 'Admin']).permited()) {\r\n      return changeError(key, { code: 403, message: 'You have no edit and remove permission!' })\r\n    }\r\n\r\n    if(action === 'edit') {\r\n      if(permission.role(['Creator']).permited()) {\r\n        localStorage.set(contentID, { content, tags, title, isHidden, contentType: typeForAPI, onPage: page, onPost: postID })\r\n        return redirect(`/write-post?is-edit=true&content-id=${contentID}`)\r\n      } \r\n\r\n      if(permission.role(['Admin']).permited()) {\r\n        return redirect(`/admin/${typeForAPI}?id=${contentID}&${typeForAPI}-edit-modal=true`)\r\n      }\r\n    }\r\n\r\n    mutate<Content[] | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        //Remove item handlers\r\n        if(action === 'remove') {\r\n          const removedItem = await fetcher.get<Content>(`/admin/remove/${firstLetterToUpperCase(typeForAPI)}/${contentID}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n          \r\n          //Remove some comment from post page\r\n          if(isPostPage && type === 'comment') {\r\n            const state = option.state as PostCommentsData || { comments: [], pagesCount: 0 }\r\n\r\n            if(state.comments.length === 1 && state.pagesCount >= 1) {\r\n              for(let index: number = state.pagesCount - 1; index >= 0; index--) if(index !== page) option.removeCache(`post-${postID}-comments-${index}`)\r\n              redirect(`/post/${postID}?page=${+page - 1}`)\r\n              return { pagesCount: 0, comments: [] }            \r\n            }\r\n            return {...state, comments: state.comments!.filter(content => content._id !== removedItem._id) }\r\n          } \r\n          \r\n          //Remove some post from home page\r\n          if(isHomePage) {\r\n            const state = option.state as Content[] || []\r\n            return state.filter(content => content._id !== removedItem._id)\r\n          }\r\n        }\r\n\r\n        //Hidde item handlers\r\n        const hiddenItem = await fetcher.post<Content>(`/admin/${typeForAPI}/update`, { id: contentID, isHidden: action === 'hidde' }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n        \r\n        //Hidde some comment from post page\r\n        if(isPostPage) {\r\n          const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n          return {...state, comments: state.comments!.map(content => content._id === hiddenItem._id ? {...content, ...hiddenItem } : content) }\r\n        }\r\n\r\n        //Hidde post from home page\r\n        const state = option.state as Content[] || []\r\n        return state.map(content => content._id === hiddenItem._id ? hiddenItem : content)\r\n      }\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(createdAt)\r\n    .getSortDate({\r\n       year: '[year] year [month] months ago!',\r\n       month: '[month] month [day] days ago!',\r\n       day: '[day] day [hour] hours ago!',\r\n       hour: '[hour] hour [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <div className={`${scss.post_header} flex-row-center-space-between-none`}>\r\n      {user ? \r\n      <div className='flex-row-center-normal-medium'>\r\n         <ImageComponent styles={{ svg: { width: '2rem', height: '2rem' }, img: { width: '2rem', height: '2rem' }}} src={user?.avatar} alt={user?.name || 'User avatar'}/>\r\n         <div className={scss.post_author}>\r\n           <Link to={`/user/${user?._id}`}>{user?.name}</Link>\r\n           <p className={scss.post_create_date}>{createdAtDifference}</p>  \r\n        </div>\r\n      </div> :\r\n      <div className={`${scss.post_header_author_not_defined} flex-row-center-normal-medium`}>\r\n        <UserX/>\r\n        <p>Author is possibly deleted!</p>\r\n      </div>}\r\n      {(isAdminOrCreator && !isSearchPage) ?\r\n      <button className={scss.post_action_button}>\r\n        <svg viewBox=\"0 0 128 512\"><path d=\"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z\"/></svg>\r\n        <ul className={`${scss.post_action_container} flex-column-normal-normal-none`}>\r\n          <li onClick={() => contentAction('remove')} className='flex-row-center-normal-medium'><Trash2 /><p>Remove</p></li>\r\n          <li onClick={() => contentAction('edit')} className='flex-row-center-normal-medium'><Pencil /><p>Edit</p></li>\r\n          <li onClick={() => contentAction(isHidden ? 'show' : 'hidde')} className='flex-row-center-normal-medium'>{isHidden ? <Eye /> : <EyeOff />}<p>{isHidden ? 'Show' : 'Hidden'}</p></li>\r\n        </ul>\r\n      </button> : null}\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postWrapper.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PropsWithChildren } from \"react\"\r\nimport type { PostWrapperProps } from '../postContainer.type'\r\n\r\nimport { EyeOff } from 'lucide-react'\r\n\r\nexport default function PostWrapper({ children, className }: PropsWithChildren<PostWrapperProps>) {\r\n  return (\r\n    <section className={`${scss.post_wrapper_container} ${className} main-content-container`}>\r\n      {className ? \r\n       <div className={`${scss.post_is_hidden} flex-row-center-center-medium`}>\r\n         <EyeOff/>\r\n         <p>Hidden</p>\r\n       </div> : null}\r\n      <div style={{ padding: '1rem' }}>{children}</div>\r\n    </section>\r\n  )\r\n}","import scss from '../scss/postTags.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PostTagsProps } from '../postContainer.type'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostTags({ tags }: PostTagsProps) {\r\n  return <div className={`${scss.post_tags} flex-row-normal-normal-medium`}>{tags.map(tag => tag.trim() ? <Link to={`/search?tag=${tag}`} key={tag}>{tag}</Link> : null)}</div>\r\n}","import type { ContentRegexp } from \"../contentParser.type\";\r\n\r\nexport default {\r\n  //Text ; URL\r\n  LINK_REGEXP: /\\[(.*?);(.*?)\\]/g,\r\n  //Alt ; Context ; Src\r\n  IMAGE_REGEXP: /\\((.*?);(.*?);?(.*?)\\)/g,\r\n  //Name ; Text\r\n  QUOTE_BRACKETS_REGEXP: /\\(?(.*?)\\)?\\\"{2}([^\"\"]+?)\\\"{2}/gm,\r\n  BOLD_REGEXP: /#(.*?)#/g,\r\n  HEADER_REGEXP_1: /#{2}(.*?)#{2}/,\r\n  HEADER_REGEXP_2: /#{3}(.*?)#{3}/,\r\n  VIDEO_REGEXP: /\\(\\[(.+)\\]\\)/g,\r\n  DEFAULT_REGEXP: /\\[(.*?)\\]/g,\r\n  SQUARE_BRACKETS_REGEXP: /^\\[(.*)\\]$/g,\r\n  PAIR_BRACKETS_REGEXP: /\\((.*?)\\)/g,\r\n  TAG_BRACKET_REGEXP: /<.*>(.*)<.*>/,\r\n  //Secure regexp\r\n  HTTPS_PROTOCOL_REGEXP: /((blob:?.+https?)|https):\\/{2}/g,\r\n  HTML_TAG_WITH_HANDLERS_REGEXP: /<.*? on.* .*?>/gm,\r\n  SCRIPT_TAG_REGEXP: /<script.*?>([\\s\\S]*?)<\\/script>/gm\r\n} as ContentRegexp","import type { ContentSecure } from \"../contentParser.type\";\r\n\r\nimport regexp from \"./regexp\";\r\n\r\nexport default {\r\n  URL: function(url) {\r\n    regexp.HTTPS_PROTOCOL_REGEXP.lastIndex = 0\r\n    return regexp.HTTPS_PROTOCOL_REGEXP.test(url)\r\n  },\r\n  DOM: function(line) {\r\n    regexp.SCRIPT_TAG_REGEXP.lastIndex = 0\r\n    regexp.HTML_TAG_WITH_HANDLERS_REGEXP.lastIndex = 0\r\n    return !regexp.SCRIPT_TAG_REGEXP.test(line) && !regexp.HTML_TAG_WITH_HANDLERS_REGEXP.test(line)\r\n  }\r\n} as ContentSecure","import type { LineHave } from \"../contentParser.type\";\r\n\r\nimport regexp from \"./regexp\";\r\n\r\nexport default {\r\n  bold: function(line) {\r\n    regexp.BOLD_REGEXP.lastIndex = 0\r\n    return regexp.BOLD_REGEXP.test(line)\r\n  },\r\n  header1: function(line) {\r\n    regexp.HEADER_REGEXP_1.lastIndex = 0\r\n    return regexp.HEADER_REGEXP_1.test(line)\r\n  },\r\n  header2: function(line) {\r\n    regexp.HEADER_REGEXP_2.lastIndex = 0\r\n    return regexp.HEADER_REGEXP_2.test(line)\r\n  },\r\n  img: function(line) {\r\n    regexp.IMAGE_REGEXP.lastIndex = 0\r\n    return regexp.IMAGE_REGEXP.test(line)\r\n  },\r\n  link: function(line) {\r\n    regexp.LINK_REGEXP.lastIndex = 0\r\n    return regexp.LINK_REGEXP.test(line)\r\n  },\r\n  video: function(line) {\r\n    regexp.LINK_REGEXP.lastIndex = 0\r\n    return regexp.VIDEO_REGEXP.test(line)\r\n  },\r\n  intendention: function(line) {\r\n    return line[0] === '-'\r\n  },\r\n  list: function(line) {\r\n    return line[0] === '+'\r\n  },\r\n  quote: function(line) {\r\n    regexp.QUOTE_BRACKETS_REGEXP.lastIndex = 0\r\n    return regexp.QUOTE_BRACKETS_REGEXP.test(line)\r\n  }\r\n} as LineHave","import type { ContentParsingErrorInformation } from \"./contentParser.type\"\r\n\r\nclass ContentParsingError extends Error {\r\n  constructor(information: ContentParsingErrorInformation) {\r\n    super(information.message)\r\n    this.name = 'Error by content parsing'\r\n\r\n    console.log(information)\r\n  }\r\n}\r\n\r\nexport default ContentParsingError","import { ContentParserError } from \"../contentParser.type\";\r\n\r\nimport ContentParseError from \"../contentParsingError\";\r\n\r\nexport default {\r\n  throw: function(information) {\r\n    throw new ContentParseError(information)\r\n  }\r\n} as ContentParserError","import { ContentParserBenchmark } from \"../contentParser.type\";\r\n\r\nimport parse from \"../parse\";\r\n\r\nexport default {\r\n  parsingTime: 0,\r\n  kindCount: {},\r\n  getParsingBenchmarkResultAndParsedContent: function(content) {\r\n    const NUM_COLOR: string = 'color: #F48023'\r\n    const KIND_COLOR: string = 'color: #49be49'\r\n    const TEXT_COLOR: string = 'color: white'\r\n\r\n    const parseStart: number = Date.now()\r\n    const parsed = parse(content)\r\n    const parseEnd: number = (Date.now() - parseStart) / 1000\r\n    \r\n    const kindCountEntries: [string, number][] = Object.entries(this.kindCount)\r\n\r\n    console.info('-----------------------Parse start------------------------------')\r\n    console.info('Content size (charachters): %c%d', NUM_COLOR, parsed.length)\r\n    console.info('Content parsing time: %c%fs', NUM_COLOR, parseEnd)\r\n    for(let [kindName, count] of kindCountEntries) console.info('Count of %c%s%c: %c%d', KIND_COLOR, kindName, TEXT_COLOR, NUM_COLOR, count)\r\n    console.info('-----------------------Parse end--------------------------------')\r\n\r\n    return parsed\r\n  },\r\n  countKind: function(kind) {\r\n    if(this.kindCount[kind]) this.kindCount[kind]++\r\n    else this.kindCount[kind] = 1\r\n  },\r\n  reset: function() {\r\n    this.parsingTime = 0\r\n    this.kindCount = {}\r\n  }\r\n} as ContentParserBenchmark","import ContentParser from \"./contentParser\"\r\n\r\nexport default function parse(content: string): string {\r\n  ContentParser.benchmark.reset()\r\n\r\n  if(!content) return ''\r\n\r\n  let lines: string[] = content.split('\\\\n')\r\n  let parsed: string = ''\r\n\r\n  if(lines.length === 1) lines = content.split('\\n')\r\n\r\n  for(let obj = { index: 0 }; obj.index < lines.length; obj.index++) {\r\n    if(ContentParser.have.intendention(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.intendention()\r\n      continue\r\n    }\r\n    \r\n    if(ContentParser.have.quote(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.quote(lines[obj.index])\r\n      continue\r\n    }\r\n    \r\n    if(ContentParser.have.header2(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.header2(lines[obj.index])\r\n      continue\r\n    }\r\n    \r\n    if(ContentParser.have.header1(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.header1(lines[obj.index])\r\n      continue\r\n    }\r\n    \r\n    if(ContentParser.have.img(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.img(obj, lines)\r\n      obj.index--\r\n      continue\r\n    }\r\n\r\n    if(ContentParser.have.video(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.video(lines[obj.index])\r\n      continue\r\n    }  \r\n    \r\n    if(ContentParser.have.list(lines[obj.index])) {\r\n      parsed += ContentParser.parseAs.list(obj, lines)\r\n      obj.index--\r\n      continue\r\n    }\r\n    \r\n    if(ContentParser.have.bold(lines[obj.index]))  {\r\n      lines[obj.index] = ContentParser.parseAs.bold(lines[obj.index])\r\n    }\r\n\r\n    if(ContentParser.have.link(lines[obj.index])) {\r\n      lines[obj.index] = ContentParser.parseAs.link(lines[obj.index])\r\n    }\r\n\r\n    lines[obj.index] = `<div dir=\"auto\" class=\"line flex-row-normal-normal-medium\">` + lines[obj.index] + `</div>`\r\n    parsed += lines[obj.index]\r\n\r\n    ContentParser.benchmark.countKind(ContentParser.kind.LINE)\r\n  }\r\n\r\n  parsed = `<div style=\"width: 100%;\" class=\"flex-column-normal-normal-none\">` + parsed + `</div>`\r\n\r\n  if(!ContentParser.secure.DOM(parsed)) ContentParser.error.throw({ content: parsed, function: 'parse', message: 'HTML Contains handlers or script tag!' })\r\n\r\n  return parsed\r\n}","import { ContentParser } from \"../contentParser.type\";\r\n\r\nexport default {\r\n  HEADER_1: 'HEADER_1',\r\n  HEADER_2: 'HEADER_2',\r\n  LINE: 'LINE',\r\n  INTENDENTION: 'INTENDENTION',\r\n  BOLD: 'BOLD',\r\n  QUOTE: 'QUOTE',\r\n  IMG: 'IMG',\r\n  LINK: 'LINK',\r\n  LIST: 'LIST',\r\n  VIDEO: 'VIDEO'\r\n} as ContentParser['kind']","import type { ContentParserParseLineAs, LinkLikeDictionary } from \"../contentParser.type\";\r\n\r\nimport have from \"./have\";\r\nimport secure from \"./secure\";\r\nimport regexp from \"./regexp\";\r\nimport error from \"./error\";\r\nimport benchmark from \"./benchmark\";\r\nimport kind from \"./kind\";\r\n\r\nexport default {\r\n  intendention: function() {\r\n    benchmark.countKind(kind.INTENDENTION)\r\n    return '<div class=\"intendention\"></div>'\r\n  },\r\n  header2: function(line) {\r\n    benchmark.countKind(kind.HEADER_2)\r\n    return line.replace(regexp.HEADER_REGEXP_2, '<h2 class=\"header header_2\">$1</h2>')\r\n  },\r\n  header1: function(line) {\r\n    benchmark.countKind(kind.HEADER_1)\r\n    return line.replace(regexp.HEADER_REGEXP_1, '<h1 class=\"header header_1\">$1</h1>')\r\n  },\r\n  bold: function(line) {\r\n    benchmark.countKind(kind.BOLD)\r\n    return line.replace(regexp.BOLD_REGEXP, '<b class=\"bold container_flex\">$1</b>')\r\n  },\r\n  list: function(obj, lines) {\r\n    benchmark.countKind(kind.LIST)\r\n    let parsed: string = '', listDictionary: LinkLikeDictionary = {}, entries = []\r\n\r\n    //Collect all list items\r\n    for(; obj.index < lines.length;) {\r\n      if(have.list(lines[obj.index])) {\r\n        let text = lines[obj.index].replace('+', '')\r\n\r\n        if(have.link(text)) text = this.link(text)\r\n\r\n        listDictionary[obj.index] = { text }\r\n        obj.index++\r\n      } else break\r\n    }\r\n    \r\n    entries = Object.entries(listDictionary)\r\n\r\n    for(let [_, value] of entries) {\r\n      parsed += `<li>` + value.text + `</li>`\r\n    }\r\n\r\n    return `<ul class=\"list\">` + parsed + `</ul>`\r\n  },\r\n  img: function(obj, lines) {\r\n    benchmark.countKind(kind.IMG)\r\n    let parsed: string = '', imgDictionary: LinkLikeDictionary = {}, entries = []\r\n\r\n    //Collect all images\r\n    for(; obj.index < lines.length;) {\r\n      if(have.img(lines[obj.index])) {\r\n        const [text, context, src] = lines[obj.index].replace(regexp.PAIR_BRACKETS_REGEXP, '$1').split(/;/)\r\n\r\n        if(!src && secure.URL(context)) {\r\n          imgDictionary[obj.index] = { text, link: context }\r\n        } else if(src && secure.URL(src)) {\r\n          imgDictionary[obj.index] = { text, link: src, context }\r\n        } else {\r\n          error.throw({ content: lines[obj.index], function: 'parseAs.img', message: `\"context\": ${context} or \"src\": ${src} is not defined or not secure!` })\r\n        }\r\n        \r\n        obj.index++\r\n      } else break\r\n    }\r\n    \r\n    entries = Object.entries(imgDictionary)\r\n\r\n    for(let [_, value] of entries) {\r\n      if(value.context) {\r\n        parsed += \r\n        `\r\n          <div class=\"img_with_context flex-column-center-center-medium\">\r\n            <a target=\"_blank\" href=\"` + value.link + `\"><img src=\"` + value.link + `\"` + `alt=\"` + value.text + `\"></a>\r\n            <p>` + value.context + `</p>\r\n          </div>\r\n        `\r\n        continue\r\n      }\r\n\r\n      parsed += `<a target=\"_blank\" href=\"` + value.link + `\"><img class=\"img\" src=\"` + value.link + `\"` + `alt=\"` + value.text + `\"></a>`\r\n    }\r\n\r\n    return `<div style=\"flex-wrap: wrap; margin: 1rem 0rem;\" class=\"flex-row-center-center-none\">` + parsed + `</div>`\r\n  },\r\n  link: function(line) {\r\n    benchmark.countKind(kind.LINK)\r\n    const matchers = line.match(regexp.LINK_REGEXP)\r\n\r\n    let index: number = 0\r\n    let parsed: string = line\r\n\r\n    while(matchers?.[index]) {\r\n      const link: string[] = matchers[index].replace(regexp.SQUARE_BRACKETS_REGEXP, '$1').split(/;/)\r\n\r\n      if(!secure.URL(link[1])) {\r\n         error.throw({ content: line, function: 'parseAs.link', message: `Type of URL \"${link[1]}\" is \"${typeof link[1]}\", URL is not string or URL is not secure!` })\r\n      }\r\n      \r\n      parsed = parsed.replace(matchers[index], `<a target=\"_blank\" class=\"link content_flex\" href=\"` + link[1] + `\">` + link[0] + `</a>`)\r\n      index++\r\n    }\r\n\r\n    return parsed\r\n  },\r\n  video: function(line) {\r\n    benchmark.countKind(kind.VIDEO)\r\n    let videoURL: string | undefined = line.replace(regexp.VIDEO_REGEXP, '$1')  \r\n\r\n    if(!secure.URL(videoURL)) {\r\n      error.throw({ content: line, function: 'parseAs.video', message: `Type of video URL \"${videoURL}\" is \"${typeof videoURL}\", video URL is not string or URL is not secure!` })\r\n    }\r\n    \r\n    return(\r\n      `\r\n        <div class=\"video_container flex-row-center-center-none\">\r\n          <video controls src=\"` + videoURL + `\"></video>\r\n        </div>\r\n      `\r\n    )\r\n  },\r\n  quote: function(line) {\r\n    benchmark.countKind(kind.QUOTE)\r\n    const name: string = line.replace(regexp.QUOTE_BRACKETS_REGEXP, '$1')\r\n\r\n    let text: string = line.replace(regexp.QUOTE_BRACKETS_REGEXP, '$2')\r\n\r\n    if(have.bold(text)) text = this.bold(text)\r\n\r\n    return (\r\n      `\r\n        <div class=\"quote_container flex-row-center-center-none\">\r\n          <div class=\"quote_body\">\r\n            ` + (name ? `<p class=\"quote_name\">` + name + `:</p>` : '') + `\r\n            <svg class=\"quote_svg quote_start\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 25 25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.9\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-quote\"><path d=\"M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z\"/><path d=\"M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z\"/></svg>\r\n            <p>` + text + `</p>\r\n            <svg class=\"quote_svg quote_end\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 25 25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.9\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-quote\"><path d=\"M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z\"/><path d=\"M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z\"/></svg>\r\n          </div>\r\n        </div>\r\n      `\r\n    )\r\n  }\r\n} as ContentParserParseLineAs","import type { ContentParser } from \"./contentParser.type\";\r\n\r\nimport regexp from \"./parts/regexp\";\r\nimport secure from \"./parts/secure\";\r\nimport have from \"./parts/have\";\r\nimport parseAs from \"./parts/parseAs\";\r\nimport benchmark from \"./parts/benchmark\";\r\nimport error from \"./parts/error\";\r\nimport kind from \"./parts/kind\";\r\n\r\nconst ContentParser: ContentParser = {\r\n  regexp,\r\n  secure,\r\n  have,\r\n  kind,\r\n  parseAs,\r\n  benchmark,\r\n  error\r\n}\r\n\r\nexport default ContentParser","import scss from './contentViewer.module.scss'\r\nimport './content.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { ContentViewerProps } from \"./contentViewer.type\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Pencil, X } from 'lucide-react'\r\n\r\nimport ContentParseError from './parser/contentParsingError';\r\nimport ContentParser from './parser/contentParser';\r\n\r\nexport default function ContentViewer({ content, className }: ContentViewerProps) {\r\n  const [parsed, setParsed] = useState<string>('')\r\n  const [parseError, setParseError] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setParsed(ContentParser.benchmark.getParsingBenchmarkResultAndParsedContent(content || ''))\r\n      setParseError('')\r\n    } catch(error) {\r\n      setParseError((error as ContentParseError).message)\r\n    }\r\n  }, [])\r\n\r\n  return(\r\n    <div className={`${scss.content_viewer_container} ${className}`} dangerouslySetInnerHTML={parsed ? { __html: parsed } : undefined}>\r\n      {parseError ? <div className={`${scss.content_view_parse_error} flex-row-center-center-medium`}><X/>{parseError}</div> :\r\n       parsed.length === 0 ? <div className={`${scss.content_viewer_post_empty} flex-row-center-center-big`}><Pencil /><p>Post is empty</p></div> : null}\r\n    </div>\r\n  )\r\n}","import scss from './postContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport PostHeader from \"./component/postHeader\";\r\nimport PostWrapper from \"./component/postWrapper\";\r\nimport PostTags from './component/postTags';\r\nimport ContentViewer from '../content-viewer/contentViewer';\r\n\r\nimport type { Content } from '@/global.type';\r\nimport type { PostCommentsData } from '@/page/post/page.type';\r\nimport type { PostContainerProps } from \"./postContainer.type\";\r\n\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fragment } from 'react/jsx-runtime';\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser';\r\n\r\nimport useAuth from '@/custom-hook/useAuth/useAuth';\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nexport default function PostContainer({ post, type }: PostContainerProps) {\r\n  const { id } = useParams()\r\n  const { pathname } = useLocation()\r\n  const redirect = useNavigate()\r\n\r\n  const auth = useAuth()\r\n  const searchParams = useSearchParams()\r\n  const permission = useHavePermission()\r\n\r\n  const { mutate } = useRequest({ deps: [] })\r\n\r\n  const isPostPage: boolean = pathname.search('/post') > -1\r\n  const isHomePage: boolean = pathname === '/'\r\n  const isLiked: boolean = post.likedBy.includes(auth.user?._id || '')\r\n  const isContentCreator: boolean = permission.role(['Creator']).equal('_id', post?.author?._id).permited()\r\n  const isAdmin: boolean = permission.role(['Admin']).permited()\r\n  const isHidden: boolean = post.isHidden\r\n  \r\n  const postID: string = (type === 'preview' || type === 'post') ? post._id : id!\r\n  const currPage: number = (type === 'comment') ? parseInt(searchParams.get('page') || '0') : 0\r\n  const hiddenClass: string = ((isHidden && isAdmin) || (isContentCreator && isHidden)) ? scss.post_hidden : ''\r\n\r\n  if(isHidden && isPostPage && !isAdmin && !isContentCreator && type === 'post') redirect('/')\r\n\r\n  const showSomeData = (showThe: string): void => {\r\n    searchParams.set({ 'type': showThe, 'post-id': post._id, 'list-page': 0 })\r\n  }\r\n\r\n  const likeThisPost = async (): Promise<void> => {\r\n    if(post.isHidden && !auth.user) return\r\n\r\n    const key: string[] = type === 'post' ? [`post-${post._id}`] : [`post-${postID}-comments-${currPage}`]\r\n\r\n    mutate<Content | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        const likedContent = await fetcher.get<Content>(`/${type}/${post._id}/like`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n        //Update post\r\n        if(type === 'post') return likedContent\r\n\r\n        //Update comment\r\n        const state = option.state as PostCommentsData\r\n        const comments = state.comments || []\r\n\r\n        return {...state, comments: comments.map(comment => comment._id === likedContent._id ? likedContent : comment) }\r\n      }\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(post.createdAt)\r\n    .getSortDate({\r\n       year: '[year] years [month] months ago!',\r\n       month: '[month] months [day] days ago!',\r\n       day: '[day] days [hour] hours ago!',\r\n       hour: '[hour] hours [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <Fragment>\r\n      {isHomePage && !isContentCreator && !isAdmin && isHidden ? null :\r\n        <PostWrapper className={hiddenClass}>\r\n          {(type === 'comment' || type === 'preview') ? <PostHeader tags={post.tags || []} title={post.title || ''} content={post.content} isHidden={post.isHidden} postID={postID} contentID={post._id} type={type} createdAt={post.createdAt} user={post?.author}/> : null}\r\n          {type === 'post' ? \r\n            <div className={scss.post_content_container}>\r\n              <h4 className={scss.post_title}>{post.title}</h4>\r\n              <p className={scss.post_content_date}>{createdAtDifference}</p>\r\n              <ContentViewer content={post.content}/>\r\n            </div> : null}\r\n          {type === 'preview' ? \r\n            <div className={scss.post_content_container}>\r\n              <Link to={`/post/${post._id}`}>{post.title}</Link>\r\n              <ContentViewer className={scss.post_short_view} content={post.content.slice(0, 450)}/>\r\n            </div> : null}\r\n          {type === 'comment' ? <div className={scss.post_data}><ContentViewer content={post.content}/></div> : null}\r\n            <div className={`${scss.post_tags_statistic_container} flex-row-center-space-between-medium`}>\r\n              {((type === 'post' || type === 'preview') && post.tags) ? <PostTags tags={post.tags}/> : null}\r\n              <div className='flex-row-center-normal-big'>\r\n              {type === 'preview' ? \r\n                <Fragment>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('views') : undefined} ><Eye />{post.viewedBy?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('comments') : undefined}><MessageCircle />{post.comments?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('likes') : undefined}><Heart />{post.likedBy?.length}</p>\r\n                </Fragment> : null}\r\n              {(type === 'comment' || type === 'post') && auth.user ? <button onClick={likeThisPost} className={`${isLiked ? scss.post_liked : ''} ${scss.post_statistic_data} flex-row-center-normal-small`}><Heart/>{post.likedBy.length}</button> : null}\r\n            </div>\r\n          </div>\r\n        </PostWrapper>}\r\n    </Fragment>\r\n  )\r\n}","import scss from './button.module.scss'\r\n\r\nimport type { ButtonProps } from \"./button.type\";\r\n\r\nexport default function Button({ label, className, onClick, type, isDisable }: ButtonProps) {\r\n  return(\r\n    <button type={type || 'button'} style={{ width: `${label.length * 13}px` }} disabled={isDisable} className={`${scss.button} ${className}`} onClick={onClick}>\r\n      <section className={scss.button_label}>{label}</section>\r\n    </button>\r\n  )\r\n}","import scss from '../scss/paginationListLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PaginationListLoader() {\r\n  return(\r\n    <div className='flex-row-normal-space-between-medium'>\r\n      <div className={scss.pagintion_list_button}></div>\r\n      <div className='flex-row-normal-normal-small'>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n      </div>\r\n      <div className={scss.pagintion_list_button}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreviewLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function StatisticPreviewLoader() {\r\n  return(\r\n    <div style={{ paddingTop: '1rem' }} className='flex-column-normal-normal-medium'>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport Empty from '@/component/empty/empty'\r\nimport PaginationList from \"@/component/pagination-list/paginationList\"\r\nimport PaginationListLoader from '@/component/pagination-list/component/paginationListLoader'\r\nimport StatisticPreviewLoader from './statisticPreviewLoader'\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { X } from 'lucide-react'\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport type { GetPostStatistic, StatisticPreviewProps } from '../page.type'\r\nimport type { KeyValueObject } from '@/global.type'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport firstLetterToUpperCase from \"@/lib/first-letter-to-upper/firstLetterToUpper\"\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nexport default function StatisticPreview({ type }: StatisticPreviewProps) {\r\n  const searchParams = useSearchParams()\r\n  \r\n  const postID: string = searchParams.get('post-id')!\r\n  const currPage: number = parseInt(searchParams.get('list-page') || '0')\r\n  \r\n  const iconDictionary: KeyValueObject = { views: <Eye/>, likes: <Heart/>, comments: <MessageCircle/> }\r\n\r\n  const { data, prev, isPending } = useRequest<GetPostStatistic>({ \r\n    deps: [`preview-${type}-${postID}-${currPage}`], \r\n    prev: [`preview-${type}-${postID}-${currPage === 0 ? 0 : currPage - 1}`], \r\n    request: async () => fetcher.get(`/post/preview/${type}/${postID}/${currPage}`),\r\n  })\r\n\r\n  const paginationLength: number = (prev?.pagesCount || data?.pagesCount) || 0\r\n\r\n  const closePreviewStatistic = (): void => {\r\n    searchParams.remove(['type', 'post-id', 'list-page'])\r\n  }\r\n\r\n  return(\r\n    <section className={scss.preview_container}>\r\n      <div className={`${scss.preview_body} main-content-container`}>\r\n        <div className={`${scss.preview_header} flex-row-center-space-between-none`}>\r\n          <div className='flex-row-center-normal-medium'>\r\n            {iconDictionary[type]}\r\n            <h4 className={scss.preview_type}>{firstLetterToUpperCase(type || '')}</h4>\r\n          </div>\r\n          <X onClick={closePreviewStatistic}/>\r\n        </div>\r\n        {isPending ? <PaginationListLoader/> : paginationLength > 1 ? <PaginationList pagesCount={paginationLength}/> : null}\r\n        {isPending ? <StatisticPreviewLoader/> :\r\n        <div style={{ paddingTop: paginationLength > 1 ? '0.5rem' : '0rem' }} className={scss.preview_item_count_list}>\r\n          {data?.items?.length === 0 ? <Empty label='Nothing found!'/> :\r\n          data?.items?.map(item => (\r\n            <Link to={`/user/${item._id}`} className='flex-row-center-space-between-none' key={Math.random() * 200}>\r\n              <div className='flex-row-center-normal-medium'>\r\n                <ImageComponent src={item.avatar} alt={item.name}/>\r\n                <p>{item.name}</p>\r\n              </div>\r\n              <p className={scss.preview_item_count}>{item.count}</p>\r\n            </Link>\r\n          ))}\r\n        </div>}\r\n      </div>\r\n    </section>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport Error from \"@/component/error/error\"\r\nimport Empty from \"@/component/empty/empty\"\r\nimport Button from '@/component/button/button'\r\nimport StatisticPreview from './component/statisticPreview'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport Loader from './loader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport coockie from '@/lib/coockie/coockie'\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport { Fragment } from 'react'\r\n\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest'\r\n\r\nconst contentPerLoad: number = 10\r\nconst is830px: boolean = window.matchMedia('(width <= 830px)').matches\r\n\r\nexport default function Page() {\r\n  const searchParams = useSearchParams()\r\n  \r\n  const postsCount: number = parseInt(searchParams.get('posts-count') || String(contentPerLoad))\r\n  const postStatisticPreviewType: string | null = searchParams.get('type')\r\n  \r\n  const { isFetching, isMutating, data, error, mutate } = useRequest({ \r\n    deps: ['all-posts'], \r\n    request: async () => await fetcher.get<Content[]>(`/home/${postsCount}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` }) \r\n  })\r\n\r\n  const loadMorePosts = async (): Promise<void> => {\r\n    const nextLoadCount: number = postsCount + contentPerLoad\r\n\r\n    searchParams.set({ 'posts-count': nextLoadCount })\r\n    await mutate({ key: ['all-posts'], request: async () => await fetcher.get<Content[]>(`/home/${nextLoadCount}`) })\r\n    \r\n    if(!isFetching && !isMutating) setTimeout(() => window.scrollTo({ behavior: 'smooth', top: document.body.scrollHeight }), 100)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMutating ? <MutatingLoader/> : null}\r\n      <div style={{ height: '100%', marginRight: is830px ? '0rem' : postStatisticPreviewType ? '17rem' : '0rem' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ flexGrow: 1 }} className='flex-column-normal-normal-small'>\r\n          {isFetching ? <Loader/> : \r\n          error ? <Error underText='Go back or reload the page!' code={error.code} message={error.message}/> :\r\n          data && data.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"No post would founded!\"/> : \r\n          data && \r\n          <Fragment>\r\n            {data.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n            {data.length % contentPerLoad === 0 ? <div className='flex-row-center-center-none'><Button onClick={loadMorePosts} label='Load More'/></div> : null}\r\n          </Fragment>}\r\n        </div>\r\n        {postStatisticPreviewType && <StatisticPreview type={postStatisticPreviewType}/>}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"names":["useAuth","redirect","useNavigate","userContext","useContext","AuthContext","searchParams","useSearchParams","isLogOpen","get","isRegOpen","userState","create","async","params","setSession","updateUserState","user","isAuthPending","isLoading","response","fetcher","post","apiURL","body","error","setToken","coockie","set","token","redirectURL","prev","Error","code","message","JSON","parse","out","clearError","useEffect","ImageLoader","className","style","jsx","scss","ImageComponent","memo","alt","classNames","src","styles","imageState","setImageState","useState","fetch","source","checkImageSource","Fragment","children","loader","CircleUserRound","img","display","PostContainerLoader","post_loader_container","jsxs","post_loader_avatar","width","post_loader_text","post_loader_tag","useMetadata","metadata","title","document","metaEntries","Object","entries","key","value","metadataEl","createElement","name","content","head","appendChild","Loader","containersCount","description","Array","map","_","index","underText","error_container","error_body","error_error","PostHeader","createdAt","type","contentID","postID","tags","isHidden","permission","useHavePermission","mutate","changeError","useRequest","deps","pathname","useLocation","isAdminOrCreator","roleAndEqual","_id","permited","isPostPage","search","isHomePage","isSearchPage","typeForAPI","page","parseInt","contentAction","action","role","localStorage","contentType","onPage","onPost","request","option","removedItem","firstLetterToUpperCase","Authorization","getOne","state","comments","pagesCount","length","removeCache","filter","hiddenItem","id","createdAtDifference","DateParser","getDifference","getSortDate","year","month","day","hour","minute","second","post_header","svg","height","avatar","post_author","Link","to","post_create_date","post_header_author_not_defined","UserX","post_action_button","viewBox","d","post_action_container","onClick","Trash2","Pencil","Eye","EyeOff","PostWrapper","post_wrapper_container","post_is_hidden","padding","PostTags","post_tags","tag","trim","regexp","LINK_REGEXP","IMAGE_REGEXP","QUOTE_BRACKETS_REGEXP","BOLD_REGEXP","HEADER_REGEXP_1","HEADER_REGEXP_2","VIDEO_REGEXP","DEFAULT_REGEXP","SQUARE_BRACKETS_REGEXP","PAIR_BRACKETS_REGEXP","TAG_BRACKET_REGEXP","HTTPS_PROTOCOL_REGEXP","HTML_TAG_WITH_HANDLERS_REGEXP","SCRIPT_TAG_REGEXP","secure","URL","url","lastIndex","test","DOM","line","have","bold","header1","header2","link","video","intendention","list","quote","ContentParsingError","constructor","information","super","this","throw","ContentParseError","benchmark","parsingTime","kindCount","getParsingBenchmarkResultAndParsedContent","parseStart","Date","now","parsed","ContentParser","reset","lines","split","obj","parseAs","countKind","kind","LINE","function","kindCountEntries","kindName","count","HEADER_1","HEADER_2","INTENDENTION","BOLD","QUOTE","IMG","LINK","LIST","VIDEO","replace","listDictionary","text","imgDictionary","context","matchers","match","videoURL","check","ContentViewer","setParsed","parseError","setParseError","content_viewer_container","dangerouslySetInnerHTML","__html","content_view_parse_error","X","content_viewer_post_empty","PostContainer","useParams","auth","isLiked","likedBy","includes","isContentCreator","equal","author","isAdmin","currPage","hiddenClass","post_hidden","showSomeData","showThe","post_content_container","post_title","post_content_date","post_short_view","slice","post_data","post_tags_statistic_container","post_statistic_data","viewedBy","MessageCircle","Heart","likedContent","comment","post_liked","Button","label","isDisable","disabled","button","button_label","PaginationListLoader","pagintion_list_button","StatisticPreviewLoader","paddingTop","preview_loader","StatisticPreview","iconDictionary","views","likes","data","isPending","paginationLength","preview_container","preview_body","preview_header","preview_type","remove","PaginationList","preview_item_count_list","items","Empty","item","preview_item_count","Math","random","is830px","window","matchMedia","matches","postsCount","String","postStatisticPreviewType","isFetching","isMutating","MutatingLoader","marginRight","flexGrow","flexCenterCenter","nextLoadCount","setTimeout","scrollTo","behavior","top","scrollHeight"],"mappings":"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"}