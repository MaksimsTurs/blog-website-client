{"version":3,"file":"home.js","sources":["../../../../src/custom-hook/use-auth/useAuth.ts","../../../../src/component/loader/post-container-loader/postContainerLoader.tsx","../../../../src/page/home/loader.tsx","../../../../src/component/post-container/component/postHeader.tsx","../../../../src/component/post-container/component/postWrapper.tsx","../../../../src/component/post-container/component/postTags.tsx","../../../../src/component/post-container/postContainer.tsx","../../../../src/component/pagination-list/component/paginationListLoader.tsx","../../../../src/page/home/component/statisticPreviewLoader.tsx","../../../../src/lib/number/number.ts","../../../../src/lib/number/props/formatNum.ts","../../../../src/page/home/component/statisticPreview.tsx","../../../../src/page/home/page.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./authProvider\";\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\";\r\nimport coockie from \"@/lib/coockie/coockie\";\r\n\r\nimport type { CreateParams, UserSessionData } from \"./useAuth.type\";\r\n\r\nimport useSearchParams from \"../use-search-params/useSearchParams\";\r\n\r\nexport default function useAuth() {\r\n  const redirect = useNavigate()\r\n  const userContext = useContext(AuthContext)\r\n  const searchParams = useSearchParams()\r\n\r\n  const isLogOpen: string | null = searchParams.get('login-modal')\r\n  const isRegOpen: string | null = searchParams.get('registration-modal')\r\n\r\n  return {\r\n    ...userContext?.userState,\r\n    create: async function(params: CreateParams): Promise<void> {\r\n      try {\r\n        if(params.setSession) return userContext?.updateUserState({ user: params.setSession, isAuthPending: false, isLoading: false })\r\n          \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: true })\r\n        \r\n        const response = await fetcher.post<UserSessionData>(params.apiURL!, params.body)\r\n        \r\n        userContext?.updateUserState({ isAuthPending: false, isLoading: false, error: undefined, user: response })\r\n\r\n        if(params?.setToken) coockie.set('PR_TOKEN', response.token)\r\n        if(params?.redirectURL) redirect(params.redirectURL)\r\n      } catch(error) {\r\n        userContext!.updateUserState!(prev => ({...prev, isAuthPending: false, isLoading: false, error: error instanceof Error ? { code: 503, message: 'Service Unavailable!' } : JSON.parse(error as string) }))\r\n      }\r\n    },\r\n    out: function(): void {\r\n      userContext?.updateUserState({ isAuthPending: false, isLoading: false })\r\n      coockie.set('PR_TOKEN', 'undefined')\r\n    },\r\n    clearError: function(): void {\r\n      useEffect(() => {\r\n        userContext?.updateUserState(prev => ({...prev, error: undefined }))\r\n      }, [isLogOpen, isRegOpen])\r\n    }\r\n  }\r\n}","import scss from './postContainerLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PostContainerLoader() {\r\n  return(\r\n    <div className={`${scss.post_loader_container} main-content-container flex-column-normal-normal-medium`}>\r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div className={scss.post_loader_avatar}></div>\r\n        <div className='flex-column-normal-normal-medium'>\r\n          <div style={{ width: '4rem' }} className={scss.post_loader_text}></div>\r\n          <div style={{ width: '7rem' }} className={scss.post_loader_text}></div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '11rem' }} className={scss.post_loader_text}></div>\r\n      <div className='flex-column-normal-normal-medium'>\r\n        <div style={{ width: '50%' }} className={scss.post_loader_text}></div>\r\n        <div style={{ width: '20%' }} className={scss.post_loader_text}></div>\r\n      </div>\r\n      <div  className='flex-row-normal-space-between-none'>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n        </div>\r\n        <div className='flex-row-normal-normal-medium'>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>\r\n          <div className={scss.post_loader_tag}></div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainerLoader from \"@/component/loader/post-container-loader/postContainerLoader\";\r\n\r\nimport type { LoaderProps } from './page.type';\r\n\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata';\r\n\r\nexport default function Loader({ containersCount }: LoaderProps) {\r\n  useMetadata({ title: 'Home', description: 'Hier kannst du alle letzt geschriebene posts ansehen.' })\r\n  return <div className='flex-column-normal-normal-small'>{[...Array(containersCount || 3)].map((_, index) => <PostContainerLoader key={index}/>)}</div>\r\n}","import scss from '../scss/postHeader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport { PostHeaderProps } from '../postContainer.type'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Pencil, Trash2, UserX } from 'lucide-react'\r\n\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission'\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser'\r\nimport fetcher from '@/lib/fetcher/fetcher'\r\nimport coockie from '@/lib/coockie/coockie'\r\nimport localStorage from '@/lib/local-storage/localStorage'\r\nimport CharacterArray from '@/lib/string/string'\r\n\r\nimport type { Content } from '@/global.type'\r\nimport type { PostCommentsData } from '@/page/post/page.type'\r\n\r\nimport ImageComponent from '@/component/image-component/image'\r\n\r\nexport default function PostHeader({ user, createdAt, type, contentID, postID, content, tags, title, isHidden }: PostHeaderProps) {\r\n  const permission = useHavePermission()\r\n  const searchParams = useSearchParams()\r\n  const redirect = useNavigate()\r\n  const { mutate, changeError } = useRequest({ deps: [] })\r\n  const { pathname } = useLocation()\r\n  \r\n  const isAdminOrCreator: boolean = permission.roleAndEqual(['Admin', 'Creator'], '_id', user?._id).permited()\r\n\r\n  const isPostPage: boolean = pathname.search('/post/') > -1\r\n  const isHomePage: boolean = pathname.search('/') > -1\r\n  const isSearchPage: boolean = pathname.search('/search') > -1\r\n\r\n  const typeForAPI = type === 'preview' ? 'post' : type\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n\r\n  const contentAction = (action: 'hidde' | 'show' | 'remove' | 'edit'): void => {\r\n    const key: string[] = \r\n      isPostPage && type === 'comment' ? \r\n        [`post-${postID}-comments-${searchParams.get('page') || 0}`] :\r\n      isHomePage ? ['all-posts'] :\r\n        []\r\n\r\n    //User have no permmissin\r\n    if(!permission.role(['Creator', 'Admin']).permited()) {\r\n      return changeError({ code: 403, message: 'You have no edit and remove permission!' })\r\n    }\r\n\r\n    if(action === 'edit') {\r\n      if(permission.role(['Creator']).permited()) {\r\n        localStorage.set(contentID, { content, tags, title, isHidden, isEdit: true, contentType: typeForAPI, onPage: page, onPost: postID })\r\n        return redirect(`/write-post?content-id=${contentID}`)\r\n      } \r\n\r\n      if(permission.role(['Admin']).permited()) {\r\n        return redirect(`/admin/${typeForAPI}?id=${contentID}&${typeForAPI}-edit-modal=true`)\r\n      }\r\n    }\r\n\r\n    mutate<Content[] | PostCommentsData>({\r\n      key,\r\n      request: async (option) => {\r\n        //Remove item handlers\r\n        if(action === 'remove') {\r\n          const removedItem = await fetcher.get<Content>(`/admin/remove/${CharacterArray.firstLetterToUpperCase(typeForAPI)}/${contentID}`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n          \r\n          //Remove some comment from post page\r\n          if(isPostPage && type === 'comment') {\r\n            const state = option.state as PostCommentsData || { comments: [], pagesCount: 0 }\r\n\r\n            if(state.comments.length === 1 && state.pagesCount >= 1) {\r\n              for(let index: number = state.pagesCount - 1; index >= 0; index--) if(index !== page) option.removeCache(`post-${postID}-comments-${index}`)\r\n              redirect(`/post/${postID}?page=${+page - 1}`)\r\n              return { pagesCount: 0, comments: [] }            \r\n            }\r\n            return {...state, comments: state.comments!.filter(content => content._id !== removedItem._id) }\r\n          } \r\n          \r\n          //Remove some post from home page\r\n          if(isHomePage) {\r\n            const state = option.state as Content[] || []\r\n            return state.filter(content => content._id !== removedItem._id)\r\n          }\r\n        }\r\n\r\n        //Hidde item handlers\r\n        const hiddenItem = await fetcher.post<Content>(`/admin/${typeForAPI}/update`, { id: contentID, isHidden: action === 'hidde' }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n        \r\n        //Hidde some comment from post page\r\n        if(isPostPage) {\r\n          const state = option.state as PostCommentsData || { pagesCount: 0, comments: [] }\r\n          return {...state, comments: state.comments!.map(content => content._id === hiddenItem._id ? {...content, ...hiddenItem } : content) }\r\n        }\r\n\r\n        //Hidde post from home page\r\n        const state = option.state as Content[] || []\r\n        return state.map(content => content._id === hiddenItem._id ? hiddenItem : content)\r\n      }\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(createdAt)\r\n    .getSortDate({\r\n       year: '[year] year [month] months ago!',\r\n       month: '[month] month [day] days ago!',\r\n       day: '[day] day [hour] hours ago!',\r\n       hour: '[hour] hour [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <div className={`${scss.post_header} flex-row-center-space-between-none`}>\r\n      {user ? \r\n      <div className='flex-row-center-normal-medium'>\r\n         <ImageComponent styles={{ svg: { width: '2rem', height: '2rem' }, img: { width: '2rem', height: '2rem' }}} src={user?.avatar} alt={user?.name || 'User avatar'}/>\r\n         <div className={scss.post_author}>\r\n           <Link to={`/user/${user?._id}`}>{user?.name}</Link>\r\n           <p className={scss.post_create_date}>{createdAtDifference}</p>  \r\n        </div>\r\n      </div> :\r\n      <div className={`${scss.post_header_author_not_defined} flex-row-center-normal-medium`}>\r\n        <UserX/>\r\n        <p>Author is possibly deleted!</p>\r\n      </div>}\r\n      {(isAdminOrCreator && !isSearchPage) ?\r\n      <button className={scss.post_action_button}>\r\n        <svg viewBox=\"0 0 128 512\"><path d=\"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z\"/></svg>\r\n        <ul className={`${scss.post_action_container} flex-column-normal-normal-none`}>\r\n          <li onClick={() => contentAction('remove')} className='flex-row-center-normal-medium'><Trash2 /><p>Remove</p></li>\r\n          <li onClick={() => contentAction('edit')} className='flex-row-center-normal-medium'><Pencil /><p>Edit</p></li>\r\n          <li onClick={() => contentAction(isHidden ? 'show' : 'hidde')} className='flex-row-center-normal-medium'>{isHidden ? <Eye /> : <EyeOff />}<p>{isHidden ? 'Show' : 'Hidden'}</p></li>\r\n        </ul>\r\n      </button> : null}\r\n    </div>\r\n  )\r\n}","import scss from '../scss/postWrapper.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PropsWithChildren } from \"react\"\r\nimport type { PostWrapperProps } from '../postContainer.type'\r\n\r\nimport { EyeOff } from 'lucide-react'\r\n\r\nexport default function PostWrapper({ children, className }: PropsWithChildren<PostWrapperProps>) {\r\n  return (\r\n    <section className={`${scss.post_wrapper_container} ${className} main-content-container`}>\r\n      {className ? \r\n       <div className={`${scss.post_is_hidden} flex-row-center-center-medium`}>\r\n         <EyeOff/>\r\n         <p>Hidden</p>\r\n       </div> : null}\r\n      <div style={{ padding: '1rem' }}>{children}</div>\r\n    </section>\r\n  )\r\n}","import scss from '../scss/postTags.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { PostTagsProps } from '../postContainer.type'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostTags({ tags }: PostTagsProps) {\r\n  return <div className={`${scss.post_tags} flex-row-normal-normal-medium`}>{tags.map(tag => tag.trim() ? <Link to={`/search?tag=${tag}`} key={tag}>{tag}</Link> : null)}</div>\r\n}","import scss from './postContainer.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport PostHeader from \"./component/postHeader\";\r\nimport PostWrapper from \"./component/postWrapper\";\r\nimport PostTags from './component/postTags';\r\nimport ContentViewer from '../content-viewer/contentViewer';\r\n\r\nimport type { Content } from '@/global.type';\r\nimport type { PostCommentsData } from '@/page/post/page.type';\r\nimport type { PostContainerProps } from \"./postContainer.type\";\r\n\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fragment } from 'react/jsx-runtime';\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport DateParser from '@/lib/date-parser/dateParser';\r\n\r\nimport useAuth from '@/custom-hook/use-auth/useAuth';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useHavePermission from '@/custom-hook/use-permitor/useHavePermission';\r\nimport useMutate from '@/custom-hook/use-request/useMutate';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts';\r\n\r\nexport default function PostContainer({ post, type }: PostContainerProps) {\r\n  const { id } = useParams()\r\n  const { pathname } = useLocation()\r\n  const redirect = useNavigate()\r\n\r\n  const auth = useAuth()\r\n  const searchParams = useSearchParams()\r\n  const permission = useHavePermission()\r\n\r\n  const isPostPage: boolean = pathname.search('/post') > -1\r\n  const isHomePage: boolean = pathname === '/'\r\n  const isLiked: boolean = post.likedBy.includes(auth.user?._id || '')\r\n  const isContentCreator: boolean = permission.role(['Creator']).equal('_id', post?.author?._id).permited()\r\n  const isAdmin: boolean = permission.role(['Admin']).permited()\r\n  const isHidden: boolean = post.isHidden\r\n\r\n  \r\n  const postID: string = (type === 'preview' || type === 'post') ? post._id : id!\r\n  const currPage: number = (type === 'comment') ? parseInt(searchParams.get('page') || '0') : 0\r\n  const hiddenClass: string = ((isHidden && isAdmin) || (isContentCreator && isHidden)) ? scss.post_hidden : ''\r\n  const key: string = type === 'post' ? `post-${post._id}` : `post-${postID}-comments-${currPage}`\r\n\r\n  const { mutate } = useMutate<Content | PostCommentsData>(key)\r\n\r\n  if(isHidden && isPostPage && !isAdmin && !isContentCreator && type === 'post') redirect('/')\r\n\r\n  const showSomeData = (showThe: string): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['STATISTIC-TO-CHECK']]: showThe, [URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID']]: post._id, [URL_SEARCH_PARAMS['LIST-PAGE']]: 0 })\r\n  }\r\n\r\n  const likeThisPost = async (): Promise<void> => {\r\n    if(post.isHidden && !auth.user) return\r\n\r\n    mutate( async (option) => {\r\n      const likedContent = await fetcher.get<Content>(`/${type}/${post._id}/like`, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` })\r\n\r\n      //Update post\r\n      if(type === 'post') return likedContent\r\n\r\n      //Update comment\r\n      const state = option.state as PostCommentsData\r\n      const comments = state.comments || []\r\n\r\n      return {...state, comments: comments.map(comment => comment._id === likedContent._id ? likedContent : comment) }\r\n    })\r\n  }\r\n\r\n  const createdAtDifference: string = DateParser\r\n    .getDifference(post.createdAt)\r\n    .getSortDate({\r\n       year: '[year] years [month] months ago!',\r\n       month: '[month] months [day] days ago!',\r\n       day: '[day] days [hour] hours ago!',\r\n       hour: '[hour] hours [minute] minutes ago!',\r\n       minute: '[minute] minutes [second] seconds ago!',\r\n       second: '[second] seconds ago!'\r\n    })\r\n\r\n  return(\r\n    <Fragment>\r\n      {isHomePage && !isContentCreator && !isAdmin && isHidden ? null :\r\n        <PostWrapper className={hiddenClass}>\r\n          {(type === 'comment' || type === 'preview') ? <PostHeader tags={post.tags || []} title={post.title || ''} content={post.content} isHidden={post.isHidden} postID={postID} contentID={post._id} type={type} createdAt={post.createdAt} user={post?.author}/> : null}\r\n          {type === 'post' ? \r\n            <div className={scss.post_content_container}>\r\n              <h4 className={scss.post_title}>{post.title}</h4>\r\n              <p className={scss.post_content_date}>{createdAtDifference}</p>\r\n              <ContentViewer content={post.content}/>\r\n            </div> : null}\r\n          {type === 'preview' ? \r\n            <div className={scss.post_content_container}>\r\n              <Link to={`/post/${post._id}`}>{post.title}</Link>\r\n              <ContentViewer className={scss.post_short_view} content={post.content.slice(0, 450)}/>\r\n            </div> : null}\r\n          {type === 'comment' ? <div className={scss.post_data}><ContentViewer content={post.content}/></div> : null}\r\n            <div className={`${scss.post_tags_statistic_container} flex-row-center-space-between-medium`}>\r\n              {((type === 'post' || type === 'preview') && post.tags) ? <PostTags tags={post.tags}/> : null}\r\n              <div className='flex-row-center-normal-big'>\r\n              {type === 'preview' ? \r\n                <Fragment>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('views') : undefined} ><Eye />{post.viewedBy?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('comments') : undefined}><MessageCircle />{post.comments?.length}</p>\r\n                  <p className={`${scss.post_statistic_data} flex-row-center-normal-small`} onClick={isHomePage ? () => showSomeData('likes') : undefined}><Heart />{post.likedBy?.length}</p>\r\n                </Fragment> : null}\r\n              {(type === 'comment' || type === 'post') && auth.user ? <button onClick={likeThisPost} className={`${isLiked ? scss.post_liked : ''} ${scss.post_statistic_data} flex-row-center-normal-small`}><Heart/>{post.likedBy.length}</button> : null}\r\n            </div>\r\n          </div>\r\n        </PostWrapper>}\r\n    </Fragment>\r\n  )\r\n}","import scss from '../scss/paginationListLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function PaginationListLoader() {\r\n  return(\r\n    <div style={{ width: '100%' }} className='flex-row-normal-space-between-medium'>\r\n      <div className={scss.pagintion_list_button}></div>\r\n      <div className='flex-row-normal-normal-small'>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n        <div className={scss.pagintion_list_button}></div>\r\n      </div>\r\n      <div className={scss.pagintion_list_button}></div>\r\n    </div>\r\n  )\r\n}","import scss from '../scss/statisticPreviewLoader.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nexport default function StatisticPreviewLoader() {\r\n  return(\r\n    <div style={{ paddingTop: '1rem' }} className='flex-column-normal-normal-medium'>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n      <div className={scss.preview_loader}></div>\r\n    </div>\r\n  )\r\n}","import formatNum from \"./props/formatNum\"\r\n\r\nconst Integer = {\r\n  formatNum\r\n}\r\n\r\nexport default Integer","export default function formatNum(num: number) {\r\n  if(num > 9) return num\r\n  return `0${num}`\r\n}","import scss from '../scss/statisticPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport Empty from '@/component/empty/empty'\r\nimport PaginationList from \"@/component/pagination-list/paginationList\"\r\nimport PaginationListLoader from '@/component/pagination-list/component/paginationListLoader'\r\nimport StatisticPreviewLoader from './statisticPreviewLoader'\r\nimport ImageComponent from '@/component/image-component/image'\r\nimport LocalError from '@/component/errors/local-error/localError'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { X } from 'lucide-react'\r\nimport { Eye, Heart, MessageCircle } from 'lucide-react';\r\n\r\nimport type { GetPostStatistic, StatisticPreviewProps } from '../page.type'\r\nimport type { KeyValueObject } from '@/global.type'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\nimport Integer from '@/lib/number/number'\r\nimport CharacterArray from '@/lib/string/string'\r\n\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nconst iconDictionary: KeyValueObject = { views: <Eye/>, likes: <Heart/>, comments: <MessageCircle/> }\r\nconst emptyTextDictionary: KeyValueObject = { views: 'No body have viewed!', likes: 'No body have liked!', comments: 'No body have commented!' }\r\n\r\nexport default function StatisticPreview({ statisticToPreview }: StatisticPreviewProps) {\r\n  const searchParams = useSearchParams()\r\n  \r\n  const postID: string = searchParams.get(URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID'])!\r\n  const currPage: number = parseInt(searchParams.get(URL_SEARCH_PARAMS['LIST-PAGE']) || '0')\r\n  \r\n  const { data, prev, isPending, error } = useRequest<GetPostStatistic>({ \r\n    deps: [`preview-${statisticToPreview}-${postID}-${currPage}`], \r\n    prev: [`preview-${statisticToPreview}-${postID}-${currPage === 0 ? 0 : currPage - 1}`], \r\n    request: async () => fetcher.get(`/post/preview/${statisticToPreview}/${postID}/${currPage}`),\r\n  })\r\n\r\n  const pagesCount: number = (prev?.pagesCount || data?.pagesCount) || 0\r\n\r\n  const closePostStatisticModal = (): void => {\r\n    searchParams.remove([URL_SEARCH_PARAMS['STATISTIC-TO-CHECK'], URL_SEARCH_PARAMS['STATISTIC-PREVIEW-POST-ID'], URL_SEARCH_PARAMS['LIST-PAGE']])\r\n  }\r\n\r\n  return(\r\n    <section className={scss.preview_container}>\r\n      <div className={`${scss.preview_body} main-content-container`}>\r\n        <div className={`${scss.preview_header} flex-row-center-space-between-none`}>\r\n          <div className='flex-row-center-normal-medium'>\r\n            {iconDictionary[statisticToPreview]}\r\n            <h4 className={scss.preview_type}>{CharacterArray.firstLetterToUpperCase(statisticToPreview || '')}</h4>\r\n          </div>\r\n          <X onClick={closePostStatisticModal}/>\r\n        </div>\r\n        {isPending ? <PaginationListLoader/> : pagesCount > 1 ? <PaginationList pagesCount={pagesCount}/> : null}\r\n        {isPending ? <StatisticPreviewLoader/> :\r\n        <div style={{ paddingTop: pagesCount > 1 ? '0.5rem' : '0rem' }} className={scss.preview_item_count_list}>\r\n          {error ? <LocalError error={error.message}/> :\r\n          (data?.items?.length === 0 || !data) ? <Empty option={{ size: 'SMALL' }} label={emptyTextDictionary[statisticToPreview]}/> :\r\n          data!.items!.map(item => (\r\n            <Link to={`/user/${item._id}`} className={`${scss.preview_item} flex-row-center-space-between-none`} key={Math.random() * 200}>\r\n              <div className='flex-row-center-normal-medium'>\r\n                <ImageComponent src={item.avatar} alt={item.name}/>\r\n                <p>{item.name}</p>\r\n              </div>\r\n              <p className={scss.preview_item_count}>{Integer.formatNum(item.count)}</p>\r\n            </Link>\r\n          ))}\r\n        </div>}\r\n      </div>\r\n    </section>\r\n  )\r\n}","import '@/scss/global.scss'\r\n\r\nimport PostContainer from \"@/component/post-container/postContainer\"\r\nimport PageError from \"@/component/errors/page-error/pageError\"\r\nimport Empty from \"@/component/empty/empty\"\r\nimport Button from '@/component/button/button'\r\nimport StatisticPreview from './component/statisticPreview'\r\nimport MutatingLoader from '@/component/loader/mutatig-loader/mutatingLoader'\r\nimport LocalError from '@/component/errors/local-error/localError'\r\nimport Loader from './loader'\r\n\r\nimport fetcher from \"@/lib/fetcher/fetcher\"\r\n\r\nimport type { Content } from \"@/global.type\"\r\n\r\nimport { Fragment, useState } from 'react'\r\n\r\nimport useRequest from '@/custom-hook/use-request/useRequest'\r\nimport useMutate from '@/custom-hook/use-request/useMutate'\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams'\r\n\r\nimport { AUTHORIZATION_OBJECT, URL_SEARCH_PARAMS } from '@/conts'\r\n\r\nconst contentPerLoad: number = 10\r\n\r\nexport default function Page() {\r\n  const [postCount, setPostCount] = useState<number>(10)\r\n\r\n  const searchParams = useSearchParams()\r\n\r\n  const statisticPreviewType: string | null = searchParams.get(URL_SEARCH_PARAMS['STATISTIC-TO-CHECK'])\r\n  \r\n  const { mutate, ...otherMutateProps } = useMutate('all-posts')\r\n  const { isFetching, isMutating, data, error } = useRequest({ \r\n    deps: ['all-posts'], \r\n    request: async () => await fetcher.get<Content[]>(`/home/${postCount}`, AUTHORIZATION_OBJECT) \r\n  })\r\n\r\n  const loadMorePosts = async (): Promise<void> => {\r\n    const nextLoadCount: number = postCount + contentPerLoad\r\n\r\n    setPostCount(prev => prev + contentPerLoad)\r\n    \r\n    await mutate(async () => await fetcher.get<Content[]>(`/home/${nextLoadCount}`))\r\n    \r\n    if(!isFetching && !isMutating) setTimeout(() => window.scrollTo({ behavior: 'smooth', top: document.body.scrollHeight }), 100)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMutating && <MutatingLoader/>}\r\n      <div style={{ height: '100%' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ flexGrow: 1 }} className='flex-column-normal-normal-small'>\r\n          {isFetching ? <Loader/> : \r\n          error ? <PageError error={error}/> :\r\n          data && data.length === 0 ? <Empty option={{ flexCenterCenter: true }} label=\"No post would founded!\"/> : \r\n          data && \r\n          <Fragment>\r\n            {data.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n            {otherMutateProps.error && <LocalError error={otherMutateProps.error.message}/>}\r\n            {data.length % 10 === 0 ? <div className='flex-row-center-center-none'><Button onClick={loadMorePosts} label='Load More'/></div> : null}\r\n          </Fragment>}\r\n        </div>\r\n        {statisticPreviewType && <StatisticPreview statisticToPreview={statisticPreviewType}/>}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"names":["useAuth","redirect","useNavigate","userContext","useContext","AuthContext","searchParams","useSearchParams","isLogOpen","get","isRegOpen","userState","create","async","params","setSession","updateUserState","user","isAuthPending","isLoading","response","fetcher","post","apiURL","body","error","setToken","coockie","set","token","redirectURL","prev","Error","code","message","JSON","parse","out","clearError","useEffect","PostContainerLoader","className","scss","post_loader_container","children","jsxs","jsx","post_loader_avatar","style","width","post_loader_text","post_loader_tag","Loader","containersCount","useMetadata","title","description","Array","map","_","index","PostHeader","createdAt","type","contentID","postID","content","tags","isHidden","permission","useHavePermission","mutate","changeError","useRequest","deps","pathname","useLocation","isAdminOrCreator","roleAndEqual","_id","permited","isPostPage","search","isHomePage","isSearchPage","typeForAPI","page","parseInt","contentAction","action","key","role","localStorage","isEdit","contentType","onPage","onPost","request","option","removedItem","CharacterArray","firstLetterToUpperCase","Authorization","getOne","state","comments","pagesCount","length","removeCache","filter","hiddenItem","id","createdAtDifference","DateParser","getDifference","getSortDate","year","month","day","hour","minute","second","post_header","ImageComponent","styles","svg","height","img","src","avatar","alt","name","post_author","Link","to","post_create_date","post_header_author_not_defined","UserX","post_action_button","viewBox","d","post_action_container","onClick","Trash2","Pencil","Eye","EyeOff","PostWrapper","post_wrapper_container","post_is_hidden","padding","PostTags","post_tags","tag","trim","PostContainer","useParams","auth","isLiked","likedBy","includes","isContentCreator","equal","author","isAdmin","currPage","hiddenClass","post_hidden","useMutate","showSomeData","showThe","URL_SEARCH_PARAMS","Fragment","post_content_container","post_title","post_content_date","ContentViewer","post_short_view","slice","post_data","post_tags_statistic_container","post_statistic_data","viewedBy","MessageCircle","Heart","likedContent","comment","post_liked","PaginationListLoader","pagintion_list_button","StatisticPreviewLoader","paddingTop","preview_loader","Integer$1","formatNum","num","iconDictionary","views","likes","emptyTextDictionary","StatisticPreview","statisticToPreview","data","isPending","preview_container","preview_body","preview_header","preview_type","X","remove","PaginationList","preview_item_count_list","LocalError","items","item","preview_item","preview_item_count","Integer","count","Math","random","Empty","size","label","postCount","setPostCount","useState","statisticPreviewType","otherMutateProps","isFetching","isMutating","AUTHORIZATION_OBJECT","MutatingLoader","flexGrow","PageError","flexCenterCenter","Button","nextLoadCount","setTimeout","window","scrollTo","behavior","top","document","scrollHeight"],"mappings":"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"}