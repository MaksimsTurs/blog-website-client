{"version":3,"file":"search.js","sources":["../../../../src/component/tag-preview/tagPreview.tsx","../../../../src/component/input/text-tag-input/tag.ts","../../../../src/component/input/text-tag-input/textTagInput.tsx","../../../../src/lib/remove-duplicate/removeDuplicate.ts","../../../../src/page/search/component/sortInput.tsx","../../../../src/page/search/page.tsx"],"sourcesContent":["import scss from './tagPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { TagPreviewProps } from './/tagPreview.type.ts'\r\n\r\nexport default function TagPreview({ removeTag, tags }: TagPreviewProps) {\r\n  return (\r\n    <ul className={`${scss.tag_list} flex-row-flex-start-normal-small`}>\r\n      {tags.map(tag => {\r\n        const toRender: string = tag.replace(/\\-\\d*/g, '')\r\n        return toRender.trim() ? <li onClick={() => removeTag(tag)} className={scss.tag_item} key={tag}>{toRender}</li> : null\r\n      })}\r\n    </ul>\r\n  )\r\n} ","export default {\r\n  createTagArray: function(str: string) {\r\n    return str.split(/,/).map(tag => tag.length === 0 ? tag : `${tag}-${Math.round(Math.random() * 9999)}`)\r\n  },\r\n  removeTagKeys: function(tags: string[]) {\r\n    return tags.map(tag => tag.trim().replace(/\\-\\d*/g, ''))\r\n  }\r\n}","import type { TextTagInputProps } from \"../input.type\";\r\n\r\nimport { useState, Fragment, SyntheticEvent } from \"react\";\r\n\r\nimport TextInput from \"../textInput/textInput\";\r\nimport TagPreview from \"@/component/tag-preview/tagPreview\";\r\n\r\nimport tag from \"./tag\";\r\nimport removeDuplicate from \"@/lib/remove-duplicate/removeDuplicate\";\r\n\r\nexport default function TextTagInput({ getTags, placeholder, value }: TextTagInputProps) {\r\n  const [tags, setTags] = useState<string[]>(value || [])\r\n\r\n  const removeTag = (tag: string): void => {\r\n    setTags(prev => {\r\n      const newTagState: string[] = removeDuplicate(prev, tag)\r\n      getTags(newTagState)\r\n      return newTagState\r\n    })\r\n  }\r\n\r\n  const insertNewTag = (event: SyntheticEvent<HTMLInputElement>): void => {\r\n    const newTagState: string[] = tag.createTagArray(event.currentTarget.value)\r\n    setTags(newTagState)\r\n    getTags(tag.removeTagKeys(newTagState))\r\n  }\r\n  \r\n  return(\r\n    <Fragment>\r\n      <TextInput name=\"tags\" onInput={insertNewTag} placeholder={placeholder} value={tag.removeTagKeys(tags).join(', ')}/>\r\n      <TagPreview removeTag={removeTag} tags={tags}/>\r\n    </Fragment>\r\n  )\r\n}","export default function removeDuplicate(array: any[], duplicate: any) {\r\n  let withoutDuplicate: any[] = []\r\n\r\n  for(let index: number = 0; index < array.length; index++) {\r\n    if(array[index] === duplicate) continue\r\n    withoutDuplicate.push(array[index])\r\n  }\r\n\r\n  return withoutDuplicate\r\n}","import TextInput from '@/component/input/textInput/textInput'\r\n\r\nimport type { SortInputProps } from '../page.type'\r\n\r\nexport default function SortInput({ changeSortData, sortData, sortDataName }: SortInputProps) {\r\n  return(\r\n    <TextInput \r\n      name={sortDataName} \r\n      placeholder={`Find by ${sortDataName}...`} \r\n      value={sortData[sortDataName]} \r\n      onInput={(event) => changeSortData(sortDataName, event.currentTarget.value)}/>\r\n    )\r\n}","import scss from './page.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport HomeLoader from '../home/loader';\r\nimport Empty from '@/component/empty/empty';\r\nimport Error from '@/component/error/error';\r\nimport Button from '@/component/button/button'\r\nimport Pagination from '@/component/pagination/pagination'\r\nimport PostContainer from '@/component/post-container/postContainer'\r\nimport SortInput from './component/sortInput';\r\nimport PaginationLoader from '@/component/pagination/component/paginationLoader';\r\nimport TextTagInput from '@/component/input/text-tag-input/textTagInput';\r\n\r\nimport { ArrowDownWideNarrow, ArrowUpNarrowWide, Eye, Filter, Heart, MessageCircle } from 'lucide-react';\r\nimport { Fragment, useRef, useState } from 'react';\r\n\r\nimport type { SortData, SortOption, SortedPosts } from './page.type';\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useOutsideClick from '@/custom-hook/use-outside-click/useOutsideClick';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nimport { URL_SEARCH_PARAMS } from '@/conts';\r\n\r\nconst sortOptions = [\r\n  { name: 'Likes', icon: <Heart size={17}/> },\r\n  { name: 'Views', icon: <Eye size={17}/> },\r\n  { name: 'Comments', icon: <MessageCircle size={17}/> }\r\n]\r\n\r\nconst is930px: boolean = window.matchMedia('(width <= 930px)').matches\r\n\r\nexport default function Search() {\r\n  const [sortData, setSortData] = useState<SortData>({ author: '', content: '', title: '' })\r\n  const [sortOption, setSortOption] = useState<SortOption>()\r\n  \r\n  const searchParams = useSearchParams()\r\n\r\n  const selectedTag: string | null = searchParams.get('tag')\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n  \r\n  const tagRef = useRef<string[]>(selectedTag ? [selectedTag] : [])\r\n  const modalContainerRef = useRef<HTMLDivElement>(null)\r\n  \r\n  const isOpen: boolean = !is930px ? true : useOutsideClick(URL_SEARCH_PARAMS['IS-FILTER-MODAL-OPEN'], modalContainerRef)  \r\n\r\n  const { isPending, data, error, request } = useRequest<SortedPosts>({ \r\n    deps: [`sort-${page}`],\r\n    noCache: true,\r\n    request: async () => await fetcher.post<SortedPosts>(`/sort/${page}`, {...sortData, sortOption, tags: tagRef.current }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` }) \r\n  })\r\n\r\n  const changeSort = (name: string): void => {\r\n    if(sortOption?.[name] === 'descending') setSortOption({ [name]: 'ascending' })\r\n    else if(sortOption?.[name] === 'ascending') setSortOption({ [name]: undefined })\r\n    else setSortOption({ [name]: 'descending' })\r\n  }\r\n\r\n  const getTags = (tags: string[]): void => {\r\n    tagRef.current = tags\r\n  }\r\n\r\n  const changeSortData = (name: string, value: any): void => {\r\n    setSortData(prev => ({...prev, [name]: value }))\r\n  }\r\n\r\n  const resetSort = (): void => {\r\n    setSortData({ author: '', content: '', title: '' })\r\n    setSortOption(undefined)\r\n    searchParams.set({ 'page': 0 })\r\n  }\r\n\r\n  const openFilterModal = (): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['IS-FILTER-MODAL-OPEN']]: true })\r\n  }\r\n\r\n  const getSorted = (): void => {\r\n    if(page === 0) request()\r\n    else searchParams.set({ 'page': 0 })\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {error ? <Error code={error.code} message={error.message}/> : \r\n      <div style={{ height: '100%' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ width: '100%', minHeight: '100%' }} className='flex-column-normal-normal-small'>\r\n          {is930px ? <Filter onClick={openFilterModal} className={scss.search_filter_modal_button}/> : null}\r\n          {isPending ? <PaginationLoader/> : data && data.pagesCount > 1 ? <Pagination pagesCount={data.pagesCount}/> : null}\r\n          {isPending ? <HomeLoader/> : \r\n          data && data.posts.length === 0 ? <Empty option={{ flexCenterCenter: true, height: 'FULL' }} label='Nothing found!'/> : \r\n          data && data.posts.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n          {isPending ? <PaginationLoader/> : data && data.pagesCount > 1 ? <Pagination pagesCount={data.pagesCount}/> : null}\r\n        </div>\r\n        <div ref={modalContainerRef} className={isOpen ? scss.search_filter_container : `${scss.search_filter_container} ${scss.search_filter_container_hidden}`}>\r\n          <div className='main-content-container flex-column-normal-normal-small'>\r\n            <p className={scss.search_sort_type_title}>Sort by</p>\r\n            <div className='flex-column-normal-normal-small'>\r\n              {sortOptions.map(option => (\r\n                <button\r\n                  key={option.name}\r\n                  onClick={() => changeSort(option.name)}\r\n                  className={sortOption?.[option.name] ? `${scss.search_sort_button} ${scss.search_sort_button_active} flex-row-center-center-medium` : `${scss.search_sort_button} flex-row-center-center-medium`}>\r\n                  {option.icon}\r\n                  <p>{option.name}</p>\r\n                  {sortOption?.[option.name] === 'descending' ? <ArrowDownWideNarrow size={14}/> : sortOption?.[option.name] === 'ascending' ?  <ArrowUpNarrowWide size={14}/> : null }\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='content'/>\r\n            <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='author'/>\r\n            <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='title'/>\r\n            <TextTagInput getTags={getTags} placeholder='Find by tags'/>\r\n            <div className={`${scss.search_filter_body_buttons} flex-row-normal-normal-small`}>\r\n              <Button onClick={getSorted} label=\"Sort\"/>\r\n              <Button onClick={resetSort} label=\"Reset\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["TagPreview","removeTag","tags","jsx","className","scss","tag_list","children","map","tag","toRender","replace","trim","onClick","tag_item","createTagArray","str","split","length","Math","round","random","removeTagKeys","TextTagInput","getTags","placeholder","value","setTags","useState","Fragment","TextInput","name","onInput","event","newTagState","currentTarget","join","prev","array","duplicate","withoutDuplicate","index","push","removeDuplicate","SortInput","changeSortData","sortData","sortDataName","sortOptions","icon","Heart","size","Eye","MessageCircle","is930px","window","matchMedia","matches","setSortData","author","content","title","sortOption","setSortOption","searchParams","useSearchParams","selectedTag","get","page","parseInt","tagRef","useRef","modalContainerRef","isOpen","useOutsideClick","URL_SEARCH_PARAMS","isPending","data","error","request","useRequest","deps","noCache","async","fetcher","post","current","Authorization","coockie","getOne","Error","code","message","jsxs","style","height","width","minHeight","Filter","set","PaginationLoader","pagesCount","Pagination","HomeLoader","posts","Empty","option","flexCenterCenter","label","PostContainer","type","_id","ref","changeSort","ArrowDownWideNarrow","ArrowUpNarrowWide","Button"],"mappings":"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"}