{"version":3,"file":"search.js","sources":["../../../../src/page/search/component/sortInput.tsx","../../../../src/page/search/page.tsx"],"sourcesContent":["import TextInput from '@/component/input/textInput/textInput'\r\n\r\nimport type { SortInputProps } from '../page.type'\r\n\r\nexport default function SortInput({ changeSortData, sortData, sortDataName }: SortInputProps) {\r\n  return <TextInput name={sortDataName} placeholder={`Sort by ${sortDataName}...`} defaultValue={sortData[sortDataName]} onInput={(event) => changeSortData(sortDataName, event.currentTarget.value)}/>\r\n}","import scss from './page.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport HomeLoader from '../home/loader';\r\nimport Empty from '@/component/empty/empty';\r\nimport Error from '@/component/error/error';\r\nimport Button from '@/component/button/button'\r\nimport Pagination from '@/component/pagination/pagination'\r\nimport PostContainer from '@/component/post-container/postContainer'\r\nimport SortInput from './component/sortInput';\r\nimport PaginationLoader from '@/component/pagination/component/paginationLoader';\r\nimport TagPreview from '@/component/tag-preview/tagPreview';\r\n\r\nimport { ArrowDownWideNarrow, ArrowUpNarrowWide, Eye, Heart, MessageCircle } from 'lucide-react';\r\nimport { Fragment, useState } from 'react';\r\n\r\nimport type { SortData, SortOption, SortedPosts } from './page.type';\r\n\r\nimport useRequest from '@/custom-hook/_use-request/_useRequest';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\nimport coockie from '@/lib/coockie/coockie';\r\n\r\nconst sortOptions = [\r\n  { name: 'Likes', icon: <Heart size={17}/> },\r\n  { name: 'Views', icon: <Eye size={17}/> },\r\n  { name: 'Comments', icon: <MessageCircle size={17}/> }\r\n]\r\n\r\nexport default function Search() {\r\n  const searchParams = useSearchParams()\r\n\r\n  const selectedTag: string | null = searchParams.get('tag')\r\n\r\n  const [sortData, setSortData] = useState<SortData>({ tags: selectedTag ? [selectedTag] : [] , author: '', content: '', title: '' })\r\n  const [sortOption, setSortOption] = useState<SortOption>()\r\n\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n\r\n  const { isPending, data, error, request } = useRequest<SortedPosts>({ \r\n    deps: [`sort-${page}`],\r\n    noCache: true,\r\n    request: async () => await fetcher.post<SortedPosts>(`/sort/${page}`, {...sortData, sortOption }, { 'Authorization': `Bearer ${coockie.getOne('PR_TOKEN')}` }) \r\n  })\r\n\r\n  const changeSort = (name: string): void => {\r\n    if(sortOption?.[name] === 'descending') setSortOption({ [name]: 'ascending' })\r\n    else if(sortOption?.[name] === 'ascending') setSortOption({ [name]: undefined })\r\n    else setSortOption({ [name]: 'descending' })\r\n  }\r\n\r\n  const removeTag = (_tag: string): void => {\r\n    setSortData(prev => ({...prev, tags: sortData.tags.filter((_, index) => index !== prev.tags.indexOf(_tag)) }))\r\n  }\r\n\r\n  const changeSortData = (name: string, value: any): void => {\r\n    if(name === 'tags') setSortData(prev => ({...prev, tags: value.split(',') }))\r\n    else setSortData(prev => ({...prev, [name]: value }))\r\n  }\r\n\r\n  const resetSort = (): void => {\r\n    setSortData({ tags: [], author: '', content: '', title: '' })\r\n    setSortOption(undefined)\r\n    searchParams.set({ 'page': 0 })\r\n  }\r\n\r\n  const getSorted = (): void => {\r\n    if(page === 0) request()\r\n    else searchParams.set({ 'page': 0 })\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {error ? <Error code={error.code} message={error.message}/> : \r\n      <div className='flex-row-normal-normal-medium'>\r\n        <div style={{ width: '100%', height: '100%' }} className='flex-column-normal-normal-small'>\r\n          {data ? <Pagination pagesCount={data.pagesCount}/> : <PaginationLoader/>}\r\n          {isPending ? <HomeLoader/> : \r\n          data && data.posts.length === 0 ? <Empty option={{ flexCenterCenter: true }} label='Nothing found!'/> : \r\n          data && data.posts.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n          {data ? <Pagination pagesCount={data.pagesCount}/> : <PaginationLoader/>}\r\n        </div>\r\n        <div className={`${scss.search_filter_container} main-content-container flex-column-normal-normal-small`}>\r\n          <p className={scss.search_sort_type_title}>Sort by</p>\r\n          <div className='flex-row-normal-normal-small'>\r\n            {sortOptions.map(option => (\r\n              <button\r\n                key={option.name}\r\n                onClick={() => changeSort(option.name)}\r\n                className={sortOption?.[option.name] ? `${scss.search_sort_button} ${scss.search_sort_button_active} flex-row-center-center-medium` : `${scss.search_sort_button} flex-row-center-center-medium`}>\r\n                {option.icon}\r\n                <p>{option.name}</p>\r\n                {sortOption?.[option.name] === 'descending' ? <ArrowDownWideNarrow size={14}/> : sortOption?.[option.name] === 'ascending' ?  <ArrowUpNarrowWide size={14}/> : null }\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='content'/>\r\n          <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='author'/>\r\n          <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='title'/>\r\n          <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='tags'/>\r\n          <TagPreview removeTag={removeTag} tags={sortData.tags}/>\r\n          <div className={`${scss.search_filter_body_buttons} flex-row-normal-normal-small`}>\r\n            <Button onClick={getSorted} label=\"Sort\"/>\r\n            <Button onClick={resetSort} label=\"Reset\"/>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["SortInput","changeSortData","sortData","sortDataName","jsx","TextInput","name","placeholder","defaultValue","onInput","event","currentTarget","value","sortOptions","icon","Heart","size","Eye","MessageCircle","Search","searchParams","useSearchParams","selectedTag","get","setSortData","useState","tags","author","content","title","sortOption","setSortOption","page","parseInt","isPending","data","error","request","useRequest","deps","noCache","async","fetcher","post","Authorization","coockie","getOne","prev","split","Fragment","children","Error","code","message","jsxs","className","style","width","height","Pagination","pagesCount","PaginationLoader","HomeLoader","posts","length","Empty","option","flexCenterCenter","label","map","PostContainer","type","_id","scss","onClick","changeSort","ArrowDownWideNarrow","ArrowUpNarrowWide","TagPreview","removeTag","_tag","filter","_","index","indexOf","Button","set"],"mappings":"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"}