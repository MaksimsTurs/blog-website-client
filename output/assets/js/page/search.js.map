{"version":3,"file":"search.js","sources":["../../../../src/component/tag-preview/tagPreview.tsx","../../../../src/component/input/text-tag-input/tag.ts","../../../../src/component/input/text-tag-input/textTagInput.tsx","../../../../src/page/search/component/sortInput.tsx","../../../../src/page/search/page.tsx"],"sourcesContent":["import scss from './tagPreview.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport type { TagPreviewProps } from './/tagPreview.type.ts'\r\n\r\nexport default function TagPreview({ removeTag, tags }: TagPreviewProps) {\r\n  return (\r\n    <ul className={`${scss.tag_list} flex-row-flex-start-normal-small`}>\r\n      {tags.map(tag => {\r\n        const toRender: string = tag.replace(/\\-\\d*/g, '')\r\n        return toRender.trim() ? <li onClick={() => removeTag(tag)} className={scss.tag_item} key={tag}>{toRender}</li> : null\r\n      })}\r\n    </ul>\r\n  )\r\n} ","export default {\r\n  createTagArray: function(str: string) {\r\n    return str.split(/,/).map(tag => tag.length === 0 ? tag : `${tag}-${Math.round(Math.random() * 9999)}`)\r\n  },\r\n  removeTagKeys: function(tags: string[]) {\r\n    return tags.map(tag => tag.trim().replace(/\\-\\d*/g, ''))\r\n  }\r\n}","import type { TextTagInputProps } from \"../input.type\";\r\nimport type { SyntheticEvent } from \"react\";\r\n\r\nimport { useState, Fragment, forwardRef, useImperativeHandle } from \"react\";\r\n\r\nimport TextInput from \"../textInput/textInput\";\r\nimport TagPreview from \"@/component/tag-preview/tagPreview\";\r\n\r\nimport tag from \"./tag\";\r\n\r\nimport Array from \"@/lib/array/array\";\r\n\r\nexport default forwardRef(function({ placeholder, value }: TextTagInputProps, ref) {\r\n  const [tags, setTags] = useState<string[]>(value || [])\r\n\r\n  const removeTag = (tag: string): void => {\r\n    setTags(prev => {\r\n      const newTagState: string[] = Array.removeDuplicates(prev, [tag])\r\n      return newTagState\r\n    })\r\n  }\r\n\r\n  const insertNewTag = (event: SyntheticEvent<HTMLInputElement>): void => {\r\n    const newTagState: string[] = tag.createTagArray(event.currentTarget.value)\r\n    setTags(newTagState)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    clear: () => setTags([]),\r\n    value: tags.filter(tag => tag)\r\n  }), [tags])\r\n  \r\n  return(\r\n    <Fragment>\r\n      <TextInput name=\"tags\" onInput={insertNewTag} placeholder={placeholder} value={tag.removeTagKeys(tags).join(', ')}/>\r\n      <TagPreview removeTag={removeTag} tags={tags}/>\r\n    </Fragment>\r\n  )\r\n})","import TextInput from '@/component/input/textInput/textInput'\r\n\r\nimport type { SortInputProps } from '../page.type'\r\n\r\nexport default function SortInput({ changeSortData, sortData, sortDataName }: SortInputProps) {\r\n  return(\r\n    <TextInput \r\n      name={sortDataName} \r\n      placeholder={`Find by ${sortDataName}...`} \r\n      value={sortData[sortDataName]} \r\n      onInput={(event) => changeSortData(sortDataName, event.currentTarget.value)}/>\r\n    )\r\n}","import scss from './page.module.scss'\r\nimport '@/scss/global.scss'\r\n\r\nimport HomeLoader from '../home/loader';\r\nimport Empty from '@/component/empty/empty';\r\nimport PageError from '@/component/errors/page-error/pageError';\r\nimport Button from '@/component/buttons/button/button'\r\nimport Pagination from '@/component/pagination/pagination'\r\nimport PostContainer from '@/component/post-container/postContainer'\r\nimport SortInput from './component/sortInput';\r\nimport PaginationLoader from '@/component/pagination/component/paginationLoader';\r\nimport TextTagInput from '@/component/input/text-tag-input/textTagInput';\r\n\r\nimport { ArrowDownWideNarrow, ArrowUpNarrowWide, Eye, Filter, Heart, MessageCircle } from 'lucide-react';\r\nimport { Fragment, useRef, useState } from 'react';\r\n\r\nimport type { SortData, SortOption, SortedPosts } from './page.type';\r\nimport type { CustomInputsRef } from '@/global.type';\r\n\r\nimport useRequest from '@/custom-hook/use-request/useRequest';\r\nimport useSearchParams from '@/custom-hook/use-search-params/useSearchParams';\r\nimport useOutsideClick from '@/custom-hook/use-outside-click/useOutsideClick';\r\nimport useMetadata from '@/custom-hook/use-metadata/useMetadata';\r\n\r\nimport fetcher from '@/lib/fetcher/fetcher';\r\n\r\nimport { URL_SEARCH_PARAMS, AUTHORIZATION_OBJECT } from '@/conts';\r\n\r\nconst sortOptions = [\r\n  { name: 'Likes', icon: <Heart size={17}/> },\r\n  { name: 'Views', icon: <Eye size={17}/> },\r\n  { name: 'Comments', icon: <MessageCircle size={17}/> }\r\n]\r\n\r\nconst is930px: boolean = window.matchMedia('(width <= 930px)').matches\r\n\r\nexport default function Search() {\r\n  useMetadata({ title: 'Finden', description: 'Hier kannst du posts mit gegebenen sortierung optionen finden.' })\r\n\r\n  const [sortData, setSortData] = useState<SortData>({ author: '', content: '', title: '' })\r\n  const [sortOption, setSortOption] = useState<SortOption>()\r\n  \r\n  const searchParams = useSearchParams()\r\n\r\n  const selectedTag: string | null = searchParams.get('tag')\r\n  const page: number = parseInt(searchParams.get('page') || '0')\r\n  \r\n  const modalContainerRef = useRef<HTMLDivElement>(null)\r\n  const sortTagRef = useRef<CustomInputsRef<string[]>>()\r\n  \r\n  const isOpen: boolean = !is930px ? true : useOutsideClick(URL_SEARCH_PARAMS['IS-FILTER-MODAL-OPEN'], modalContainerRef)  \r\n\r\n  const { isPending, data, error, request } = useRequest<SortedPosts>({ \r\n    deps: [`sort-${page}`],\r\n    noCache: true,\r\n    request: async () => await fetcher.post<SortedPosts>(`/sort/${page}`, {...sortData, sortOption, tags: sortTagRef.current?.value }, AUTHORIZATION_OBJECT) \r\n  })\r\n\r\n  const changeSort = (name: string): void => {\r\n    if(sortOption?.[name] === 'descending') setSortOption({ [name]: 'ascending' })\r\n    else if(sortOption?.[name] === 'ascending') setSortOption({ [name]: undefined })\r\n    else setSortOption({ [name]: 'descending' })\r\n  }\r\n\r\n  const changeSortData = (name: string, value: any): void => {\r\n    setSortData(prev => ({...prev, [name]: value }))\r\n  }\r\n\r\n  const resetSort = (): void => {\r\n    setSortData({ author: '', content: '', title: '' })\r\n    setSortOption(undefined)\r\n    searchParams.set({ 'page': 0 })\r\n    if(sortTagRef.current) sortTagRef.current.clear()\r\n  }\r\n\r\n  const openFilterModal = (): void => {\r\n    searchParams.set({ [URL_SEARCH_PARAMS['IS-FILTER-MODAL-OPEN']]: true })\r\n  }\r\n\r\n  const getSorted = (): void => {\r\n    if(page === 0) request()\r\n    else searchParams.set({ 'page': 0 })\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      {error ? <PageError error={error}/> : \r\n      <div style={{ height: '100%' }} className='flex-row-normal-normal-medium'>\r\n        <div style={{ width: '100%', minHeight: '100%' }} className='flex-column-normal-normal-small'>\r\n          {is930px ? <Filter onClick={openFilterModal} className={scss.search_filter_modal_button}/> : null}\r\n          {isPending ? <PaginationLoader/> : data && data.pagesCount > 1 ? <Pagination pagesCount={data.pagesCount}/> : null}\r\n          {isPending ? <HomeLoader/> : \r\n          data && data.posts.length === 0 ? <Empty option={{ flexCenterCenter: true, height: 'FULL' }} label='Nothing found!'/> : \r\n          data && data.posts.map(post => <PostContainer key={post._id} post={post} type=\"preview\"/>)}\r\n          {isPending ? <PaginationLoader/> : data && data.pagesCount > 1 ? <Pagination pagesCount={data.pagesCount}/> : null}\r\n        </div>\r\n        <div ref={modalContainerRef} className={isOpen ? scss.search_filter_container : `${scss.search_filter_container} ${scss.search_filter_container_hidden}`}>\r\n          <div className='main-content-container flex-column-normal-normal-small'>\r\n            <p className={scss.search_sort_type_title}>Sort by</p>\r\n            <div className='flex-column-normal-normal-small'>\r\n              {sortOptions.map(option => (\r\n                <button\r\n                  key={option.name}\r\n                  onClick={() => changeSort(option.name)}\r\n                  className={sortOption?.[option.name] ? `${scss.search_sort_button} ${scss.search_sort_button_active} flex-row-center-center-medium` : `${scss.search_sort_button} flex-row-center-center-medium`}>\r\n                  {option.icon}\r\n                  <p>{option.name}</p>\r\n                  {sortOption?.[option.name] === 'descending' ? <ArrowDownWideNarrow size={14}/> : sortOption?.[option.name] === 'ascending' ?  <ArrowUpNarrowWide size={14}/> : null }\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='content'/>\r\n            <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='author'/>\r\n            <SortInput changeSortData={changeSortData} sortData={sortData} sortDataName='title'/>\r\n            <TextTagInput ref={sortTagRef} value={[selectedTag || '', ...sortTagRef.current?.value || []]} placeholder='Find by tags'/>\r\n            <div className={`${scss.search_filter_body_buttons} flex-row-normal-normal-small`}>\r\n              <Button onClick={getSorted} label=\"Sort\"/>\r\n              <Button onClick={resetSort} label=\"Reset\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </Fragment>\r\n  )\r\n}"],"names":["TagPreview","removeTag","tags","jsx","className","scss","children","map","tag","toRender","replace","trim","onClick","str","split","length","Math","round","random","forwardRef","placeholder","value","ref","setTags","useState","useImperativeHandle","clear","filter","Fragment","TextInput","name","onInput","event","newTagState","currentTarget","join","prev","Array","removeDuplicates","SortInput","changeSortData","sortData","sortDataName","sortOptions","icon","Heart","size","Eye","MessageCircle","is930px","window","matchMedia","matches","useMetadata","title","description","setSortData","author","content","sortOption","setSortOption","searchParams","useSearchParams","selectedTag","get","page","parseInt","modalContainerRef","useRef","sortTagRef","isOpen","useOutsideClick","URL_SEARCH_PARAMS","isPending","data","error","request","useRequest","deps","noCache","async","fetcher","post","current","AUTHORIZATION_OBJECT","PageError","jsxs","style","height","width","minHeight","Filter","set","PaginationLoader","pagesCount","Pagination","HomeLoader","posts","Empty","option","flexCenterCenter","label","PostContainer","type","_id","changeSort","ArrowDownWideNarrow","ArrowUpNarrowWide","TextTagInput","Button"],"mappings":"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"}